com.mapbox.mapboxsdk.geometry.LatLngBounds: double latitudeNorth
com.mapbox.mapboxsdk.style.sources.Source: void checkThread()
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus[] values()
com.google.gson.JsonArray: boolean contains(com.google.gson.JsonElement)
com.mapbox.geojson.FeatureCollection$GsonTypeAdapter: com.google.gson.TypeAdapter stringAdapter
com.mapbox.geojson.gson.GeometryGeoJson: GeometryGeoJson()
com.google.android.gms.internal.measurement.zzca$zzb: int zzf
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
com.google.firestore.v1.TargetChange: int CAUSE_FIELD_NUMBER
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: java.lang.Object nativeGetBearingImageSize()
android.support.v4.media.session.PlaybackStateCompat: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetAccuracyRadiusTransition()
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessage(java.lang.String,byte[],int)
com.mapbox.android.telemetry.CrashEvent: java.lang.String isSilent
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: com.google.android.exoplayer2.decoder.OutputBuffer$Owner owner
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCachedAppInstanceId(com.google.android.gms.internal.measurement.zzw)
android.support.v4.media.session.MediaSessionCompat$QueueItem: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
com.google.android.gms.internal.measurement.zzcd$zza: com.google.android.gms.internal.measurement.zzcd$zza zzh
com.google.firestore.v1.StructuredQuery: com.google.firestore.v1.StructuredQuery$Filter where_
com.mapbox.mapboxsdk.style.sources.Source: Source()
com.mapbox.mapboxsdk.Mapbox: boolean isAccessTokenValid(java.lang.String)
com.mapbox.geojson.LineString: com.mapbox.geojson.LineString fromPolyline(java.lang.String,int)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setSafeBrowsingEnabled(boolean)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeResetPosition()
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: ModuleDescriptor()
com.mapbox.geojson.LineString$GsonTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.google.firebase.analytics.FirebaseAnalytics
com.mapbox.mapboxsdk.net.NativeConnectivityListener: long nativePtr
androidx.legacy.content.WakefulBroadcastReceiver: WakefulBroadcastReceiver()
com.google.android.gms.dynamite.descriptors.com.google.firebase.auth.ModuleDescriptor
com.google.android.gms.internal.measurement.zzca$zzb: java.lang.String zze
com.mapbox.geojson.GeometryCollection: com.mapbox.geojson.GeometryCollection fromJson(java.lang.String)
com.mapbox.mapboxsdk.style.sources.UnknownSource: UnknownSource(long)
com.google.android.gms.internal.firebase-auth-api.zzes
com.google.firebase.firestore.core.DocumentViewChange$Type: com.google.firebase.firestore.core.DocumentViewChange$Type[] values()
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(java.lang.reflect.Type)
com.google.android.gms.internal.firebase-auth-api.zzvx: android.os.Parcelable$Creator CREATOR
com.mapbox.geojson.gson.GeoJsonAdapterFactory
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] values()
com.mapbox.mapboxsdk.geometry.LatLng: double latitude
com.mapbox.mapboxsdk.geometry.LatLngBounds: double longitudeWest
com.mapbox.mapboxsdk.maps.NativeMapView: void onDidFinishLoadingMap()
com.mapbox.geojson.BaseCoordinatesTypeAdapter
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getGmpAppId(com.google.android.gms.internal.measurement.zzw)
com.google.gson.reflect.TypeToken: java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type,java.lang.Class[])
com.google.android.gms.internal.firebase-auth-api.zzif
com.mapbox.android.telemetry.Attachment: java.lang.String event
io.flutter.embedding.engine.FlutterJNI: void nativeDestroy(long)
io.flutter.embedding.engine.FlutterJNI: void nativeInit(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
com.google.gson.JsonElement: boolean isJsonPrimitive()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetIconHaloBlurTransition()
com.mapbox.mapboxsdk.style.layers.HeatmapLayer: void nativeSetHeatmapOpacityTransition(long,long)
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadStartEvent: java.lang.String styleURL
com.google.android.gms.internal.firebase-auth-api.zzja
com.google.firebase.auth.ActionCodeSettings: android.os.Parcelable$Creator CREATOR
com.google.firebase.firestore.remote.ConnectivityMonitor$NetworkStatus: com.google.firebase.firestore.remote.ConnectivityMonitor$NetworkStatus valueOf(java.lang.String)
com.mapbox.mapboxsdk.offline.OfflineTilePyramidRegionDefinition: boolean includeIdeographs
com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: void setDebugLoggingEnabled(boolean)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.firestore.v1.WriteRequest: int WRITES_FIELD_NUMBER
com.google.firebase.messaging.FirebaseMessagingService: FirebaseMessagingService()
com.mapbox.geojson.PointAsCoordinatesTypeAdapter
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: java.lang.String getModel()
com.google.android.gms.internal.measurement.zzhy: java.util.Map zzd
com.google.type.LatLng: com.google.type.LatLng DEFAULT_INSTANCE
com.google.android.gms.internal.measurement.zzbv$zzc: com.google.android.gms.internal.measurement.zzbv$zzd zze
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
com.mapbox.mapboxsdk.style.layers.LineLayer: void nativeSetLineOffsetTransition(long,long)
androidx.appcompat.widget.ActionBarOverlayLayout
com.mapbox.android.telemetry.CrashEvent: java.lang.String sdkVersion
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageResponseCallback(long,int,java.nio.ByteBuffer,int)
com.mapbox.geojson.FeatureCollection: FeatureCollection(java.lang.String,com.mapbox.geojson.BoundingBox,java.util.List)
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent$2
com.google.firestore.v1.Target: com.google.firestore.v1.Target DEFAULT_INSTANCE
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
com.mapbox.mapboxsdk.maps.Image
com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberType: com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberType[] values()
com.google.gson.JsonArray: java.lang.Number getAsNumber()
com.google.android.gms.internal.firebase-auth-api.zzgq
com.mapbox.geojson.MultiPoint: java.lang.String toString()
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: float getResolution()
com.mapbox.mapboxsdk.style.layers.RasterLayer
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
com.mapbox.geojson.utils.PolylineUtils: boolean SIMPLIFY_DEFAULT_HIGHEST_QUALITY
com.mapbox.android.telemetry.Environment: com.mapbox.android.telemetry.Environment valueOf(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setUserId(java.lang.String,long)
com.google.android.gms.internal.firebase-auth-api.zzfk
com.google.android.gms.maps.GoogleMapOptions: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzia: int zze
com.google.firebase.provider.FirebaseInitProvider
io.flutter.view.AccessibilityViewEmbedder: android.util.SparseArray flutterIdToOrigin
com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator: com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator valueOf(java.lang.String)
com.mapbox.mapboxsdk.http.NativeHttpRequest: void nativeOnFailure(int,java.lang.String)
com.google.firestore.v1.WriteRequest: int DATABASE_FIELD_NUMBER
com.mapbox.mapboxsdk.snapshotter.MapSnapshot: com.mapbox.mapboxsdk.geometry.LatLng latLngForPixel(android.graphics.PointF)
com.google.android.exoplayer2.source.TrackGroupArray: android.os.Parcelable$Creator CREATOR
com.mapbox.android.telemetry.VisionObjectDetectionEvent: double getVehicleLatitude()
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.util.List getComponents()
com.mapbox.mapboxsdk.style.layers.RasterLayer: java.lang.Object nativeGetRasterContrast()
com.mapbox.mapboxsdk.style.layers.HeatmapLayer: java.lang.Object nativeGetHeatmapColor()
com.google.firebase.firestore.proto.NoDocument: java.lang.String name_
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
com.mapbox.mapboxsdk.style.sources.UnknownSource: void initialize()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getSafeBrowsingEnabled()
com.google.firestore.v1.Precondition: com.google.protobuf.Parser PARSER
com.google.firestore.v1.BatchGetDocumentsRequest: java.lang.Object consistencySelector_
com.google.android.gms.location.LocationAvailability: android.os.Parcelable$Creator CREATOR
com.google.android.datatransport.cct.CctBackendFactory: CctBackendFactory()
com.mapbox.geojson.Polygon: com.mapbox.geojson.BoundingBox bbox()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
com.google.android.gms.internal.firebase-auth-api.zzev
com.google.firebase.auth.FirebaseAuthRegistrar: FirebaseAuthRegistrar()
com.google.firestore.v1.Target: int ONCE_FIELD_NUMBER
com.mapbox.geojson.LineString: com.mapbox.geojson.LineString fromJson(java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
com.google.firebase.firestore.proto.Target: int RESUME_TOKEN_FIELD_NUMBER
com.mapbox.android.telemetry.LocationEvent: void writeToParcel(android.os.Parcel,int)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextHaloBlur()
com.mapbox.geojson.LineString: com.mapbox.geojson.LineString fromLngLats(com.mapbox.geojson.MultiPoint)
com.mapbox.android.telemetry.LocationEvent: java.lang.String source
com.mapbox.mapboxsdk.maps.NativeMapView: com.mapbox.geojson.Feature[] nativeQueryRenderedFeaturesForPoint(float,float,java.lang.String[],java.lang.Object[])
com.mapbox.mapboxsdk.style.layers.CircleLayer: void nativeSetCircleTranslateTransition(long,long)
com.google.gson.JsonElement: float getAsFloat()
com.mapbox.mapboxsdk.style.layers.HeatmapLayer
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
com.mapbox.mapboxsdk.style.sources.GeoJsonSource: void finalize()
io.flutter.embedding.android.FlutterActivity: FlutterActivity()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconPitchAlignment()
com.google.android.gms.internal.measurement.zzcd$zzj: int zzc
com.google.firebase.firestore.Query$Direction: com.google.firebase.firestore.Query$Direction valueOf(java.lang.String)
com.mapbox.mapboxsdk.style.layers.CircleLayer: java.lang.Object nativeGetCircleStrokeWidth()
io.flutter.app.FlutterApplication
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.mapbox.mapboxsdk.style.sources.VectorSource: void initialize(java.lang.String,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: java.lang.String[] computePlatformResolvedLocale(java.lang.String[])
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertServiceWorkerSettings(java.lang.Object)
com.mapbox.mapboxsdk.style.layers.RasterLayer: void nativeSetRasterOpacityTransition(long,long)
com.mapbox.mapboxsdk.geometry.LatLngBounds: android.os.Parcelable$Creator CREATOR
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
com.google.firestore.v1.Write: int UPDATE_MASK_FIELD_NUMBER
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier valueOf(java.lang.String)
com.google.gson.typeadapters.RuntimeTypeAdapterFactory: com.google.gson.typeadapters.RuntimeTypeAdapterFactory registerSubtype(java.lang.Class,java.lang.String)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeUpdatePolygon(long,com.mapbox.mapboxsdk.annotations.Polygon)
okhttp3.Protocol: okhttp3.Protocol[] values()
com.mapbox.mapboxsdk.offline.OfflineManager: void finalize()
com.mapbox.mapboxsdk.storage.FileSource$ResourcesCachePathChangeCallback: void onError(java.lang.String)
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: java.lang.Object nativeGetBearing()
com.mapbox.mapboxsdk.style.types.Formatted: Formatted(com.mapbox.mapboxsdk.style.types.FormattedSection[])
io.flutter.embedding.engine.FlutterJNI: io.flutter.view.FlutterCallbackInformation nativeLookupCallbackInformation(long)
org.chromium.support_lib_boundary.FeatureFlagHolderBoundaryInterface: java.lang.String[] getSupportedFeatures()
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.google.firestore.v1.DocumentTransform$FieldTransform: java.lang.String fieldPath_
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: long getNumberOfTilesCompleted()
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: int COLORSPACE_BT709
com.mapbox.mapboxsdk.style.layers.HillshadeLayer: java.lang.Object nativeGetHillshadeAccentColor()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRect(int,int,int,int)
androidx.appcompat.widget.AbsActionBarView: void setVisibility(int)
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzau
com.google.firebase.firestore.FirebaseFirestoreException$Code: com.google.firebase.firestore.FirebaseFirestoreException$Code valueOf(java.lang.String)
com.mapbox.geojson.BaseGeometryTypeAdapter: com.google.gson.TypeAdapter stringAdapter
com.google.firestore.v1.DocumentDelete: java.lang.String document_
com.mapbox.mapboxsdk.style.sources.Source: java.lang.String nativeGetAttribution()
com.mapbox.geojson.gson.GeoJsonAdapterFactory$GeoJsonAdapterFactoryIml: GeoJsonAdapterFactory$GeoJsonAdapterFactoryIml()
com.mapbox.mapboxsdk.style.layers.HeatmapLayer: java.lang.Object nativeGetHeatmapWeight()
com.mapbox.mapboxsdk.style.layers.CircleLayer: java.lang.Object nativeGetCircleColor()
io.flutter.view.AccessibilityViewEmbedder: java.util.Map originToFlutterId
com.google.firebase.iid.Registrar: com.google.firebase.iid.internal.FirebaseInstanceIdInternal lambda$getComponents$1$Registrar(com.google.firebase.components.ComponentContainer)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode valueOf(java.lang.String)
com.google.firebase.firestore.util.Logger$Level: com.google.firebase.firestore.util.Logger$Level valueOf(java.lang.String)
com.google.firebase.auth.GithubAuthCredential: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.Write: int VERIFY_FIELD_NUMBER
com.mapbox.geojson.LineString$GsonTypeAdapter: LineString$GsonTypeAdapter(com.google.gson.Gson)
com.google.android.gms.internal.firebase-auth-api.zzvz: android.os.Parcelable$Creator CREATOR
io.flutter.view.FlutterView: float getDevicePixelRatio()
com.google.android.gms.common.Feature: android.os.Parcelable$Creator CREATOR
com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()
com.mapbox.mapboxsdk.style.sources.Source: java.lang.String nativeGetId()
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: java.lang.String getEventName()
com.google.android.gms.common.internal.ResolveAccountRequest: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
io.flutter.embedding.engine.FlutterJNI: long performNativeAttach(io.flutter.embedding.engine.FlutterJNI,boolean)
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: void nativeAddImages(com.mapbox.mapboxsdk.maps.Image[])
io.flutter.embedding.engine.FlutterJNI: boolean isAttached()
com.mapbox.mapboxsdk.offline.OfflineRegionDefinition: com.mapbox.mapboxsdk.geometry.LatLngBounds getBounds()
com.google.android.gms.internal.firebase-auth-api.zzep: com.google.android.gms.internal.firebase-auth-api.zzep zzf
androidx.appcompat.widget.AbsActionBarView: int getContentHeight()
com.google.gson.typeadapters.RuntimeTypeAdapterFactory: com.google.gson.typeadapters.RuntimeTypeAdapterFactory registerSubtype(java.lang.Class)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzcd$zze: com.google.android.gms.internal.measurement.zzjs zzk
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeUpdateMarker(long,double,double,java.lang.String)
com.mapbox.geojson.ListOfDoublesCoordinatesTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadStartEvent: java.lang.String getEventName()
com.mapbox.geojson.MultiPoint$GsonTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
io.flutter.view.AccessibilityViewEmbedder: boolean onAccessibilityHoverEvent(int,android.view.MotionEvent)
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent: java.util.List getAttributes()
com.google.firestore.v1.Write: int CURRENT_DOCUMENT_FIELD_NUMBER
com.mapbox.mapboxsdk.log.Logger: void w(java.lang.String,java.lang.String)
io.flutter.embedding.engine.FlutterOverlaySurface: FlutterOverlaySurface(int,android.view.Surface)
com.google.android.gms.internal.measurement.zzcd$zzg: com.google.android.gms.internal.measurement.zzig zzg
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values()
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent$1: PerformanceEvent$1(com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent)
com.google.firebase.analytics.ktx.FirebaseAnalyticsKtxRegistrar
com.mapbox.mapboxsdk.module.telemetry.PhoneState: boolean isConnectedToWifi(android.content.Context)
com.mapbox.geojson.MultiLineString: int hashCode()
com.mapbox.android.telemetry.VisionObjectDetectionEvent: java.lang.Double readDoubleIfNotNull(android.os.Parcel)
com.mapbox.android.accounts.v1.MapboxAccounts: long getNow()
com.mapbox.geojson.GeometryCollection: com.mapbox.geojson.GeometryCollection fromGeometry(com.mapbox.geojson.Geometry)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getUserProperties(java.lang.String,java.lang.String,boolean,com.google.android.gms.internal.measurement.zzw)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getConditionalUserProperties(java.lang.String,java.lang.String,com.google.android.gms.internal.measurement.zzw)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.mapbox.geojson.BaseCoordinatesTypeAdapter: void writePoint(com.google.gson.stream.JsonWriter,com.mapbox.geojson.Point)
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader
com.mapbox.mapboxsdk.style.light.Position: com.mapbox.mapboxsdk.style.light.Position fromPosition(float,float,float)
com.mapbox.mapboxsdk.module.telemetry.PhoneState$Orientation: java.lang.String getOrientation()
com.mapbox.mapboxsdk.style.layers.TransitionOptions
com.google.android.gms.internal.firebase-auth-api.zzhw: java.lang.String zzb
io.flutter.embedding.engine.FlutterJNI: void nativeSetSemanticsEnabled(long,boolean)
com.mapbox.geojson.shifter.CoordinateShifter: java.util.List shiftLonLatAlt(double,double,double)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.firebase.firestore.FirebaseFirestoreException$Code: com.google.firebase.firestore.FirebaseFirestoreException$Code[] values()
androidx.appcompat.widget.Toolbar
com.mapbox.geojson.LineString$GsonTypeAdapter: com.mapbox.geojson.LineString read(com.google.gson.stream.JsonReader)
com.google.android.gms.internal.firebase-auth-api.zzja: com.google.android.gms.internal.firebase-auth-api.zzym zze
com.google.android.gms.internal.measurement.zzlg: com.google.android.gms.internal.measurement.zzlg[] values()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextKeepUpright()
com.google.protobuf.FieldType$Collection: com.google.protobuf.FieldType$Collection[] values()
com.mapbox.mapboxsdk.net.NativeConnectivityListener: boolean invalidated
com.mapbox.mapboxsdk.location.LocationIndicatorLayer
io.grpc.okhttp.OkHttpChannelBuilder: io.grpc.okhttp.OkHttpChannelBuilder scheduledExecutorService(java.util.concurrent.ScheduledExecutorService)
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: int COLORSPACE_UNKNOWN
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState detachState()
com.google.protobuf.ProtoSyntax: com.google.protobuf.ProtoSyntax[] values()
com.mapbox.geojson.ListofListofListOfPointCoordinatesTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.google.android.gms.internal.measurement.zzcd$zzg: boolean zzad
com.google.android.exoplayer2.metadata.id3.TextInformationFrame: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.offline.OfflineRegionDefinition: float getPixelRatio()
com.mapbox.mapboxsdk.style.sources.GeoJsonSource: java.lang.String nativeGetUrl()
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: void setStyleUrl(java.lang.String)
com.google.android.gms.internal.measurement.zzck$zzd$zza: com.google.android.gms.internal.measurement.zzck$zzd$zza[] values()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
com.example.flutter_faem_app.MainActivity: MainActivity()
com.google.firebase.firestore.proto.Target: com.google.protobuf.Timestamp lastLimboFreeSnapshotVersion_
com.mapbox.geojson.FeatureCollection: java.lang.String toString()
com.mapbox.geojson.GeometryCollection$GsonTypeAdapter
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertServiceWorkerSettings(java.lang.reflect.InvocationHandler)
com.google.android.gms.internal.firebase-auth-api.zzho
com.mapbox.mapboxsdk.style.layers.CustomLayer: CustomLayer(long)
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackLibraryPath
io.flutter.embedding.engine.FlutterJNI: void nativePrefetchDefaultFontManager()
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void nativeOnSurfaceChanged(int,int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int overlayInsetTypes
com.mapbox.geojson.MultiPoint
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
com.google.firebase.firestore.proto.Target: int QUERY_FIELD_NUMBER
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logEvent(java.lang.String,java.lang.String,android.os.Bundle,boolean,boolean,long)
com.mapbox.geojson.BoundingBox: com.mapbox.geojson.Point southwest
com.google.firebase.iid.Registrar
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCurrentScreenClass(com.google.android.gms.internal.measurement.zzw)
com.google.firestore.v1.BatchGetDocumentsRequest: com.google.firestore.v1.BatchGetDocumentsRequest DEFAULT_INSTANCE
com.google.android.gms.internal.measurement.zzcd$zzh$zzb: com.google.android.gms.internal.measurement.zzcd$zzh$zzb[] values()
io.flutter.embedding.engine.FlutterJNI: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
com.mapbox.mapboxsdk.style.layers.TransitionOptions: com.mapbox.mapboxsdk.style.layers.TransitionOptions fromTransitionOptions(long,long)
com.google.android.gms.cloudmessaging.CloudMessagingReceiver: CloudMessagingReceiver()
com.google.android.gms.internal.measurement.zzcd$zzg: long zzz
com.mapbox.geojson.MultiPolygon: com.mapbox.geojson.BoundingBox bbox
com.google.android.gms.internal.measurement.zzcd$zzk: java.lang.String zzf
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: java.lang.String EVENT_NAME
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
com.google.firestore.v1.WriteResponse: com.google.protobuf.ByteString streamToken_
com.mapbox.mapboxsdk.style.layers.FillLayer: java.lang.Object nativeGetFillOpacity()
com.google.firestore.v1.DocumentDelete: com.google.firestore.v1.DocumentDelete DEFAULT_INSTANCE
com.google.android.gms.safetynet.zzd: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.style.sources.Source: void nativeSetMaxOverscaleFactorForParentTiles(java.lang.Integer)
com.mapbox.mapboxsdk.storage.FileSource$ResourceTransformCallback
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: double expectedRenderTime
com.mapbox.mapboxsdk.style.layers.Layer: void nativeSetMinZoom(float)
com.mapbox.mapboxsdk.camera.CameraPosition
com.google.android.gms.internal.firebase-auth-api.zzmi: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.TargetChange$TargetChangeType: com.google.firestore.v1.TargetChange$TargetChangeType[] values()
com.google.android.exoplayer2.metadata.scte35.SpliceNullCommand: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.os.Parcelable$Creator CREATOR
com.mapbox.geojson.Point: java.lang.String type
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent: java.lang.String getEventName()
io.grpc.stub.ClientCalls$StubType: io.grpc.stub.ClientCalls$StubType valueOf(java.lang.String)
com.mapbox.mapboxsdk.http.NativeHttpRequest: com.mapbox.mapboxsdk.http.HttpRequest httpRequest
com.google.firestore.v1.MapValue: com.google.protobuf.MapFieldLite fields_
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter
com.google.android.gms.measurement.internal.zzaq: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzcd$zzc: int zzc
android.support.v4.media.session.PlaybackStateCompat$CustomAction
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
com.mapbox.mapboxsdk.style.sources.Source: long nativePtr
com.mapbox.geojson.Geometry
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
io.flutter.embedding.engine.FlutterJNI
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: HiddenLifecycleReference(androidx.lifecycle.Lifecycle)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetSymbolSortKey()
com.google.android.gms.internal.measurement.zzcd$zze: int zzc
com.mapbox.android.telemetry.LocationEvent: double getLongitude()
com.mapbox.mapboxsdk.style.sources.Source: java.lang.String getId()
com.mapbox.geojson.LineString: LineString(java.lang.String,com.mapbox.geojson.BoundingBox,java.util.List)
com.mapbox.mapboxsdk.text.LocalGlyphRasterizer
io.flutter.view.AccessibilityViewEmbedder: void copyAccessibilityFields(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo)
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: FillExtrusionLayer(long)
com.google.gson.JsonObject: void addProperty(java.lang.String,java.lang.Number)
com.google.android.gms.internal.measurement.zzu: zzu()
androidx.appcompat.widget.AppCompatImageView
android.support.v4.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetFillExtrusionHeightTransition()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
io.flutter.plugin.platform.SingleViewPresentation: boolean startFocused
androidx.appcompat.widget.AlertDialogLayout
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface: void setServiceWorkerClient(java.lang.reflect.InvocationHandler)
com.google.firestore.v1.TransactionOptions: java.lang.Object mode_
com.google.android.gms.internal.measurement.zzbv$zzb: int zzc
com.google.firebase.firestore.proto.MaybeDocument$DocumentTypeCase: com.google.firebase.firestore.proto.MaybeDocument$DocumentTypeCase valueOf(java.lang.String)
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: java.lang.Object nativeGetShadowImage()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebResourceRequest(android.webkit.WebResourceRequest)
com.mapbox.mapboxsdk.maps.NativeMapView: void onCameraDidChange(boolean)
com.mapbox.mapboxsdk.module.telemetry.MapBaseEvent: java.lang.String getEventName()
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzav
com.google.firestore.v1.CommitResponse: com.google.firestore.v1.CommitResponse DEFAULT_INSTANCE
com.google.android.gms.internal.measurement.zzbv$zze: int zzd
com.google.firestore.v1.StructuredQuery$Projection: com.google.firestore.v1.StructuredQuery$Projection DEFAULT_INSTANCE
com.mapbox.android.telemetry.provider.MapboxTelemetryInitProvider: MapboxTelemetryInitProvider()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setSessionTimeoutDuration(long)
com.google.gson.JsonPrimitive: double getAsDouble()
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void setMaximumFps(int)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextRotationAlignment()
com.google.firestore.v1.StructuredQuery$FieldFilter$Operator: com.google.firestore.v1.StructuredQuery$FieldFilter$Operator[] values()
com.mapbox.mapboxsdk.maps.widgets.CompassView
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: void nativeInitialize(com.mapbox.mapboxsdk.snapshotter.MapSnapshotter,com.mapbox.mapboxsdk.storage.FileSource,float,int,int,java.lang.String,java.lang.String,com.mapbox.mapboxsdk.geometry.LatLngBounds,com.mapbox.mapboxsdk.camera.CameraPosition,boolean,java.lang.String)
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
com.mapbox.android.telemetry.Attachment: java.util.List getAttachments()
com.mapbox.geojson.MultiPoint: java.lang.String TYPE
com.mapbox.geojson.Feature: java.lang.Boolean getBooleanProperty(java.lang.String)
com.mapbox.geojson.BoundingBox: com.google.gson.TypeAdapter typeAdapter(com.google.gson.Gson)
com.mapbox.mapboxsdk.Mapbox: java.lang.String TAG
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: void initialize(java.lang.String)
com.mapbox.mapboxsdk.module.telemetry.PhoneState: boolean pluggedIn
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
com.mapbox.mapboxsdk.style.sources.CannotAddSourceException: CannotAddSourceException(java.lang.String)
com.google.firebase.auth.PhoneAuthCredential: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.Value: int GEO_POINT_VALUE_FIELD_NUMBER
com.google.i18n.phonenumbers.PhoneNumberUtil$ValidationResult: com.google.i18n.phonenumbers.PhoneNumberUtil$ValidationResult[] values()
com.google.gson.JsonPrimitive: JsonPrimitive(java.lang.String)
com.mapbox.mapboxsdk.http.NativeHttpRequest: java.util.concurrent.locks.ReentrantLock access$000(com.mapbox.mapboxsdk.http.NativeHttpRequest)
com.google.android.gms.internal.measurement.zzbv$zzb: boolean zzk
com.mapbox.mapboxsdk.style.layers.LineLayer: java.lang.Object nativeGetLineColor()
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: java.lang.Object nativeGetBearingImage()
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: void nativeSetTopImageSizeTransition(long,long)
com.google.gson.typeadapters.RuntimeTypeAdapterFactory: java.util.Map subtypeToLabel
com.mapbox.geojson.exception.GeoJsonException: GeoJsonException(java.lang.String)
com.mapbox.geojson.FeatureCollection: com.google.gson.TypeAdapter typeAdapter(com.google.gson.Gson)
com.mapbox.mapboxsdk.utils.StringUtils
com.mapbox.geojson.Feature: boolean equals(java.lang.Object)
com.google.firestore.v1.TargetChange: com.google.protobuf.Internal$IntList targetIds_
androidx.appcompat.widget.AppCompatSpinner
com.mapbox.android.telemetry.Environment: com.mapbox.android.telemetry.Environment[] values()
com.google.android.gms.internal.firebase-auth-api.zzip: int zzb
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
com.mapbox.geojson.MultiPoint: java.lang.Object coordinates()
com.google.android.gms.internal.measurement.zzbv$zzc: com.google.android.gms.internal.measurement.zzbv$zzf zzd
com.google.android.gms.measurement.AppMeasurement: java.util.List getConditionalUserProperties(java.lang.String,java.lang.String)
com.mapbox.geojson.constants.GeoJsonConstants: double MAX_LATITUDE
com.google.firestore.v1.StructuredQuery: com.google.firestore.v1.Cursor startAt_
com.mapbox.mapboxsdk.module.telemetry.PhoneState: void setResolution(float)
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzp
com.google.android.gms.internal.firebase-auth-api.zzhd: com.google.android.gms.internal.firebase-auth-api.zzhj zze
com.google.firebase.firestore.FirestoreRegistrar
com.mapbox.mapboxsdk.style.light.Light: Light(long)
com.google.android.gms.internal.measurement.zzcd$zzi: com.google.android.gms.internal.measurement.zzih zzc
com.google.firestore.v1.MapValue: com.google.firestore.v1.MapValue DEFAULT_INSTANCE
com.mapbox.mapboxsdk.maps.Image: byte[] buffer
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetAccuracyRadiusBorderColorTransition()
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
io.flutter.embedding.engine.FlutterJNI: java.lang.String TAG
androidx.appcompat.view.menu.ExpandedMenuView
com.mapbox.mapboxsdk.maps.renderer.glsurfaceview.MapboxGLSurfaceView
com.mapbox.geojson.MultiPolygon
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
com.mapbox.mapboxsdk.style.sources.Source: java.lang.String TAG
com.google.firestore.v1.StructuredQuery$UnaryFilter: int operandTypeCase_
com.mapbox.mapboxsdk.offline.OfflineManager$CreateOfflineRegionCallback: void onError(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
com.google.firestore.v1.StructuredQuery$UnaryFilter: java.lang.Object operandType_
com.google.firestore.v1.CommitResponse: com.google.protobuf.Internal$ProtobufList writeResults_
com.google.firebase.analytics.ktx.FirebaseAnalyticsKtxRegistrar: FirebaseAnalyticsKtxRegistrar()
com.google.android.gms.internal.firebase-auth-api.zzni: android.os.Parcelable$Creator CREATOR
androidx.media.AudioAttributesImplBase
com.mapbox.mapboxsdk.style.sources.Source: Source(long)
com.mapbox.android.telemetry.Event: Event()
com.mapbox.android.telemetry.VisionEvent: java.lang.String event
com.mapbox.mapboxsdk.style.types.FormattedSection: void setFontStack(java.lang.String[])
com.mapbox.mapboxsdk.style.light.Light: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetPositionTransition()
com.google.protobuf.Any: com.google.protobuf.Parser PARSER
com.mapbox.geojson.Feature$GsonTypeAdapter
com.mapbox.mapboxsdk.style.layers.CircleLayer: void initialize(java.lang.String,java.lang.String)
com.google.android.gms.internal.measurement.zzcd$zzk: com.google.android.gms.internal.measurement.zzjs zzk
com.google.android.gms.internal.measurement.zzbv$zza: com.google.android.gms.internal.measurement.zzbv$zza zzi
com.google.firestore.v1.DocumentTransform$FieldTransform: com.google.protobuf.Parser PARSER
com.mapbox.geojson.MultiPolygon: com.mapbox.geojson.MultiPolygon fromLngLats(double[][][][])
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: java.lang.ClassLoader sClassLoader
com.google.gson.JsonObject: boolean equals(java.lang.Object)
com.mapbox.geojson.utils.PolylineUtils: double SIMPLIFY_DEFAULT_TOLERANCE
com.mapbox.mapboxsdk.style.sources.GeoJsonSource: void nativeSetFeature(com.mapbox.geojson.Feature)
com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionStatusCallback: void onStatus(com.mapbox.mapboxsdk.offline.OfflineRegionStatus)
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadStartEvent: java.lang.Double minZoom
com.google.android.gms.internal.firebase-auth-api.zzey: com.google.android.gms.internal.firebase-auth-api.zzey zze
com.google.android.gms.internal.measurement.zzcd$zzc: com.google.android.gms.internal.measurement.zzjs zzj
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetBearing(double,long)
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent: java.lang.String getSessionId()
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
com.mapbox.mapboxsdk.style.layers.LineLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetLineGapWidthTransition()
com.google.firebase.firestore.local.QueryPurpose: com.google.firebase.firestore.local.QueryPurpose valueOf(java.lang.String)
com.mapbox.mapboxsdk.style.layers.HeatmapLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetHeatmapIntensityTransition()
com.google.firestore.v1.StructuredQuery$CompositeFilter: int op_
com.mapbox.mapboxsdk.annotations.BubbleLayout: float getArrowPosition()
com.google.firestore.v1.DocumentTransform$FieldTransform: int SET_TO_SERVER_VALUE_FIELD_NUMBER
com.google.firestore.v1.StructuredQuery$FieldFilter: com.google.firestore.v1.StructuredQuery$FieldFilter DEFAULT_INSTANCE
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle getLifecycle()
com.mapbox.geojson.ListOfDoublesCoordinatesTypeAdapter: java.util.List read(com.google.gson.stream.JsonReader)
com.google.android.gms.internal.firebase-auth-api.zzhn: com.google.android.gms.internal.firebase-auth-api.zzhn[] values()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values()
androidx.appcompat.widget.SearchView: int getPreferredHeight()
com.mapbox.geojson.Polygon: java.lang.String type
com.mapbox.geojson.LineString: com.mapbox.geojson.LineString fromLngLats(java.util.List)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeRotateBy(double,double,double,double,long)
com.google.firestore.v1.StructuredQuery: com.google.protobuf.Parser PARSER
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetFillExtrusionColorTransition()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List mutators
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextSize()
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: java.lang.String userId
androidx.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
com.mapbox.geojson.LineString: java.lang.String toJson()
com.mapbox.geojson.ListofListofListOfPointCoordinatesTypeAdapter
com.mapbox.geojson.BoundingBox: boolean equals(java.lang.Object)
com.google.firebase.firestore.proto.MaybeDocument: int UNKNOWN_DOCUMENT_FIELD_NUMBER
com.mapbox.mapboxsdk.style.sources.Source: void setVolatile(java.lang.Boolean)
com.mapbox.mapboxsdk.camera.CameraPosition: double bearing
com.google.android.gms.internal.measurement.zzu: com.google.android.gms.internal.measurement.zzv asInterface(android.os.IBinder)
com.mapbox.geojson.exception.GeoJsonException
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent$PerformanceAttribute: java.lang.Object value
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy[] values()
com.mapbox.mapboxsdk.style.layers.LineLayer: LineLayer(long)
com.google.firestore.v1.Precondition: com.google.firestore.v1.Precondition DEFAULT_INSTANCE
com.mapbox.geojson.Polygon: com.mapbox.geojson.Polygon fromLngLats(java.util.List,com.mapbox.geojson.BoundingBox)
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle splashScreenState
com.mapbox.mapboxsdk.style.sources.RasterSource: java.lang.String nativeGetUrl()
com.mapbox.geojson.Point$GsonTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.gms.internal.measurement.zzck$zza: com.google.android.gms.internal.measurement.zzck$zza zzd
com.mapbox.mapboxsdk.maps.NativeMapView: void onCameraWillChange(boolean)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
com.mapbox.mapboxsdk.style.types.Formatted: com.mapbox.mapboxsdk.style.types.FormattedSection[] formattedSections
com.google.android.gms.internal.measurement.zzcd$zzd: int zzc
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzap
com.mapbox.geojson.utils.GeoJsonUtils: GeoJsonUtils()
com.google.android.gms.internal.firebase-auth-api.zzij
com.google.android.gms.internal.measurement.zzcd$zzh
com.mapbox.geojson.ListOfPointCoordinatesTypeAdapter: java.util.List read(com.google.gson.stream.JsonReader)
com.mapbox.mapboxsdk.camera.CameraPosition: CameraPosition(com.mapbox.mapboxsdk.geometry.LatLng,double,double,double,double[])
com.mapbox.mapboxsdk.Mapbox: void setAccessToken(java.lang.String)
com.google.firestore.v1.WriteResponse: com.google.protobuf.Parser PARSER
androidx.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
com.google.android.gms.internal.measurement.zzhy$zzd: com.google.android.gms.internal.measurement.zzhr zzc
com.google.firestore.v1.BatchGetDocumentsRequest: int MASK_FIELD_NUMBER
com.google.firestore.v1.Target$DocumentsTarget: int DOCUMENTS_FIELD_NUMBER
com.google.firebase.messaging.FirebaseMessagingRegistrar: java.util.List getComponents()
com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent: boolean equals(java.lang.Object)
com.google.android.gms.common.internal.ReflectedParcelable
com.mapbox.geojson.BaseCoordinatesTypeAdapter: void writePointList(com.google.gson.stream.JsonWriter,java.util.List)
com.mapbox.mapboxsdk.style.layers.TransitionOptions: boolean enablePlacementTransitions
com.mapbox.mapboxsdk.style.layers.RasterLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetRasterContrastTransition()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void clearMeasurementEnabled(long)
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: int describeContents()
com.google.android.gms.internal.measurement.zzcd$zzb: com.google.android.gms.internal.measurement.zzcd$zzb zzf
com.google.firebase.firestore.proto.UnknownDocument: java.lang.String name_
com.mapbox.geojson.Polygon: java.lang.String toString()
com.google.android.gms.internal.measurement.zzca$zzc: java.lang.String zze
com.mapbox.mapboxsdk.style.sources.GeoJsonSource: com.mapbox.geojson.Feature[] nativeGetClusterChildren(com.mapbox.geojson.Feature)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
com.google.firestore.v1.Target
com.mapbox.geojson.MultiPoint: boolean equals(java.lang.Object)
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String previousCompletedSplashIsolate
com.google.firebase.firestore.core.OrderBy$Direction: com.google.firebase.firestore.core.OrderBy$Direction valueOf(java.lang.String)
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
com.mapbox.mapboxsdk.module.telemetry.MapBaseEvent: int describeContents()
com.google.firestore.v1.Document: com.google.protobuf.Parser PARSER
com.mapbox.geojson.Polygon$GsonTypeAdapter: com.mapbox.geojson.Polygon read(com.google.gson.stream.JsonReader)
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: java.util.Map registeredPlugins
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: long nativePtr
com.google.firestore.v1.TargetChange: int targetIdsMemoizedSerializedSize
com.mapbox.mapboxsdk.style.layers.CircleLayer: void nativeSetCircleStrokeOpacityTransition(long,long)
com.google.android.exoplayer2.decoder.Buffer: int flags
com.google.firestore.v1.CommitRequest: int DATABASE_FIELD_NUMBER
com.mapbox.mapboxsdk.geometry.ProjectedMeters
com.mapbox.mapboxsdk.Mapbox: java.lang.String getSkuToken()
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface
com.mapbox.mapboxsdk.style.sources.RasterSource: RasterSource(long)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void endAdUnitExposure(java.lang.String,long)
io.flutter.embedding.engine.FlutterJNI: void updateSemantics(java.nio.ByteBuffer,java.lang.String[])
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent: java.lang.String sessionId
com.google.firebase.firestore.proto.Target: long lastListenSequenceNumber_
io.flutter.embedding.engine.FlutterJNI: void onFirstFrame()
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: com.mapbox.mapboxsdk.style.layers.Layer nativeGetLayer(java.lang.String)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void initSafeBrowsing(android.content.Context,android.webkit.ValueCallback)
com.google.android.gms.internal.measurement.zzcd$zzc
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
com.google.protobuf.GeneratedMessageLite: com.google.protobuf.UnknownFieldSetLite unknownFields
com.mapbox.android.telemetry.VisionObjectDetectionEvent: double getObjectSizeWidth()
com.mapbox.android.telemetry.VisionObjectDetectionEvent: java.lang.Double object_pos_height
com.mapbox.mapboxsdk.text.LocalGlyphRasterizer: android.graphics.Bitmap bitmap
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconColor()
androidx.lifecycle.ReportFragment$LifecycleCallbacks
com.google.android.exoplayer2.extractor.mp4.MdtaMetadataEntry: android.os.Parcelable$Creator CREATOR
com.mapbox.android.telemetry.LocationEvent: java.lang.String event
com.google.firebase.firestore.remote.WatchChange$WatchTargetChangeType: com.google.firebase.firestore.remote.WatchChange$WatchTargetChangeType[] values()
android.support.v4.media.session.MediaSessionCompat$QueueItem
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: java.lang.String getState()
com.google.firebase.messaging.FirebaseMessagingRegistrar: com.google.firebase.messaging.FirebaseMessaging lambda$getComponents$0$FirebaseMessagingRegistrar(com.google.firebase.components.ComponentContainer)
com.google.firebase.auth.FirebaseAuthRegistrar
com.mapbox.geojson.FeatureCollection
com.google.android.gms.internal.firebase-auth-api.zzej
com.google.firestore.v1.BatchGetDocumentsResponse: com.google.protobuf.Timestamp readTime_
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: void onSnapshotFailed(java.lang.String)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadStartEvent: void setStyleURL(java.lang.String)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextField()
com.google.android.gms.internal.firebase-auth-api.zzmy: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: boolean equals(java.lang.Object)
com.google.android.gms.internal.measurement.zzbv$zzc: boolean zzf
com.google.android.gms.common.data.DataHolder: android.os.Parcelable$Creator CREATOR
com.google.gson.typeadapters.RuntimeTypeAdapterFactory: java.util.Map access$300(com.google.gson.typeadapters.RuntimeTypeAdapterFactory)
com.google.android.gms.internal.measurement.zzcd$zzj: com.google.android.gms.internal.measurement.zzjs zzg
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface
io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion valueOf(java.lang.String)
com.mapbox.android.telemetry.CrashEvent: int describeContents()
androidx.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: java.lang.Object nativeGetFillExtrusionTranslate()
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface: int getErrorCode()
com.google.firestore.v1.BatchGetDocumentsRequest: int consistencySelectorCase_
com.mapbox.mapboxsdk.geometry.ProjectedMeters: ProjectedMeters(double,double)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler createWebView(android.webkit.WebView)
com.google.gson.JsonElement: com.google.gson.JsonArray getAsJsonArray()
com.google.firestore.v1.Write: int UPDATE_FIELD_NUMBER
com.mapbox.geojson.Feature: boolean hasProperty(java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] values()
com.google.android.gms.internal.measurement.zzcd$zzg: int zzag
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode[] values()
com.mapbox.geojson.MultiLineString: com.mapbox.geojson.MultiLineString fromLineStrings(java.util.List)
com.google.gson.JsonElement: java.math.BigInteger getAsBigInteger()
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
com.mapbox.mapboxsdk.style.types.Formatted: java.lang.Object[] toArray()
com.mapbox.mapboxsdk.module.telemetry.PhoneState: float getResolution()
android.support.v4.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
com.google.firebase.iid.FirebaseInstanceIdReceiver: FirebaseInstanceIdReceiver()
com.mapbox.mapboxsdk.net.NativeConnectivityListener: void nativeOnConnectivityStateChanged(boolean)
com.google.firebase.firestore.proto.WriteBatch: int batchId_
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconSize()
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadStartEvent: int hashCode()
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: long numberOfTilesCompleted
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: int colorspace
com.mapbox.mapboxsdk.annotations.Marker: java.lang.String iconId
com.google.android.gms.internal.measurement.zzcd$zzg: long zzi
com.mapbox.mapboxsdk.annotations.BasePointCollection
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: int hashCode()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
androidx.core.graphics.drawable.IconCompat: IconCompat()
com.google.android.gms.internal.firebase-auth-api.zzfe: int zze
com.google.android.gms.common.ConnectionResult: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzcd$zzg: int zzc
com.mapbox.mapboxsdk.style.layers.HillshadeLayer
io.flutter.embedding.engine.FlutterJNI: void dispatchEmptyPlatformMessage(java.lang.String,int)
com.mapbox.android.telemetry.TelemetryEnabler$State: com.mapbox.android.telemetry.TelemetryEnabler$State valueOf(java.lang.String)
com.mapbox.geojson.MultiLineString: boolean equals(java.lang.Object)
com.google.android.gms.measurement.AppMeasurement: java.lang.String getAppInstanceId()
com.google.gson.JsonObject: int hashCode()
com.google.android.gms.internal.firebase-auth-api.zzfh: int zzb
com.mapbox.geojson.MultiPolygon: com.google.gson.TypeAdapter typeAdapter(com.google.gson.Gson)
com.google.android.gms.internal.measurement.zzcd$zze: java.lang.String zze
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context)
com.google.firestore.v1.WriteResponse: com.google.protobuf.Internal$ProtobufList writeResults_
com.google.android.exoplayer2.metadata.id3.ApicFrame: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.StructuredQuery$FieldFilter: com.google.firestore.v1.Value value_
com.mapbox.geojson.Feature$GsonTypeAdapter: com.google.gson.TypeAdapter jsonObjectTypeAdapter
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.StructuredQuery$CollectionSelector: java.lang.String collectionId_
com.google.android.gms.location.LocationResult: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.style.sources.RasterDemSource
androidx.media.AudioAttributesImplApi26Parcelizer: AudioAttributesImplApi26Parcelizer()
io.grpc.okhttp.OkHttpFrameLogger$SettingParams: io.grpc.okhttp.OkHttpFrameLogger$SettingParams valueOf(java.lang.String)
com.mapbox.geojson.MultiPoint: com.mapbox.geojson.MultiPoint fromJson(java.lang.String)
com.mapbox.mapboxsdk.style.types.FormattedSection: java.lang.String[] getFontStack()
com.mapbox.android.telemetry.Attachment: Attachment()
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent
com.google.android.gms.internal.firebase-auth-api.zzna: android.os.Parcelable$Creator CREATOR
com.mapbox.android.telemetry.VisionObjectDetectionEvent: double getObjectLatitude()
io.flutter.plugins.GeneratedPluginRegistrant
com.google.android.gms.internal.measurement.zzbv$zzf: int zzd
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void postMessageToMainFrame(java.lang.reflect.InvocationHandler,android.net.Uri)
com.mapbox.mapboxsdk.maps.renderer.egl.EGLConfigChooser$BufferFormat: com.mapbox.mapboxsdk.maps.renderer.egl.EGLConfigChooser$BufferFormat[] values()
com.lyokone.location.FlutterLocationService
com.mapbox.mapboxsdk.style.types.FormattedSection: FormattedSection(java.lang.String)
com.mapbox.mapboxsdk.style.layers.BackgroundLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetBackgroundColorTransition()
io.flutter.embedding.engine.FlutterJNI: void nativeMarkTextureFrameAvailable(long,long)
com.mapbox.geojson.utils.PolylineUtils: java.util.List simplify(java.util.List)
com.google.protobuf.GeneratedMessageLite$ExtendableMessage
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
com.mapbox.geojson.Point: java.lang.String toString()
com.mapbox.geojson.shifter.CoordinateShifterManager: CoordinateShifterManager()
com.mapbox.geojson.constants.GeoJsonConstants: double MIN_LONGITUDE
com.google.android.gms.internal.firebase-auth-api.zzht: java.lang.String zzb
org.chromium.support_lib_boundary.ServiceWorkerClientBoundaryInterface: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebResourceRequest)
io.flutter.plugins.firebase.core.FlutterFirebasePlugin
android.support.v4.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
com.google.android.gms.internal.firebase-auth-api.zzif: java.lang.String zzb
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
com.google.firestore.v1.WriteResult: com.google.protobuf.Parser PARSER
com.google.android.gms.internal.firebase-auth-api.zzwk: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: LocationIndicatorLayer(long)
com.mapbox.android.telemetry.errors.ErrorReporterJobIntentService
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: void finalize()
com.mapbox.geojson.shifter.CoordinateShifterManager$1: java.util.List unshiftPoint(com.mapbox.geojson.Point)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode[] values()
com.google.firestore.v1.Target$QueryTarget: int PARENT_FIELD_NUMBER
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
com.mapbox.android.telemetry.VisionObjectDetectionEvent: double getObjectSizeHeight()
com.google.firebase.messaging.FirebaseMessagingRegistrar: com.google.android.datatransport.TransportFactory determineFactory(com.google.android.datatransport.TransportFactory)
com.google.firestore.v1.WriteRequest: com.google.firestore.v1.WriteRequest DEFAULT_INSTANCE
com.mapbox.geojson.Polygon: com.mapbox.geojson.Polygon fromLngLats(java.util.List)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback
com.mapbox.mapboxsdk.log.Logger: void d(java.lang.String,java.lang.String,java.lang.Throwable)
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeTriggerRepaint()
com.mapbox.mapboxsdk.style.layers.LineLayer: java.lang.Object nativeGetLineOpacity()
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
com.google.firestore.v1.ListenRequest: com.google.firestore.v1.ListenRequest DEFAULT_INSTANCE
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextAnchor()
com.google.firestore.v1.StructuredQuery$CollectionSelector: com.google.firestore.v1.StructuredQuery$CollectionSelector DEFAULT_INSTANCE
com.mapbox.mapboxsdk.style.layers.RasterLayer: void nativeSetRasterSaturationTransition(long,long)
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: void nativeSetShadowImageSizeTransition(long,long)
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: void nativeSetAccuracyRadiusBorderColorTransition(long,long)
com.google.android.gms.internal.firebase-auth-api.zzgq: com.google.android.gms.internal.firebase-auth-api.zzgk zze
com.mapbox.geojson.LineString: com.google.gson.TypeAdapter typeAdapter(com.google.gson.Gson)
com.mapbox.geojson.Feature$GsonTypeAdapter: com.mapbox.geojson.Feature read(com.google.gson.stream.JsonReader)
com.google.android.gms.internal.measurement.zzcd$zzg: int zze
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onPageCommitVisible(android.webkit.WebView,java.lang.String)
com.mapbox.mapboxsdk.geometry.LatLngQuad: com.mapbox.mapboxsdk.geometry.LatLng bottomRight
com.google.gson.reflect.TypeToken: TypeToken(java.lang.reflect.Type)
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: java.util.List getComponents()
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: void nativeSetIconHaloBlurTransition(long,long)
com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource$Factory
com.google.firestore.v1.StructuredQuery$CollectionSelector: int COLLECTION_ID_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzck$zza: com.google.android.gms.internal.measurement.zzig zzc
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$SelectionOverride: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.platform.SingleViewPresentation: android.widget.FrameLayout container
com.mapbox.mapboxsdk.style.layers.HillshadeLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetHillshadeAccentColorTransition()
com.google.android.gms.internal.firebase-auth-api.zzfw
com.google.android.gms.internal.measurement.zzbv$zzd: int zzc
com.mapbox.geojson.FeatureCollection: java.lang.String type()
com.google.firestore.v1.WriteResponse
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadStartEvent: java.lang.String EVENT_NAME
com.google.android.gms.internal.firebase-auth-api.zzif: int zzg
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.Write: int operationCase_
io.flutter.view.FlutterView: android.graphics.Bitmap getBitmap()
com.google.firebase.firestore.proto.WriteBatch: com.google.protobuf.Timestamp localWriteTime_
com.mapbox.geojson.BaseCoordinatesTypeAdapter: java.util.List readPointList(com.google.gson.stream.JsonReader)
com.mapbox.mapboxsdk.camera.CameraPosition: double[] padding
com.google.rpc.Status: java.lang.String message_
com.mapbox.mapboxsdk.maps.renderer.egl.EGLConfigChooser$DepthStencilFormat: com.mapbox.mapboxsdk.maps.renderer.egl.EGLConfigChooser$DepthStencilFormat[] values()
com.mapbox.geojson.gson.GeoJsonAdapterFactory$GeoJsonAdapterFactoryIml: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void nativeRender()
com.mapbox.mapboxsdk.module.telemetry.PhoneState: float accessibilityFontScale
com.mapbox.mapboxsdk.log.Logger: int logLevel
com.google.android.gms.internal.firebase-auth-api.zzgk: com.google.android.gms.internal.firebase-auth-api.zzgt zzb
com.google.android.gms.internal.measurement.zzce: com.google.android.gms.internal.measurement.zzce[] values()
androidx.appcompat.widget.ActionBarContextView
com.mapbox.mapboxsdk.style.light.Light: long nativePtr
com.google.android.exoplayer2.metadata.id3.InternalFrame: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.storage.FileSource: void initialize(java.lang.String,java.lang.String)
com.google.common.util.concurrent.AbstractFuture$Waiter: java.lang.Thread thread
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadStartEvent: int describeContents()
com.google.android.gms.internal.measurement.zzcd$zzj: com.google.android.gms.internal.measurement.zzcd$zzj zzf
com.mapbox.mapboxsdk.storage.FileSource: void setApiBaseUrl(java.lang.String)
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
com.google.android.gms.internal.firebase-auth-api.zzgt: int zzb
com.google.firestore.v1.DocumentRemove: int REMOVED_TARGET_IDS_FIELD_NUMBER
com.mapbox.geojson.gson.GeoJsonAdapterFactory: com.google.gson.TypeAdapterFactory create()
com.mapbox.geojson.GeometryCollection: com.mapbox.geojson.GeometryCollection fromGeometries(java.util.List,com.mapbox.geojson.BoundingBox)
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mName
com.google.gson.JsonArray: float getAsFloat()
com.mapbox.mapboxsdk.style.layers.CircleLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetCircleOpacityTransition()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityResumed(com.google.android.gms.dynamic.IObjectWrapper,long)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
com.mapbox.mapboxsdk.storage.FileSource: void activate()
com.google.gson.JsonElement: int getAsInt()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConsentThirdParty(android.os.Bundle,long)
com.google.gson.JsonElement: boolean getAsBoolean()
com.mapbox.android.telemetry.VisionObjectDetectionEvent: void writeStringIfNotNull(android.os.Parcel,java.lang.String)
com.mapbox.mapboxsdk.annotations.Polyline: int color
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
io.flutter.embedding.android.FlutterImageView: android.view.Surface getSurface()
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.mapbox.geojson.Feature: java.lang.Character getCharacterProperty(java.lang.String)
com.dexterous.flutterlocalnotifications.BitmapSource: com.dexterous.flutterlocalnotifications.BitmapSource[] values()
com.google.android.gms.internal.measurement.zzbv$zzd: com.google.android.gms.internal.measurement.zzbv$zzd zzi
com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue: com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue valueOf(java.lang.String)
com.mapbox.geojson.FeatureCollection: boolean equals(java.lang.Object)
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mAppId
com.mapbox.mapboxsdk.maps.NativeMapView: double nativeGetZoom()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
com.google.android.gms.internal.firebase-auth-api.zzge: com.google.android.gms.internal.firebase-auth-api.zzge zze
com.mapbox.geojson.MultiPoint: MultiPoint(java.lang.String,com.mapbox.geojson.BoundingBox,java.util.List)
com.google.android.gms.internal.firebase-auth-api.zzfk: int zzb
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeRemoveImage(java.lang.String)
com.mapbox.mapboxsdk.maps.NativeMapView: long[] nativeAddMarkers(com.mapbox.mapboxsdk.annotations.Marker[])
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
com.mapbox.mapboxsdk.Mapbox: java.lang.String getAccessToken()
com.mapbox.geojson.GeometryCollection$GsonTypeAdapter: com.google.gson.Gson gson
com.mapbox.android.telemetry.AppUserTurnstile: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzbv$zzb: com.google.android.gms.internal.measurement.zzjs zzm
com.mapbox.mapboxsdk.style.layers.CustomLayer
com.google.firestore.v1.Target: int targetId_
com.mapbox.geojson.Point: boolean hasAltitude()
com.mapbox.mapboxsdk.style.layers.CustomLayer: void initialize(java.lang.String,long)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.grpc.internal.KeepAliveManager$State: io.grpc.internal.KeepAliveManager$State valueOf(java.lang.String)
com.google.firebase.firestore.proto.WriteBatch: com.google.protobuf.Parser PARSER
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
okhttp3.TlsVersion: okhttp3.TlsVersion[] values()
com.google.android.gms.internal.measurement.zzcd$zza: com.google.android.gms.internal.measurement.zzcd$zzi zze
com.google.android.gms.internal.measurement.zzcd$zzf: com.google.android.gms.internal.measurement.zzcd$zzf zzd
com.mapbox.mapboxsdk.maps.NativeMapView: void nativePixelsForLatLngs(double[],double[],float)
com.google.firestore.v1.BatchGetDocumentsResponse: com.google.protobuf.Parser PARSER
com.mapbox.android.telemetry.AppUserTurnstile: java.lang.String event
io.flutter.embedding.engine.FlutterJNI: void prefetchDefaultFontManager()
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetBearingXY(double,double,double,long)
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: int mode
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: void setRegion(com.mapbox.mapboxsdk.geometry.LatLngBounds)
com.mapbox.mapboxsdk.module.telemetry.MapBaseEvent: java.lang.String getEvent()
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadStartEvent: java.lang.String toString()
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$700(io.flutter.embedding.android.FlutterSplashView$SavedState)
com.mapbox.mapboxsdk.style.layers.CircleLayer: void nativeSetCircleBlurTransition(long,long)
com.mapbox.mapboxsdk.style.light.Light: com.mapbox.mapboxsdk.style.light.Position nativeGetPosition()
com.mapbox.mapboxsdk.module.telemetry.MapEventFactory: MapEventFactory()
com.mapbox.geojson.Point: com.mapbox.geojson.BoundingBox bbox()
com.mapbox.android.telemetry.VisionObjectDetectionEvent: java.lang.Double object_lon
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.google.android.gms.internal.measurement.zzhu: com.google.android.gms.internal.measurement.zzhu[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
com.mapbox.mapboxsdk.maps.NativeMapView
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTriggerTimeout
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
com.mapbox.geojson.Point: com.mapbox.geojson.Point fromLngLat(double,double,double,com.mapbox.geojson.BoundingBox)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values()
com.mapbox.mapboxsdk.http.NativeHttpRequest: long nativePtr
com.mapbox.geojson.MultiPoint: java.util.List coordinates()
com.google.firebase.auth.FirebaseAuthRegistrar: int zza
com.google.android.gms.common.internal.ResolveAccountResponse: android.os.Parcelable$Creator CREATOR
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
com.mapbox.android.telemetry.Attachment: com.mapbox.android.telemetry.Event$Type obtainType()
com.google.android.gms.internal.firebase-auth-api.zzho: com.google.android.gms.internal.firebase-auth-api.zzym zze
com.mapbox.mapboxsdk.style.layers.CircleLayer: java.lang.Object nativeGetCircleSortKey()
com.google.gson.JsonPrimitive: java.math.BigInteger getAsBigInteger()
com.google.firestore.v1.Target$DocumentsTarget: com.google.firestore.v1.Target$DocumentsTarget DEFAULT_INSTANCE
com.mapbox.geojson.MultiPolygon: java.lang.Object coordinates()
com.mapbox.geojson.Polygon: com.mapbox.geojson.Polygon fromOuterInner(com.mapbox.geojson.LineString,com.mapbox.geojson.BoundingBox,java.util.List)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$202(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
com.mapbox.mapboxsdk.offline.OfflineManager: long nativePtr
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval[] values()
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackName
android.support.v4.media.session.ParcelableVolumeInfo: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.maps.renderer.egl.EGLConfigChooser$DepthStencilFormat: com.mapbox.mapboxsdk.maps.renderer.egl.EGLConfigChooser$DepthStencilFormat valueOf(java.lang.String)
com.mapbox.geojson.FeatureCollection: com.mapbox.geojson.BoundingBox bbox()
com.mapbox.mapboxsdk.offline.OfflineRegionDefinition: double getMaxZoom()
com.mapbox.mapboxsdk.Mapbox: boolean hasInstance()
com.mapbox.mapboxsdk.style.layers.CircleLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetCircleTranslateTransition()
com.mapbox.mapboxsdk.style.layers.FillLayer: java.lang.Object nativeGetFillTranslateAnchor()
com.mapbox.mapboxsdk.offline.OfflineRegionDefinition: java.lang.String getStyleURL()
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: java.lang.String getCellularNetworkType()
com.mapbox.mapboxsdk.style.sources.GeoJsonSource: GeoJsonSource(long)
com.mapbox.mapboxsdk.offline.OfflineManager: void initialize(com.mapbox.mapboxsdk.storage.FileSource)
com.dexterous.flutterlocalnotifications.SoundSource: com.dexterous.flutterlocalnotifications.SoundSource valueOf(java.lang.String)
com.google.rpc.Status: com.google.rpc.Status DEFAULT_INSTANCE
com.mapbox.geojson.Point: boolean equals(java.lang.Object)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconAnchor()
com.mapbox.mapboxsdk.style.layers.LineLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetLineBlurTransition()
com.google.gson.JsonPrimitive: byte getAsByte()
com.mapbox.mapboxsdk.style.layers.CircleLayer: java.lang.Object nativeGetCirclePitchScale()
com.google.gson.JsonObject: com.google.gson.internal.LinkedTreeMap members
com.mapbox.geojson.GeometryCollection: com.mapbox.geojson.GeometryCollection fromGeometries(java.util.List)
com.mapbox.geojson.PointAsCoordinatesTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
com.google.gson.reflect.TypeToken: java.lang.Class rawType
com.mapbox.geojson.utils.PolylineUtils: java.util.List simplifyRadialDist(java.util.List,double)
com.mapbox.geojson.GeometryCollection: com.google.gson.TypeAdapter typeAdapter(com.google.gson.Gson)
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
com.google.android.gms.internal.measurement.zzbv$zzd
com.google.firestore.v1.StructuredQuery$FieldFilter: int OP_FIELD_NUMBER
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
com.mapbox.android.telemetry.VisionObjectDetectionEvent: void setObjectLatitude(double)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
io.grpc.okhttp.internal.framed.ErrorCode: io.grpc.okhttp.internal.framed.ErrorCode[] values()
com.google.firestore.v1.Target$QueryTarget: int queryTypeCase_
com.google.gson.JsonObject
io.grpc.stub.ClientCalls$StubType: io.grpc.stub.ClientCalls$StubType[] values()
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
com.mapbox.android.telemetry.TelemetryEnabler$State: com.mapbox.android.telemetry.TelemetryEnabler$State[] values()
io.grpc.Context$DirectExecutor: io.grpc.Context$DirectExecutor valueOf(java.lang.String)
com.mapbox.mapboxsdk.style.layers.HeatmapLayer: java.lang.Object nativeGetHeatmapIntensity()
androidx.appcompat.widget.DialogTitle
com.google.gson.JsonArray: boolean remove(com.google.gson.JsonElement)
com.google.android.gms.internal.measurement.zzbv$zzd: int zzd
com.google.firestore.v1.BatchGetDocumentsResponse$ResultCase: com.google.firestore.v1.BatchGetDocumentsResponse$ResultCase[] values()
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig)
com.mapbox.mapboxsdk.style.sources.CustomGeometrySource
com.mapbox.mapboxsdk.style.layers.SymbolLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetTextHaloWidthTransition()
com.google.protobuf.Timestamp: int NANOS_FIELD_NUMBER
com.google.protobuf.WireFormat$JavaType: com.google.protobuf.WireFormat$JavaType valueOf(java.lang.String)
com.google.firestore.v1.WriteResult: int UPDATE_TIME_FIELD_NUMBER
com.mapbox.android.telemetry.AppUserTurnstile: java.lang.String skuId
com.google.android.exoplayer2.metadata.id3.MlltFrame: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
com.google.android.gms.internal.measurement.zzbv$zzb: com.google.android.gms.internal.measurement.zzig zzf
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: long getSizeOfResourcesCompleted()
com.google.firestore.v1.DocumentDelete: com.google.protobuf.Parser PARSER
com.google.android.gms.internal.firebase-auth-api.zzis
com.google.android.gms.internal.measurement.zzcd$zzg: com.google.android.gms.internal.measurement.zzie zzar
com.google.firebase.firestore.proto.UnknownDocument: com.google.protobuf.Parser PARSER
com.google.firestore.v1.DocumentTransform$FieldTransform: int INCREMENT_FIELD_NUMBER
com.mapbox.mapboxsdk.Mapbox: com.mapbox.mapboxsdk.AccountsManager accounts
com.mapbox.mapboxsdk.log.Logger: void setVerbosity(int)
com.mapbox.geojson.Feature
com.mapbox.android.accounts.v1.MapboxAccounts: java.lang.String obtainNavigationSkuUserToken(java.lang.String)
com.google.firestore.v1.DocumentTransform$FieldTransform: int transformTypeCase_
com.mapbox.mapboxsdk.snapshotter.MapSnapshot: void finalize()
com.mapbox.geojson.Feature: boolean hasNonNullValueForProperty(java.lang.String)
com.mapbox.mapboxsdk.maps.NativeMapView: double nativeGetMinZoom()
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetFillExtrusionBaseTransition()
com.mapbox.geojson.MultiLineString: com.mapbox.geojson.MultiLineString fromLineString(com.mapbox.geojson.LineString)
com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: com.mapbox.android.telemetry.MapboxTelemetry telemetry
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
com.google.android.gms.internal.measurement.zzca$zza: java.lang.String zzd
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status valueOf(java.lang.String)
com.google.firestore.v1.TransactionOptions$ReadWrite: com.google.protobuf.ByteString retryTransaction_
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: java.util.List getComponents()
com.mapbox.mapboxsdk.style.types.FormattedSection: java.lang.String[] fontStack
io.flutter.view.AccessibilityViewEmbedder: int nextFlutterId
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void beginAdUnitExposure(java.lang.String,long)
com.google.firestore.v1.DocumentTransform$FieldTransform: int REMOVE_ALL_FROM_ARRAY_FIELD_NUMBER
com.mapbox.geojson.Feature: java.lang.String type
androidx.savedstate.SavedStateRegistry$1
com.google.firestore.v1.Target$DocumentsTarget: com.google.protobuf.Internal$ProtobufList documents_
com.mapbox.mapboxsdk.style.layers.Layer: long nativePtr
com.mapbox.geojson.Feature: java.lang.String TYPE
com.google.firebase.firestore.proto.WriteBatch: int BASE_WRITES_FIELD_NUMBER
com.google.common.util.concurrent.AbstractFuture$Waiter: com.google.common.util.concurrent.AbstractFuture$Waiter next
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void resetAnalyticsData(long)
com.mapbox.geojson.FeatureCollection: com.mapbox.geojson.FeatureCollection fromFeatures(java.util.List,com.mapbox.geojson.BoundingBox)
com.mapbox.mapboxsdk.log.Logger: int VERBOSE
com.mapbox.geojson.Point: java.util.List coordinates
android.support.v4.media.AudioAttributesImplApi26Parcelizer: void write(androidx.media.AudioAttributesImplApi26,androidx.versionedparcelable.VersionedParcel)
com.google.gson.JsonElement: JsonElement()
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
com.mapbox.mapboxsdk.maps.MapboxMapOptions: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzvl: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent$2: PerformanceEvent$2(com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent)
com.mapbox.mapboxsdk.http.NativeHttpRequest: void cancel()
com.google.android.gms.internal.firebase-auth-api.zzfz
com.google.android.gms.internal.measurement.zzck$zza
com.mapbox.geojson.utils.PolylineUtils: double getSqDist(com.mapbox.geojson.Point,com.mapbox.geojson.Point)
com.google.firestore.v1.StructuredQuery: int START_AT_FIELD_NUMBER
com.mapbox.mapboxsdk.style.sources.Source: java.lang.Long getMinimumTileUpdateInterval()
com.google.firebase.firestore.remote.ConnectivityMonitor$NetworkStatus: com.google.firebase.firestore.remote.ConnectivityMonitor$NetworkStatus[] values()
com.mapbox.geojson.ListOfDoublesCoordinatesTypeAdapter
com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Waiter waiters
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService: JobInfoSchedulerService()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
com.google.firestore.v1.Target$QueryTarget: int STRUCTURED_QUERY_FIELD_NUMBER
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface
com.mapbox.geojson.Polygon: com.mapbox.geojson.BoundingBox bbox
com.mapbox.geojson.GeoJson: java.lang.String type()
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] values()
com.google.android.gms.internal.firebase-auth-api.zzhj
com.mapbox.mapboxsdk.offline.OfflineManager$CreateOfflineRegionCallback: void onCreate(com.mapbox.mapboxsdk.offline.OfflineRegion)
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mTimedOutEventParams
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPointerDataPacket(long,java.nio.ByteBuffer,int)
com.mapbox.mapboxsdk.module.telemetry.PhoneState: java.lang.String obtainCellularCarrier(android.content.Context)
com.mapbox.mapboxsdk.offline.OfflineGeometryRegionDefinition: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values()
com.google.android.gms.internal.measurement.zzbv$zza: int zzc
com.google.common.collect.Maps$EntryFunction: com.google.common.collect.Maps$EntryFunction[] values()
com.mapbox.mapboxsdk.style.sources.Source: java.lang.String getAttribution()
io.flutter.embedding.engine.FlutterJNI: void markTextureFrameAvailable(long)
com.google.firebase.firestore.core.UserData$Source: com.google.firebase.firestore.core.UserData$Source[] values()
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: java.lang.String state
com.google.firestore.v1.Value: int MAP_VALUE_FIELD_NUMBER
com.mapbox.mapboxsdk.annotations.BasePointCollection: java.util.List points
com.google.android.gms.internal.measurement.zzck$zzd: com.google.android.gms.internal.measurement.zzjs zzl
com.mapbox.mapboxsdk.style.layers.LineLayer: java.lang.Object nativeGetLineTranslateAnchor()
com.google.android.gms.internal.firebase-auth-api.zzzl
com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator: com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator[] values()
com.google.android.gms.measurement.AppMeasurement: java.lang.String getCurrentScreenName()
com.google.rpc.Status
com.google.firestore.v1.TransactionOptions$ReadOnly
com.google.firestore.v1.ListenResponse: int DOCUMENT_REMOVE_FIELD_NUMBER
com.mapbox.mapboxsdk.style.sources.CustomGeometrySource: void finalize()
com.mapbox.mapboxsdk.style.layers.CircleLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetCircleRadiusTransition()
com.mapbox.mapboxsdk.style.layers.CircleLayer: void nativeSetCircleStrokeWidthTransition(long,long)
com.mapbox.geojson.LineString$GsonTypeAdapter: com.mapbox.geojson.CoordinateContainer createCoordinateContainer(java.lang.String,com.mapbox.geojson.BoundingBox,java.util.List)
com.mapbox.geojson.Feature: int hashCode()
com.google.firestore.v1.TargetChange: com.google.rpc.Status cause_
android.support.v4.media.AudioAttributesImplApi26Parcelizer
com.mapbox.android.telemetry.LocationEvent: java.lang.Double altitude
com.mapbox.mapboxsdk.storage.FileSource: long nativePtr
androidx.versionedparcelable.ParcelImpl
com.google.android.gms.internal.measurement.zzcd$zzc: com.google.android.gms.internal.measurement.zzcd$zzc zzi
com.mapbox.mapboxsdk.style.layers.LineLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetLineOffsetTransition()
com.google.firestore.v1.StructuredQuery$FieldReference: int FIELD_PATH_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzck$zzb: com.google.android.gms.internal.measurement.zzck$zzb zzf
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetSymbolSpacing()
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: java.nio.ByteBuffer[] yuvPlanes
io.flutter.embedding.engine.FlutterJNI: void setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
com.mapbox.geojson.Point$GsonTypeAdapter: com.mapbox.geojson.Point read(com.google.gson.stream.JsonReader)
com.mapbox.geojson.MultiPolygon: int hashCode()
com.mapbox.android.telemetry.Attachment: void writeToParcel(android.os.Parcel,int)
com.google.firebase.auth.EmailAuthCredential: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.Mapbox: void initializeTelemetry()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void release()
io.flutter.embedding.engine.FlutterJNI: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
com.mapbox.mapboxsdk.log.Logger: void i(java.lang.String,java.lang.String,java.lang.Throwable)
androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
com.mapbox.geojson.MultiPolygon$GsonTypeAdapter: MultiPolygon$GsonTypeAdapter(com.google.gson.Gson)
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
androidx.appcompat.view.menu.ActionMenuItemView
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: void writeToParcel(android.os.Parcel,int)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetLatLng(double,double,double[],long)
com.google.protobuf.AbstractMessageLite: int memoizedHashCode
com.mapbox.android.telemetry.LocationEvent: void setAltitude(java.lang.Double)
com.mapbox.mapboxsdk.http.NativeHttpRequest
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsetsAnimation$Callback getAnimationCallback()
com.mapbox.mapboxsdk.net.NativeConnectivityListener
com.google.firestore.v1.Target$QueryTarget: java.lang.Object queryType_
androidx.activity.ComponentActivity$2
com.google.android.gms.internal.measurement.zzhy: int zzc
androidx.core.widget.NestedScrollView
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getBlockNetworkLoads()
com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: void onAppUserTurnstileEvent()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.mapbox.mapboxsdk.style.sources.GeoJsonSource: void nativeSetFeatureCollection(com.mapbox.geojson.FeatureCollection)
com.google.firebase.provider.FirebaseInitProvider: FirebaseInitProvider()
com.google.android.exoplayer2.drm.DrmInitData$SchemeData: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzlo: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconHaloColor()
com.google.rpc.Status: com.google.protobuf.Parser PARSER
com.google.android.gms.internal.measurement.zzcd$zzb
com.google.gson.JsonPrimitive: JsonPrimitive(java.lang.Boolean)
com.mapbox.android.telemetry.VisionObjectDetectionEvent: java.lang.Double distance_from_camera
com.google.firebase.firestore.proto.Target: com.google.protobuf.ByteString resumeToken_
com.mapbox.android.telemetry.VisionEvent: java.util.HashMap contents
com.google.gson.TypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView
com.mapbox.geojson.gson.BoundingBoxTypeAdapter: void write(com.google.gson.stream.JsonWriter,com.mapbox.geojson.BoundingBox)
io.flutter.embedding.android.FlutterTextureView
com.google.android.exoplayer2.decoder.OutputBuffer: int skippedOutputBufferCount
com.mapbox.geojson.shifter.CoordinateShifterManager
com.mapbox.mapboxsdk.style.light.Light: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetIntensityTransition()
com.mapbox.mapboxsdk.style.sources.Source: java.lang.Integer getPrefetchZoomDelta()
com.google.android.gms.internal.firebase-auth-api.zzhg: com.google.android.gms.internal.firebase-auth-api.zzhg zzg
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzgy: com.google.android.gms.internal.firebase-auth-api.zzym zzb
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction valueOf(java.lang.String)
com.google.firestore.v1.StructuredQuery$FieldFilter: int op_
com.mapbox.mapboxsdk.storage.FileSource: void setResourceTransform(com.mapbox.mapboxsdk.storage.FileSource$ResourceTransformCallback)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconImage()
io.flutter.plugins.googlemaps.GoogleMapController
com.google.android.gms.internal.measurement.zzca$zza: boolean zze
com.google.firebase.auth.FirebaseAuth
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setMinimumSessionDuration(long)
com.mapbox.android.telemetry.VisionObjectDetectionEvent: void setObjectLongitude(double)
com.mapbox.mapboxsdk.maps.NativeMapView: long[] nativeAddPolylines(com.mapbox.mapboxsdk.annotations.Polyline[])
com.mapbox.mapboxsdk.style.sources.Source: void setMaxOverscaleFactorForParentTiles(java.lang.Integer)
com.google.android.gms.internal.measurement.zzcd$zzb: int zzc
com.google.firebase.messaging.FirebaseMessaging: com.google.firebase.messaging.FirebaseMessaging getInstance(com.google.firebase.FirebaseApp)
com.google.android.gms.internal.firebase-auth-api.zzjd
androidx.media.AudioAttributesImplApi21: AudioAttributesImplApi21()
com.google.android.gms.internal.firebase-auth-api.zzzo: com.google.android.gms.internal.firebase-auth-api.zzabs zzc
com.google.android.gms.internal.measurement.zzck$zzc: int zzc
com.google.android.gms.internal.firebase-auth-api.zzfb: com.google.android.gms.internal.firebase-auth-api.zzym zzf
com.mapbox.android.telemetry.VisionEvent: java.util.HashMap getContents()
com.mapbox.mapboxsdk.style.layers.LineLayer: void nativeSetLineTranslateTransition(long,long)
com.mapbox.mapboxsdk.style.layers.BackgroundLayer: java.lang.Object nativeGetBackgroundPattern()
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void nativeOnSurfaceDestroyed()
android.support.v4.media.AudioAttributesImplApi21Parcelizer
com.google.firestore.v1.BatchGetDocumentsRequest: int NEW_TRANSACTION_FIELD_NUMBER
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
com.mapbox.mapboxsdk.maps.NativeMapView: boolean onCanRemoveUnusedStyleImage(java.lang.String)
com.google.firestore.v1.Value: int INTEGER_VALUE_FIELD_NUMBER
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: java.lang.String getUserId()
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
com.google.firestore.v1.Cursor: com.google.protobuf.Internal$ProtobufList values_
com.google.android.gms.internal.firebase-auth-api.zzij: com.google.android.gms.internal.firebase-auth-api.zzij zzf
com.google.gson.typeadapters.RuntimeTypeAdapterFactory: com.google.gson.typeadapters.RuntimeTypeAdapterFactory of(java.lang.Class,java.lang.String,boolean)
androidx.appcompat.widget.SearchView: int getImeOptions()
io.grpc.internal.ClientStreamListener$RpcProgress: io.grpc.internal.ClientStreamListener$RpcProgress[] values()
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
com.google.firestore.v1.DocumentDelete: int removedTargetIdsMemoizedSerializedSize
com.google.gson.JsonElement: java.lang.String getAsString()
com.mapbox.android.accounts.v1.MapboxAccounts: java.lang.String obtainVisionSkuUserToken(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet)
androidx.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
com.mapbox.mapboxsdk.location.LocationComponentOptions: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.offline.OfflineRegion: void setOfflineRegionObserver(com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionObserver)
com.google.android.gms.measurement.AppMeasurement: java.lang.String getCurrentScreenClass()
com.google.firestore.v1.StructuredQuery: int ORDER_BY_FIELD_NUMBER
io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error valueOf(java.lang.String)
com.google.firebase.auth.PhoneAuthProvider$ForceResendingToken: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.TargetChange$TargetChangeType: com.google.firestore.v1.TargetChange$TargetChangeType valueOf(java.lang.String)
androidx.lifecycle.CompositeGeneratedAdaptersObserver
com.mapbox.geojson.BaseGeometryTypeAdapter: com.mapbox.geojson.CoordinateContainer readCoordinateContainer(com.google.gson.stream.JsonReader)
com.mapbox.mapboxsdk.style.layers.RasterLayer: java.lang.Object nativeGetRasterBrightnessMin()
com.google.firebase.auth.TwitterAuthCredential: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPlatformMessage(long,java.lang.String,java.nio.ByteBuffer,int,int)
io.flutter.embedding.engine.FlutterJNI: void setViewportMetrics(float,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
com.mapbox.geojson.GeometryAdapterFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
com.mapbox.mapboxsdk.offline.OfflineRegionDefinition: double getMinZoom()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifierBase(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
com.mapbox.geojson.Feature$GsonTypeAdapter: Feature$GsonTypeAdapter(com.google.gson.Gson)
com.google.android.gms.internal.measurement.zzca$zzc: java.lang.String zzd
com.mapbox.android.telemetry.VisionObjectDetectionEvent: java.lang.String readStringIfNotNull(android.os.Parcel)
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: java.lang.Object nativeGetImageTiltDisplacement()
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void onStart()
com.mapbox.mapboxsdk.style.layers.FillLayer: void nativeSetFillOpacityTransition(long,long)
com.mapbox.android.telemetry.Event: com.mapbox.android.telemetry.Event$Type obtainType()
com.google.android.gms.measurement.AppMeasurement: com.google.android.gms.measurement.AppMeasurement getInstance(android.content.Context)
com.mapbox.geojson.MultiPolygon$GsonTypeAdapter: com.mapbox.geojson.CoordinateContainer createCoordinateContainer(java.lang.String,com.mapbox.geojson.BoundingBox,java.lang.Object)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
com.google.android.exoplayer2.decoder.OutputBuffer: OutputBuffer()
android.support.v4.media.MediaBrowserCompat$MediaItem: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.Value: int STRING_VALUE_FIELD_NUMBER
com.google.firestore.v1.Precondition
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback
com.google.firebase.firestore.proto.Target: java.lang.Object targetType_
com.google.android.gms.internal.firebase-auth-api.zzev: com.google.android.gms.internal.firebase-auth-api.zzey zzb
com.mapbox.geojson.BoundingBox: java.lang.String toString()
com.mapbox.geojson.Polygon
com.mapbox.mapboxsdk.offline.OfflineRegion: OfflineRegion(long,com.mapbox.mapboxsdk.storage.FileSource,long,com.mapbox.mapboxsdk.offline.OfflineRegionDefinition,byte[])
com.google.android.gms.safetynet.HarmfulAppsData: android.os.Parcelable$Creator CREATOR
com.google.firebase.iid.FirebaseInstanceId
com.google.gson.JsonArray: java.math.BigInteger getAsBigInteger()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int deferredInsetTypes
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetTransitionDelay(long)
com.mapbox.mapboxsdk.offline.OfflineManager$ListOfflineRegionsCallback: void onError(java.lang.String)
com.mapbox.geojson.Feature: com.mapbox.geojson.Feature fromJson(java.lang.String)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: android.net.Uri getSafeBrowsingPrivacyPolicyUrl()
com.google.android.gms.internal.firebase-auth-api.zzlw: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzia: int zzg
com.mapbox.android.telemetry.Attachment: int describeContents()
com.mapbox.mapboxsdk.style.layers.CircleLayer: void nativeSetCircleOpacityTransition(long,long)
io.flutter.embedding.engine.FlutterJNI: void nativeUnregisterTexture(long,long)
com.mapbox.mapboxsdk.style.layers.FillLayer: void finalize()
com.mapbox.geojson.ListOfListOfPointCoordinatesTypeAdapter: ListOfListOfPointCoordinatesTypeAdapter()
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void attachToGLContext(int)
androidx.core.app.RemoteActionCompat
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
com.google.android.gms.internal.measurement.zzcd$zzg: com.google.android.gms.internal.measurement.zzig zzf
com.mapbox.geojson.ListOfPointCoordinatesTypeAdapter: ListOfPointCoordinatesTypeAdapter()
com.mapbox.mapboxsdk.annotations.BubbleLayout: float getArrowHeight()
com.google.android.exoplayer2.metadata.Metadata: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.BatchGetDocumentsRequest
com.google.firestore.v1.StructuredQuery$FieldReference: java.lang.String fieldPath_
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logHealthData(int,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper)
com.mapbox.android.telemetry.CrashEvent: java.lang.String created
io.grpc.InternalChannelz$ChannelTrace$Event$Severity: io.grpc.InternalChannelz$ChannelTrace$Event$Severity valueOf(java.lang.String)
com.mapbox.mapboxsdk.style.layers.RasterLayer: java.lang.Object nativeGetRasterSaturation()
com.mapbox.mapboxsdk.style.layers.CircleLayer: java.lang.Object nativeGetCirclePitchAlignment()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
com.google.gson.JsonPrimitive: java.lang.String getAsString()
com.mapbox.mapboxsdk.style.layers.HillshadeLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetHillshadeExaggerationTransition()
com.mapbox.geojson.Feature: com.google.gson.TypeAdapter typeAdapter(com.google.gson.Gson)
com.mapbox.android.telemetry.CrashEvent: java.lang.String stackTrace
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
com.google.firebase.auth.internal.zzt: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol valueOf(java.lang.String)
com.google.android.gms.internal.location.zzbd: android.os.Parcelable$Creator CREATOR
com.mapbox.geojson.MultiPolygon: com.mapbox.geojson.BoundingBox bbox()
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadStartEvent: OfflineDownloadStartEvent(com.mapbox.mapboxsdk.module.telemetry.PhoneState,java.lang.String,java.lang.Double,java.lang.Double)
com.mapbox.mapboxsdk.style.sources.VectorSource: java.lang.String nativeGetUrl()
com.google.android.gms.internal.firebase-auth-api.zzed: int zzb
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTimeToLive
com.mapbox.mapboxsdk.module.telemetry.PhoneState: void setWifi(boolean)
com.google.firestore.v1.ArrayValue: int VALUES_FIELD_NUMBER
com.google.android.gms.cloudmessaging.CloudMessage: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
com.google.firestore.v1.Write$OperationCase: com.google.firestore.v1.Write$OperationCase[] values()
androidx.appcompat.widget.DropDownListView: void setSelectorEnabled(boolean)
com.mapbox.geojson.BaseGeometryTypeAdapter: com.mapbox.geojson.CoordinateContainer createCoordinateContainer(java.lang.String,com.mapbox.geojson.BoundingBox,java.lang.Object)
com.mapbox.geojson.constants.GeoJsonConstants: GeoJsonConstants()
com.mapbox.geojson.FeatureCollection: int hashCode()
com.mapbox.mapboxsdk.offline.OfflineTilePyramidRegionDefinition: OfflineTilePyramidRegionDefinition(java.lang.String,com.mapbox.mapboxsdk.geometry.LatLngBounds,double,double,float,boolean)
com.google.gson.TypeAdapter: void toJson(java.io.Writer,java.lang.Object)
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: void finalize()
com.mapbox.mapboxsdk.offline.OfflineGeometryRegionDefinition: boolean includeIdeographs
com.google.gson.JsonElement: boolean isJsonNull()
com.google.android.gms.internal.firebase-auth-api.zzes: com.google.android.gms.internal.firebase-auth-api.zzes zzg
com.mapbox.mapboxsdk.style.layers.CircleLayer
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor
com.mapbox.mapboxsdk.style.types.FormattedSection: java.lang.String getText()
com.google.gson.JsonElement: java.math.BigDecimal getAsBigDecimal()
com.mapbox.android.telemetry.VisionObjectDetectionEvent: java.lang.String clazz
io.flutter.embedding.engine.FlutterJNI: FlutterJNI()
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)
com.mapbox.geojson.FeatureCollection: java.lang.String toJson()
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
com.google.firebase.firestore.proto.WriteBatch: int WRITES_FIELD_NUMBER
com.google.protobuf.Writer$FieldOrder: com.google.protobuf.Writer$FieldOrder[] values()
com.google.firestore.v1.TransactionOptions$ReadOnly: int consistencySelectorCase_
com.google.firestore.v1.BatchGetDocumentsResponse: int MISSING_FIELD_NUMBER
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath
com.mapbox.geojson.Feature: void addProperty(java.lang.String,com.google.gson.JsonElement)
com.google.android.gms.internal.measurement.zzcd$zzb: int zzd
com.mapbox.mapboxsdk.geometry.LatLngQuad: com.mapbox.mapboxsdk.geometry.LatLng topLeft
com.google.firestore.v1.StructuredQuery$Order: int DIRECTION_FIELD_NUMBER
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
com.google.android.gms.internal.measurement.zzbv$zzb: boolean zzj
com.mapbox.geojson.Point$GsonTypeAdapter: com.mapbox.geojson.CoordinateContainer createCoordinateContainer(java.lang.String,com.mapbox.geojson.BoundingBox,java.util.List)
com.google.android.gms.internal.firebase-auth-api.zzeg
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: java.nio.ByteBuffer data
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
com.google.firestore.v1.BatchGetDocumentsRequest: int READ_TIME_FIELD_NUMBER
com.google.protobuf.JavaType: com.google.protobuf.JavaType valueOf(java.lang.String)
com.google.type.LatLng: double latitude_
com.mapbox.mapboxsdk.http.NativeHttpRequest: void onResponse(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,byte[])
com.mapbox.mapboxsdk.maps.NativeMapView: void onDidFinishLoadingStyle()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: SymbolLayer(long)
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
com.google.android.gms.internal.firebase-auth-api.zzack: com.google.android.gms.internal.firebase-auth-api.zzack[] values()
androidx.core.graphics.drawable.IconCompat
com.mapbox.geojson.Point: java.lang.String TYPE
com.google.firebase.firestore.Query$Direction: com.google.firebase.firestore.Query$Direction[] values()
com.google.firestore.v1.StructuredQuery$FieldFilter: com.google.firestore.v1.StructuredQuery$FieldReference field_
com.google.firebase.Timestamp: android.os.Parcelable$Creator CREATOR
com.mapbox.geojson.Feature: java.lang.String toJson()
com.google.firestore.v1.ListenRequest: int REMOVE_TARGET_FIELD_NUMBER
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mTriggeredEventParams
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: java.lang.String getSdkIdentifier()
com.mapbox.geojson.GeometryCollection: boolean equals(java.lang.Object)
com.mapbox.android.telemetry.LocationEvent: java.lang.String getSource()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchSemanticsAction(long,int,int,java.nio.ByteBuffer,int)
com.mapbox.geojson.MultiLineString$GsonTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
com.mapbox.mapboxsdk.module.telemetry.PhoneState: java.lang.String getOrientation()
com.google.firestore.v1.StructuredQuery$CollectionSelector: boolean allDescendants_
com.google.protobuf.Timestamp: long seconds_
com.google.firestore.v1.ListenRequest: com.google.protobuf.Parser PARSER
com.google.android.exoplayer2.decoder.Buffer: boolean isEndOfStream()
androidx.lifecycle.SingleGeneratedAdapterObserver
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
com.mapbox.android.telemetry.VisionEvent: void setContents(java.util.HashMap)
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeInitialize(com.mapbox.mapboxsdk.maps.NativeMapView,com.mapbox.mapboxsdk.storage.FileSource,com.mapbox.mapboxsdk.maps.renderer.MapRenderer,float,boolean)
com.google.android.gms.internal.measurement.zzbv$zzb: com.google.android.gms.internal.measurement.zzbv$zzb zzl
com.mapbox.mapboxsdk.maps.NativeMapView: void onDidFailLoadingMap(java.lang.String)
com.mapbox.geojson.MultiLineString$GsonTypeAdapter: com.mapbox.geojson.CoordinateContainer createCoordinateContainer(java.lang.String,com.mapbox.geojson.BoundingBox,java.lang.Object)
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent$PerformanceAttribute: PerformanceEvent$PerformanceAttribute(java.lang.String,java.lang.Object)
com.mapbox.android.telemetry.VisionObjectDetectionEvent: java.lang.String sign_value
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
com.mapbox.mapboxsdk.style.layers.HeatmapLayer: void nativeSetHeatmapIntensityTransition(long,long)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getAppInstanceId(com.google.android.gms.internal.measurement.zzw)
com.google.android.gms.internal.firebase-auth-api.zzhj: com.google.android.gms.internal.firebase-auth-api.zzhj zzf
com.google.firestore.v1.StructuredQuery$Filter: java.lang.Object filterType_
com.google.firestore.v1.Target$QueryTarget: com.google.firestore.v1.Target$QueryTarget DEFAULT_INSTANCE
com.mapbox.geojson.Point: java.util.List coordinates()
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(com.google.gson.reflect.TypeToken)
com.mapbox.android.telemetry.VisionObjectDetectionEvent: java.lang.String getSignValue()
io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType: io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType valueOf(java.lang.String)
com.mapbox.mapboxsdk.annotations.BubbleLayout: float getArrowWidth()
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
com.mapbox.mapboxsdk.maps.widgets.CompassView: void setCompassImage(android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)
com.mapbox.mapboxsdk.offline.OfflineTilePyramidRegionDefinition
com.mapbox.mapboxsdk.style.layers.FillLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetFillOutlineColorTransition()
com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator: com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator[] values()
com.mapbox.geojson.MultiLineString: java.lang.String type()
com.mapbox.geojson.MultiLineString: java.util.List coordinates()
com.google.gson.JsonObject: java.util.Set keySet()
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeRemoveAnnotations(long[])
com.mapbox.android.telemetry.VisionObjectDetectionEvent: double getVehicleLongitude()
com.google.firestore.v1.ListenResponse$ResponseTypeCase: com.google.firestore.v1.ListenResponse$ResponseTypeCase valueOf(java.lang.String)
com.google.firestore.v1.StructuredQuery$Order: int direction_
com.google.firestore.v1.DocumentChange: int removedTargetIdsMemoizedSerializedSize
com.google.android.gms.internal.measurement.zzca$zzb
com.mapbox.geojson.BaseGeometryTypeAdapter: com.google.gson.TypeAdapter coordinatesAdapter
com.google.android.gms.measurement.AppMeasurement: java.util.Map getUserProperties(java.lang.String,java.lang.String,boolean)
com.mapbox.mapboxsdk.style.light.Light: void nativeSetPosition(com.mapbox.mapboxsdk.style.light.Position)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type valueOf(java.lang.String)
com.mapbox.geojson.gson.BoundingBoxTypeAdapter
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setEventInterceptor(com.google.android.gms.internal.measurement.zzab)
androidx.appcompat.widget.LinearLayoutCompat
com.google.android.gms.internal.firebase-auth-api.zzgh
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets lastWindowInsets
io.flutter.embedding.android.FlutterImageView
com.mapbox.mapboxsdk.offline.OfflineTilePyramidRegionDefinition: double maxZoom
com.mapbox.geojson.MultiLineString: java.lang.String toJson()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconAllowOverlap()
androidx.appcompat.widget.ScrollingTabContainerView: void setContentHeight(int)
com.mapbox.mapboxsdk.offline.OfflineRegion: void updateOfflineRegionMetadata(byte[],com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionUpdateMetadataCallback)
com.google.gson.reflect.TypeToken: boolean matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map)
com.google.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource: com.google.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource valueOf(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void initForTests(java.util.Map)
io.flutter.view.AccessibilityViewEmbedder: boolean performAction(int,int,android.os.Bundle)
androidx.media.AudioAttributesImplApi26Parcelizer
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: java.lang.String TAG
com.mapbox.mapboxsdk.Mapbox: com.mapbox.mapboxsdk.ModuleProvider getModuleProvider()
androidx.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getServiceWorkerController()
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
com.google.android.gms.internal.measurement.zzca$zzb: com.google.android.gms.internal.measurement.zzig zzi
com.google.android.exoplayer2.metadata.id3.GeobFrame: android.os.Parcelable$Creator CREATOR
com.google.firebase.firestore.proto.MaybeDocument: int documentTypeCase_
com.mapbox.geojson.BoundingBox: BoundingBox(com.mapbox.geojson.Point,com.mapbox.geojson.Point)
com.google.android.gms.internal.firebase-auth-api.zzig: com.google.android.gms.internal.firebase-auth-api.zzig zzf
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
com.google.firestore.v1.CommitResponse: com.google.protobuf.Timestamp commitTime_
com.mapbox.mapboxsdk.maps.MapView: void setMapboxMap(com.mapbox.mapboxsdk.maps.MapboxMap)
com.mapbox.android.telemetry.VisionEvent: VisionEvent()
com.mapbox.mapboxsdk.style.light.Light: void nativeSetIntensity(float)
com.google.android.gms.internal.firebase-auth-api.zzgk
com.mapbox.mapboxsdk.style.layers.RasterLayer: void nativeSetRasterHueRotateTransition(long,long)
com.mapbox.android.telemetry.CrashEvent: com.mapbox.android.telemetry.Event$Type obtainType()
com.google.android.gms.internal.firebase-auth-api.zzwr: android.os.Parcelable$Creator CREATOR
com.mapbox.geojson.Feature: com.mapbox.geojson.Geometry geometry()
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadStartEvent: java.lang.String getStyleURL()
com.google.firestore.v1.WriteRequest: int LABELS_FIELD_NUMBER
com.google.android.exoplayer2.source.dash.DashMediaSource$Factory
com.google.android.gms.internal.firebase-auth-api.zzho: int zzf
com.mapbox.android.telemetry.AppUserTurnstile: AppUserTurnstile(java.lang.String,java.lang.String,boolean)
com.mapbox.geojson.GeometryCollection: java.lang.String type()
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle valueOf(java.lang.String)
com.google.firestore.v1.StructuredQuery$FieldFilter: int FIELD_FIELD_NUMBER
com.mapbox.mapboxsdk.style.layers.FillLayer: java.lang.Object nativeGetFillOutlineColor()
com.google.android.gms.internal.measurement.zzck$zzb: com.google.android.gms.internal.measurement.zzjs zzg
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
com.google.android.gms.internal.measurement.zzcd$zzc: long zzf
com.mapbox.android.telemetry.VisionObjectDetectionEvent: java.lang.Double object_size_height
com.google.firebase.firestore.proto.NoDocument: int READ_TIME_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zzem: com.google.android.gms.internal.firebase-auth-api.zzem zzg
com.mapbox.android.telemetry.LocationEvent: double getLatitude()
com.mapbox.mapboxsdk.style.sources.RasterSource
com.google.android.gms.internal.measurement.zzck$zzd: int zzd
com.google.android.gms.internal.measurement.zzcd$zze: double zzh
com.mapbox.mapboxsdk.style.layers.HeatmapLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetHeatmapOpacityTransition()
com.google.firestore.v1.WriteResponse: int COMMIT_TIME_FIELD_NUMBER
com.google.protobuf.JavaType: com.google.protobuf.JavaType[] values()
com.google.android.gms.internal.firebase-auth-api.zzmq: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzcd$zza: com.google.android.gms.internal.measurement.zzcd$zzi zzf
io.grpc.util.RoundRobinLoadBalancer$ReadyPicker: int index
com.google.android.gms.common.internal.ClientIdentity: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.style.sources.VectorSource: void finalize()
com.google.firestore.v1.WriteResult: com.google.protobuf.Timestamp updateTime_
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource valueOf(java.lang.String)
com.google.firestore.v1.BatchGetDocumentsResponse: int resultCase_
com.mapbox.mapboxsdk.style.sources.Source: void nativeSetMinimumTileUpdateInterval(java.lang.Long)
io.flutter.embedding.engine.FlutterJNI: void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeOnLowMemory()
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
com.mapbox.mapboxsdk.geometry.LatLngBounds: LatLngBounds(double,double,double,double)
com.mapbox.android.telemetry.LocationEvent: int describeContents()
com.mapbox.geojson.MultiPoint$GsonTypeAdapter: com.mapbox.geojson.CoordinateContainer createCoordinateContainer(java.lang.String,com.mapbox.geojson.BoundingBox,java.util.List)
com.google.android.gms.internal.measurement.zzae: android.os.Parcelable$Creator CREATOR
io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State valueOf(java.lang.String)
com.mapbox.mapboxsdk.geometry.LatLngBounds: double longitudeEast
com.google.android.gms.internal.measurement.zzbv$zzf: boolean zzf
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle lifecycle
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void detachFromGLContext()
okhttp3.Protocol: okhttp3.Protocol valueOf(java.lang.String)
com.google.gson.reflect.TypeToken: java.lang.reflect.Type type
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: java.lang.Object nativeGetAccuracyRadiusBorderColor()
com.google.android.gms.internal.firebase-auth-api.zzmk: android.os.Parcelable$Creator CREATOR
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getDisabledActionModeMenuItems()
com.mapbox.android.telemetry.Attachment: java.lang.String VIS_ATTACHMENT
io.flutter.view.FlutterView
com.google.i18n.phonenumbers.NumberParseException$ErrorType: com.google.i18n.phonenumbers.NumberParseException$ErrorType[] values()
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent: com.google.gson.JsonObject getMetadata()
com.google.firestore.v1.WriteRequest: java.lang.String streamId_
com.mapbox.geojson.MultiLineString: java.util.List lineStrings()
com.google.android.exoplayer2.upstream.RawResourceDataSource
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: void onSnapshotReady(com.mapbox.mapboxsdk.snapshotter.MapSnapshot)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getWebkitToCompatConverter()
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
com.google.firebase.analytics.FirebaseAnalytics: com.google.android.gms.measurement.internal.zzia getScionFrontendApiImplementation(android.content.Context,android.os.Bundle)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$600(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
com.google.android.gms.measurement.internal.zzap: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.Precondition: int UPDATE_TIME_FIELD_NUMBER
com.mapbox.mapboxsdk.style.sources.VectorSource: VectorSource(long)
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: int getCacheMode()
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.google.gson.JsonArray: double getAsDouble()
com.google.android.gms.internal.firebase-auth-api.zzib: com.google.android.gms.internal.firebase-auth-api.zzzt zze
com.google.firestore.v1.DocumentTransform: com.google.firestore.v1.DocumentTransform DEFAULT_INSTANCE
com.mapbox.geojson.FeatureCollection: java.lang.String type
com.mapbox.geojson.FeatureCollection$GsonTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
com.lyokone.location.FlutterLocationService: FlutterLocationService()
com.mapbox.geojson.GeometryCollection$GsonTypeAdapter: void write(com.google.gson.stream.JsonWriter,com.mapbox.geojson.GeometryCollection)
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
com.google.android.gms.internal.measurement.zzbv$zzd: java.lang.String zzg
com.google.firestore.v1.Write: com.google.firestore.v1.Precondition currentDocument_
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityDestroyed(com.google.android.gms.dynamic.IObjectWrapper,long)
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: void nativeSetAccuracyRadiusColorTransition(long,long)
com.mapbox.mapboxsdk.module.telemetry.PhoneState$Orientation: com.mapbox.mapboxsdk.module.telemetry.PhoneState$Orientation valueOf(java.lang.String)
com.google.firestore.v1.TransactionOptions: int READ_WRITE_FIELD_NUMBER
com.mapbox.mapboxsdk.log.Logger: void v(java.lang.String,java.lang.String)
com.mapbox.android.telemetry.VisionObjectDetectionEvent: void setClazz(java.lang.String)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
io.grpc.okhttp.OkHttpChannelBuilder
com.google.firebase.firestore.util.Logger$Level: com.google.firebase.firestore.util.Logger$Level[] values()
com.mapbox.mapboxsdk.module.telemetry.PhoneState: PhoneState(android.content.Context)
com.mapbox.mapboxsdk.style.layers.LineLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetLinePatternTransition()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
com.google.firestore.v1.WriteResult: int TRANSFORM_RESULTS_FIELD_NUMBER
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: AnalyticsConnectorRegistrar()
com.mapbox.android.telemetry.AppUserTurnstile: java.lang.String sdkVersion
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: void nativeSetAccuracyRadiusTransition(long,long)
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: java.lang.String toString()
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
com.google.android.gms.internal.firebase-auth-api.zzlg: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.style.types.FormattedSection: java.lang.Number fontScale
com.google.firebase.firestore.proto.WriteBatch: com.google.protobuf.Internal$ProtobufList baseWrites_
com.mapbox.mapboxsdk.style.layers.SymbolLayer: void nativeSetTextOpacityTransition(long,long)
com.mapbox.mapboxsdk.annotations.BasePointCollection: float alpha
com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: void disableTelemetrySession()
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: void setSizeOfResourcesCompleted(long)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values()
com.google.firestore.v1.WriteRequest: int STREAM_ID_FIELD_NUMBER
com.google.firestore.v1.Document: int FIELDS_FIELD_NUMBER
com.google.android.exoplayer2.offline.StreamKey: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.TransactionOptions: int modeCase_
com.google.gson.JsonElement: long getAsLong()
com.mapbox.mapboxsdk.module.telemetry.MapBaseEvent: MapBaseEvent(com.mapbox.mapboxsdk.module.telemetry.PhoneState)
com.mapbox.mapboxsdk.http.NativeHttpRequest: java.util.concurrent.locks.ReentrantLock lock
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconOffset()
com.google.android.gms.internal.measurement.zzck$zzb: com.google.android.gms.internal.measurement.zzig zze
com.mapbox.mapboxsdk.style.types.FormattedSection: java.lang.Number getFontScale()
com.google.android.gms.internal.measurement.zzca$zzb: com.google.android.gms.internal.measurement.zzjs zzn
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
com.google.android.gms.internal.firebase-auth-api.zzho: com.google.android.gms.internal.firebase-auth-api.zzho zzg
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void unregisterOnMeasurementEventListener(com.google.android.gms.internal.measurement.zzab)
com.google.firestore.v1.Value: java.lang.Object valueType_
com.mapbox.android.telemetry.Attachment: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionInvalidateCallback
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
com.mapbox.geojson.BoundingBox: double south()
com.google.android.gms.internal.measurement.zzbv$zze: boolean zzg
android.support.v4.media.MediaDescriptionCompat: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.Precondition$ConditionTypeCase: com.google.firestore.v1.Precondition$ConditionTypeCase[] values()
com.google.firestore.v1.ListenResponse
com.mapbox.mapboxsdk.style.sources.GeoJsonSource: com.mapbox.geojson.Feature[] querySourceFeatures(java.lang.Object[])
com.google.android.exoplayer2.metadata.icy.IcyInfo: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzbv$zza: com.google.android.gms.internal.measurement.zzig zze
com.google.firestore.v1.DocumentMask: com.google.protobuf.Parser PARSER
com.google.android.gms.common.internal.safeparcel.SafeParcelable: java.lang.String NULL
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
com.mapbox.mapboxsdk.annotations.BubbleLayout
com.mapbox.geojson.Polygon: com.mapbox.geojson.LineString outer()
com.mapbox.mapboxsdk.style.sources.Source: java.lang.Boolean nativeIsVolatile()
com.google.android.gms.internal.measurement.zzcd$zzg: int zzai
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void showInterstitial(boolean)
io.flutter.embedding.engine.FlutterJNI: android.os.Looper mainLooper
com.google.android.gms.internal.firebase-auth-api.zzfq
com.google.android.exoplayer2.metadata.id3.BinaryFrame: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent: java.util.List getCounters()
com.google.android.gms.internal.measurement.zzbv$zzb: boolean zzi
com.mapbox.geojson.MultiPolygon: com.mapbox.geojson.MultiPolygon fromPolygon(com.mapbox.geojson.Polygon,com.mapbox.geojson.BoundingBox)
com.google.android.gms.internal.firebase-auth-api.zzgq: com.google.android.gms.internal.firebase-auth-api.zzym zzg
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
com.google.firestore.v1.ListenRequest: java.lang.String database_
com.mapbox.mapboxsdk.style.layers.LineLayer: java.lang.Object nativeGetLineTranslate()
io.grpc.okhttp.internal.framed.HeadersMode: io.grpc.okhttp.internal.framed.HeadersMode[] values()
com.google.android.gms.dynamite.descriptors.com.google.firebase.auth.ModuleDescriptor: int MODULE_VERSION
com.google.android.exoplayer2.decoder.Buffer: void clearFlag(int)
com.google.gson.typeadapters.RuntimeTypeAdapterFactory: java.lang.String access$100(com.google.gson.typeadapters.RuntimeTypeAdapterFactory)
com.mapbox.mapboxsdk.annotations.Polygon: java.util.List holes
com.google.android.gms.internal.firebase-auth-api.zzzo: java.util.Map zzb
com.mapbox.android.accounts.v1.AccountsConstants: java.lang.String KEY_META_DATA_MANAGE_SKU
com.google.gson.JsonPrimitive: float getAsFloat()
io.flutter.plugins.urllauncher.WebViewActivity: WebViewActivity()
com.mapbox.android.telemetry.VisionEvent: void setName(java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.graphics.Matrix getPlatformViewMatrix()
com.google.firestore.v1.DocumentTransform$FieldTransform: com.google.firestore.v1.DocumentTransform$FieldTransform DEFAULT_INSTANCE
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: void initialize(java.lang.String,java.lang.String)
com.google.firestore.v1.StructuredQuery$Filter: com.google.firestore.v1.StructuredQuery$Filter DEFAULT_INSTANCE
com.google.android.gms.internal.firebase-auth-api.zzft: int zze
com.google.android.gms.internal.measurement.zzcd$zzg: long zzv
com.mapbox.geojson.LineString: com.mapbox.geojson.BoundingBox bbox
com.mapbox.android.telemetry.LocationEvent: java.lang.String OPERATING_SYSTEM
com.google.firebase.firestore.MetadataChanges: com.google.firebase.firestore.MetadataChanges valueOf(java.lang.String)
com.google.android.gms.common.internal.GetServiceRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: DynamiteModule$DynamiteLoaderClassLoader()
com.google.android.gms.dynamite.descriptors.com.google.firebase.auth.ModuleDescriptor: ModuleDescriptor()
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
com.google.protobuf.Int32Value: com.google.protobuf.Int32Value DEFAULT_INSTANCE
com.google.android.exoplayer2.metadata.id3.UrlLinkFrame: android.os.Parcelable$Creator CREATOR
com.mapbox.android.telemetry.LocationEvent: java.lang.String created
com.google.android.gms.internal.firebase-auth-api.zzgn: com.google.android.gms.internal.firebase-auth-api.zzgq zze
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
com.google.android.gms.internal.firebase-auth-api.zzwb: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextRotate()
com.google.gson.JsonArray: boolean getAsBoolean()
com.mapbox.mapboxsdk.geometry.LatLng: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout rootView
androidx.media.AudioAttributesCompat: AudioAttributesCompat()
com.google.firestore.v1.Target: int QUERY_FIELD_NUMBER
com.mapbox.mapboxsdk.maps.NativeMapView: double nativeGetBearing()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextIgnorePlacement()
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent: com.google.gson.JsonObject initMetaData(java.lang.String)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextWritingMode()
com.mapbox.geojson.utils.PolylineUtils: java.util.List decode(java.lang.String,int)
com.mapbox.mapboxsdk.style.layers.CannotAddLayerException: CannotAddLayerException(java.lang.String)
com.mapbox.geojson.MultiPoint: java.lang.String type()
androidx.media.AudioAttributesCompatParcelizer
com.google.android.gms.internal.measurement.zzck$zzc: com.google.android.gms.internal.measurement.zzjs zzg
com.google.android.datatransport.cct.CctBackendFactory
com.google.firebase.firestore.FirestoreRegistrar: FirestoreRegistrar()
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface: java.lang.reflect.InvocationHandler getServiceWorkerWebSettings()
com.google.firestore.v1.Target: int READ_TIME_FIELD_NUMBER
com.google.firebase.auth.api.fallback.service.FirebaseAuthFallbackService: FirebaseAuthFallbackService()
com.google.firebase.iid.Registrar: com.google.firebase.iid.FirebaseInstanceId lambda$getComponents$0$Registrar(com.google.firebase.components.ComponentContainer)
com.mapbox.mapboxsdk.log.Logger: Logger()
com.google.android.gms.internal.measurement.zzln: com.google.android.gms.internal.measurement.zzln[] values()
com.mapbox.mapboxsdk.style.types.Formatted: java.lang.String toString()
androidx.lifecycle.LiveData$LifecycleBoundObserver
com.mapbox.mapboxsdk.style.layers.BackgroundLayer: void initialize(java.lang.String)
com.google.gson.JsonElement: byte getAsByte()
com.mapbox.geojson.MultiPoint: java.lang.String type
com.mapbox.geojson.Polygon$GsonTypeAdapter
io.flutter.view.FlutterView: void setInitialRoute(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzif: int zzf
com.google.firestore.v1.TransactionOptions
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat[] values()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextLineHeight()
com.google.android.gms.internal.firebase-auth-api.zzhj: int zze
com.mapbox.geojson.gson.GeometryGeoJson
com.mapbox.geojson.GeometryCollection$GsonTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setInstanceIdProvider(com.google.android.gms.internal.measurement.zzac)
com.mapbox.mapboxsdk.maps.NativeMapView: long[] nativeAddPolygons(com.mapbox.mapboxsdk.annotations.Polygon[])
com.google.firestore.v1.ArrayValue
io.grpc.okhttp.OkHttpFrameLogger$SettingParams: io.grpc.okhttp.OkHttpFrameLogger$SettingParams[] values()
android.support.v4.media.AudioAttributesImplBaseParcelizer
io.flutter.view.AccessibilityViewEmbedder: java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord)
com.google.firebase.messaging.FirebaseMessagingRegistrar
com.mapbox.android.telemetry.LocationEvent: double latitude
com.google.firebase.installations.FirebaseInstallationsRegistrar: com.google.firebase.installations.FirebaseInstallationsApi lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
com.mapbox.geojson.Feature$GsonTypeAdapter: com.google.gson.TypeAdapter geometryTypeAdapter
com.mapbox.mapboxsdk.style.layers.FillLayer: void nativeSetFillColorTransition(long,long)
com.google.android.gms.internal.firebase-auth-api.zzip
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState
io.flutter.embedding.engine.FlutterOverlaySurface: int getId()
com.google.android.gms.internal.measurement.zzc: android.os.IBinder asBinder()
com.mapbox.android.telemetry.CrashEvent: void writeToParcel(android.os.Parcel,int)
com.google.firestore.v1.StructuredQuery: int WHERE_FIELD_NUMBER
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
com.mapbox.mapboxsdk.module.telemetry.PhoneState: void setCreated(java.lang.String)
com.mapbox.mapboxsdk.style.layers.LineLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetLineWidthTransition()
io.flutter.embedding.engine.FlutterJNI: void nativeDeferredComponentInstallFailure(int,java.lang.String,boolean)
com.mapbox.geojson.Feature$GsonTypeAdapter: com.google.gson.Gson gson
com.google.android.gms.internal.measurement.zzca$zzb: com.google.android.gms.internal.measurement.zzig zzh
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
com.google.android.gms.internal.firebase-auth-api.zzme: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.geometry.LatLngQuad: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzcd$zzh: int zzc
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
io.flutter.plugin.platform.SingleViewPresentation
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
com.mapbox.mapboxsdk.style.sources.RasterSource: void initialize(java.lang.String,java.lang.Object,int)
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
android.support.v4.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
com.google.android.gms.internal.measurement.zzbv$zze
com.mapbox.android.telemetry.AppUserTurnstile: java.lang.String getSkuId()
com.mapbox.mapboxsdk.style.layers.LineLayer: void nativeSetLinePatternTransition(long,long)
com.google.android.gms.measurement.AppMeasurementService
com.mapbox.geojson.BaseGeometryTypeAdapter
com.google.android.gms.internal.measurement.zzbv$zzb: int zzd
com.google.firestore.v1.WriteRequest: int STREAM_TOKEN_FIELD_NUMBER
com.mapbox.mapboxsdk.style.layers.HillshadeLayer: HillshadeLayer(long)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeAddLayerAbove(long,java.lang.String)
io.flutter.plugin.platform.SingleViewPresentation: void onCreate(android.os.Bundle)
androidx.appcompat.widget.ButtonBarLayout
com.google.firestore.v1.Document: com.google.protobuf.Timestamp createTime_
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTimedOutEventName
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.mapbox.mapboxsdk.style.light.Position: float polarAngle
com.google.android.gms.maps.model.Cap: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.DocumentDelete
com.mapbox.mapboxsdk.style.layers.Layer: Layer(long)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] values()
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet,int)
com.mapbox.geojson.Point: Point(java.lang.String,com.mapbox.geojson.BoundingBox,java.util.List)
com.google.protobuf.Any: com.google.protobuf.ByteString value_
com.google.android.gms.internal.measurement.zzcd$zzk: com.google.android.gms.internal.measurement.zzcd$zzk zzj
com.google.android.exoplayer2.Format: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzxk: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.Toolbar: void setLogo(int)
com.google.firestore.v1.StructuredQuery$Filter$FilterTypeCase: com.google.firestore.v1.StructuredQuery$Filter$FilterTypeCase[] values()
com.mapbox.mapboxsdk.style.sources.Source: java.lang.Integer getMaxOverscaleFactorForParentTiles()
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterTexture(long,long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
com.google.firestore.v1.DocumentMask: com.google.protobuf.Internal$ProtobufList fieldPaths_
com.mapbox.android.telemetry.CrashEvent: java.lang.String sdkIdentifier
com.google.gson.typeadapters.RuntimeTypeAdapterFactory: boolean maintainType
com.mapbox.mapboxsdk.offline.OfflineGeometryRegionDefinition: OfflineGeometryRegionDefinition(java.lang.String,com.mapbox.geojson.Geometry,double,double,float,boolean)
com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: TelemetryImpl()
com.mapbox.android.telemetry.VisionObjectDetectionEvent: int describeContents()
com.google.firestore.v1.BatchGetDocumentsRequest: com.google.firestore.v1.DocumentMask mask_
com.google.firebase.firestore.proto.MaybeDocument: int NO_DOCUMENT_FIELD_NUMBER
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values()
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetVisibleCoordinateBounds(com.mapbox.mapboxsdk.geometry.LatLng[],android.graphics.RectF,double,long)
com.mapbox.mapboxsdk.style.sources.Source: void setDetached()
com.mapbox.mapboxsdk.style.layers.FillLayer
com.google.gson.JsonArray: JsonArray()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$400(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.fragment.app.Fragment$2
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
com.google.firestore.v1.Value: int NULL_VALUE_FIELD_NUMBER
com.mapbox.mapboxsdk.Mapbox: android.content.Context context
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap nativeGetBitmap(long)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeEaseTo(double,double,double,long,double,double,double[],boolean)
com.mapbox.mapboxsdk.module.telemetry.PhoneState: float resolution
com.google.firestore.v1.ListenResponse: com.google.protobuf.Parser PARSER
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetSymbolZOrder()
androidx.core.app.CoreComponentFactory
com.mapbox.mapboxsdk.module.telemetry.MapBaseEvent: java.lang.String event
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] values()
com.google.firestore.v1.MapValue
com.google.android.gms.signin.internal.zai: android.os.Parcelable$Creator CREATOR
com.google.firebase.firestore.core.Filter$Operator: com.google.firebase.firestore.core.Filter$Operator[] values()
com.google.android.gms.maps.model.PatternItem: android.os.Parcelable$Creator CREATOR
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getMaxUserProperties(java.lang.String,com.google.android.gms.internal.measurement.zzw)
com.mapbox.geojson.Feature: com.mapbox.geojson.Feature fromGeometry(com.mapbox.geojson.Geometry,com.google.gson.JsonObject,com.mapbox.geojson.BoundingBox)
com.mapbox.mapboxsdk.style.types.FormattedSection: FormattedSection(java.lang.String,java.lang.Number,java.lang.String[])
com.google.firestore.v1.DocumentTransform$FieldTransform: int MAXIMUM_FIELD_NUMBER
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
com.google.firestore.v1.StructuredQuery$FieldFilter$Operator: com.google.firestore.v1.StructuredQuery$FieldFilter$Operator valueOf(java.lang.String)
com.mapbox.mapboxsdk.module.telemetry.PhoneState: int NO_NETWORK
com.mapbox.geojson.Point: java.lang.String toJson()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
com.mapbox.mapboxsdk.offline.OfflineRegion: void setOfflineRegionDownloadState(int)
com.mapbox.geojson.GeometryAdapterFactory: com.google.gson.TypeAdapterFactory create()
io.flutter.embedding.engine.FlutterJNI: void onDisplayOverlaySurface(int,int,int,int,int)
com.google.firestore.v1.TargetChange: com.google.firestore.v1.TargetChange DEFAULT_INSTANCE
com.google.firebase.firestore.remote.WatchChange$WatchTargetChangeType: com.google.firebase.firestore.remote.WatchChange$WatchTargetChangeType valueOf(java.lang.String)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean needsSave
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: int batteryLevel
com.mapbox.mapboxsdk.module.telemetry.PhoneState$Orientation
io.grpc.InternalChannelz$ChannelTrace$Event$Severity: io.grpc.InternalChannelz$ChannelTrace$Event$Severity[] values()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextTranslate()
org.chromium.support_lib_boundary.ServiceWorkerClientBoundaryInterface
com.mapbox.geojson.FeatureCollection$GsonTypeAdapter: com.google.gson.Gson gson
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: void nativeAddSource(com.mapbox.mapboxsdk.style.sources.Source,long)
com.google.firebase.datatransport.TransportRegistrar: java.util.List getComponents()
com.mapbox.mapboxsdk.style.layers.LineLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetLineOpacityTransition()
com.mapbox.mapboxsdk.module.telemetry.MapBaseEvent: java.lang.String created
com.mapbox.geojson.GeoJson: java.lang.String toJson()
com.google.gson.JsonElement: com.google.gson.JsonPrimitive getAsJsonPrimitive()
com.google.firestore.v1.Target$DocumentsTarget: com.google.protobuf.Parser PARSER
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: int hashCode()
android.support.v4.media.MediaMetadataCompat: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.style.sources.CustomGeometrySource: void nativeInvalidateBounds(com.mapbox.mapboxsdk.geometry.LatLngBounds)
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: java.lang.String MODULE_ID
com.mapbox.mapboxsdk.style.sources.RasterDemSource: java.lang.String nativeGetUrl()
com.google.android.gms.internal.measurement.zzbv$zze: com.google.android.gms.internal.measurement.zzjs zzk
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
com.google.android.gms.internal.firebase-auth-api.zzacj: com.google.android.gms.internal.firebase-auth-api.zzacj[] values()
com.google.firestore.v1.ListenRequest: int ADD_TARGET_FIELD_NUMBER
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType valueOf(java.lang.String)
androidx.media.AudioAttributesCompat
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper
com.google.firestore.v1.BatchGetDocumentsResponse: int FOUND_FIELD_NUMBER
com.google.gson.typeadapters.RuntimeTypeAdapterFactory: com.google.gson.typeadapters.RuntimeTypeAdapterFactory of(java.lang.Class)
com.google.gson.JsonObject: com.google.gson.JsonObject deepCopy()
android.support.v4.media.session.PlaybackStateCompat$CustomAction: android.os.Parcelable$Creator CREATOR
com.google.gson.reflect.TypeToken: int hashCode()
com.google.gson.JsonArray: int size()
com.mapbox.mapboxsdk.style.layers.BackgroundLayer: void nativeSetBackgroundOpacityTransition(long,long)
com.google.android.gms.internal.firebase-auth-api.zzja: com.google.android.gms.internal.firebase-auth-api.zzja zzf
androidx.appcompat.widget.ViewStubCompat
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine getAttachedFlutterEngine()
com.google.firebase.firestore.proto.Target: int DOCUMENTS_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzbv$zzf: int zzc
io.flutter.embedding.engine.FlutterJNI: void onPreEngineRestart()
com.mapbox.mapboxsdk.style.sources.Source: java.lang.Integer nativeGetMaxOverscaleFactorForParentTiles()
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
com.google.firebase.iid.Registrar: Registrar()
com.mapbox.android.telemetry.AppUserTurnstile: AppUserTurnstile(android.os.Parcel,com.mapbox.android.telemetry.AppUserTurnstile$1)
com.google.android.gms.internal.measurement.zzbv$zzb: java.lang.String zze
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature valueOf(java.lang.String)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides valueOf(java.lang.String)
io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion[] values()
com.mapbox.android.telemetry.LocationEvent: LocationEvent(android.os.Parcel,com.mapbox.android.telemetry.LocationEvent$1)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
com.mapbox.mapboxsdk.maps.NativeMapView: long nativeGetTransitionDuration()
com.google.gson.JsonArray: int getAsInt()
com.google.android.gms.internal.firebase-auth-api.zzno: android.os.Parcelable$Creator CREATOR
com.mapbox.geojson.LineString: com.mapbox.geojson.BoundingBox bbox()
com.mapbox.android.telemetry.LocationEvent: java.lang.Float getAccuracy()
com.mapbox.mapboxsdk.offline.OfflineGeometryRegionDefinition
com.mapbox.mapboxsdk.geometry.LatLngQuad: com.mapbox.mapboxsdk.geometry.LatLng topRight
com.mapbox.android.telemetry.AppUserTurnstile: boolean enabledTelemetry
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
com.google.android.gms.internal.measurement.zzcd$zzk: long zzd
com.google.android.exoplayer2.source.TrackGroup: android.os.Parcelable$Creator CREATOR
com.google.gson.JsonObject: boolean has(java.lang.String)
com.mapbox.mapboxsdk.style.layers.HeatmapLayer: java.lang.Object nativeGetHeatmapRadius()
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent$PerformanceAttribute: java.lang.String name
com.google.android.gms.measurement.AppMeasurement: java.lang.String getGmpAppId()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
com.mapbox.geojson.FeatureCollection: com.mapbox.geojson.FeatureCollection fromFeatures(com.mapbox.geojson.Feature[])
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
com.mapbox.geojson.LineString$GsonTypeAdapter: void write(com.google.gson.stream.JsonWriter,com.mapbox.geojson.LineString)
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: boolean mActive
com.google.android.gms.internal.firebase-auth-api.zzgy
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodesTranslateBounds(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect,android.view.accessibility.AccessibilityNodeInfo)
com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionObserver: void onStatusChanged(com.mapbox.mapboxsdk.offline.OfflineRegionStatus)
com.google.android.gms.internal.measurement.zzcd$zzh: com.google.android.gms.internal.measurement.zzig zze
com.mapbox.geojson.LineString
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchEmptyPlatformMessage(long,java.lang.String,int)
com.mapbox.mapboxsdk.offline.OfflineManager$FileSourceCallback: void onSuccess()
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$602(io.flutter.embedding.android.FlutterSplashView$SavedState,java.lang.String)
com.google.firebase.firestore.proto.Target: int targetTypeCase_
com.google.protobuf.Writer$FieldOrder: com.google.protobuf.Writer$FieldOrder valueOf(java.lang.String)
com.mapbox.android.telemetry.LocationEvent: java.lang.String getOperatingSystem()
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
com.mapbox.mapboxsdk.style.sources.GeoJsonSource: com.mapbox.geojson.Feature[] nativeGetClusterLeaves(com.mapbox.geojson.Feature,long,long)
io.flutter.view.AccessibilityViewEmbedder: java.lang.String TAG
com.mapbox.geojson.MultiPolygon: com.mapbox.geojson.MultiPolygon fromLngLats(java.util.List,com.mapbox.geojson.BoundingBox)
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
androidx.versionedparcelable.CustomVersionedParcelable
com.google.android.gms.internal.firebase-auth-api.zzhw: java.lang.String zze
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconTextFitPadding()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetIconHaloColorTransition()
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType valueOf(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityStarted(com.google.android.gms.dynamic.IObjectWrapper,long)
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: MapRenderer(android.content.Context,java.lang.String)
com.google.android.gms.location.zzj: android.os.Parcelable$Creator CREATOR
com.google.android.gms.maps.model.LatLng: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.drm.DrmInitData: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzhy: com.google.android.gms.internal.measurement.zzks zzb
com.mapbox.geojson.PointAsCoordinatesTypeAdapter: PointAsCoordinatesTypeAdapter()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextPitchAlignment()
com.mapbox.mapboxsdk.style.layers.HillshadeLayer: java.lang.Object nativeGetHillshadeExaggeration()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCurrentScreenName(com.google.android.gms.internal.measurement.zzw)
com.mapbox.mapboxsdk.style.layers.FillLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetFillTranslateTransition()
com.google.firestore.v1.WriteRequest: java.lang.String database_
com.mapbox.android.telemetry.VisionEvent: java.lang.String name
com.mapbox.mapboxsdk.style.sources.Source: void setMinimumTileUpdateInterval(java.lang.Long)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface
com.google.firestore.v1.DocumentDelete: com.google.protobuf.Internal$IntList removedTargetIds_
com.mapbox.mapboxsdk.maps.renderer.MapRendererScheduler: void queueEvent(java.lang.Runnable)
com.mapbox.mapboxsdk.offline.OfflineManager: void nativeInvalidateAmbientCache(com.mapbox.mapboxsdk.offline.OfflineManager$FileSourceCallback)
com.mapbox.geojson.GeometryCollection: com.mapbox.geojson.GeometryCollection fromGeometry(com.mapbox.geojson.Geometry,com.mapbox.geojson.BoundingBox)
com.mapbox.android.telemetry.AppUserTurnstile: java.lang.String model
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.String getData()
com.mapbox.geojson.MultiLineString: java.lang.String toString()
com.google.firestore.v1.CommitRequest: int TRANSACTION_FIELD_NUMBER
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
com.google.firebase.database.collection.LLRBNode$Color: com.google.firebase.database.collection.LLRBNode$Color[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup
com.mapbox.mapboxsdk.style.layers.SymbolLayer: void nativeSetTextTranslateTransition(long,long)
com.google.firestore.v1.ExistenceFilter: int COUNT_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzca$zza: int zzg
com.google.firestore.v1.DocumentMask: com.google.firestore.v1.DocumentMask DEFAULT_INSTANCE
io.flutter.view.FlutterCallbackInformation: FlutterCallbackInformation(java.lang.String,java.lang.String,java.lang.String)
com.mapbox.mapboxsdk.style.layers.FillLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetFillPatternTransition()
com.google.android.gms.common.api.GoogleApiActivity
androidx.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
com.google.firestore.v1.WriteResponse: int STREAM_TOKEN_FIELD_NUMBER
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: java.lang.Object nativeGetAccuracyRadius()
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
io.grpc.okhttp.internal.framed.ErrorCode: io.grpc.okhttp.internal.framed.ErrorCode valueOf(java.lang.String)
com.google.firebase.firestore.model.Document$DocumentState: com.google.firebase.firestore.model.Document$DocumentState valueOf(java.lang.String)
com.mapbox.mapboxsdk.maps.NativeMapView: double nativeGetMinPitch()
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabled(boolean)
com.mapbox.mapboxsdk.Mapbox: void validateMapbox()
io.flutter.embedding.engine.FlutterJNI: void detachFromNativeAndReleaseResources()
com.mapbox.mapboxsdk.maps.NativeMapView: void onCameraIsChanging()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix finalMatrix
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadStartEvent: java.lang.Double getMinZoom()
com.mapbox.mapboxsdk.maps.NativeMapView: double nativeGetMaxZoom()
com.google.android.gms.internal.firebase-auth-api.zzhd: com.google.android.gms.internal.firebase-auth-api.zzym zzf
com.google.firebase.auth.internal.GenericIdpActivity: GenericIdpActivity()
com.google.firebase.firestore.proto.Target: com.google.firebase.firestore.proto.Target DEFAULT_INSTANCE
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
com.mapbox.mapboxsdk.offline.OfflineTilePyramidRegionDefinition: double minZoom
com.mapbox.geojson.Point: com.mapbox.geojson.Point fromJson(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzhg: com.google.android.gms.internal.firebase-auth-api.zzhj zzb
com.mapbox.mapboxsdk.style.layers.HillshadeLayer: java.lang.Object nativeGetHillshadeHighlightColor()
com.mapbox.mapboxsdk.maps.MapView: void setMapStrictModeEnabled(boolean)
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzaj
com.google.firestore.v1.DocumentDelete: int READ_TIME_FIELD_NUMBER
android.support.v4.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
com.mapbox.android.telemetry.VisionObjectDetectionEvent: void setDistanceFromCamera(double)
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
io.flutter.view.AccessibilityViewEmbedder: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
com.mapbox.mapboxsdk.maps.widgets.CompassView: void setEnabled(boolean)
com.google.android.gms.internal.firebase-auth-api.zzfh
io.flutter.embedding.engine.FlutterJNI: void setRefreshRateFPS(float)
com.google.android.gms.internal.measurement.zzbv$zzf: com.google.android.gms.internal.measurement.zzjs zzi
com.mapbox.mapboxsdk.style.layers.SymbolLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetIconHaloWidthTransition()
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
com.mapbox.mapboxsdk.maps.MapView: float getPixelRatio()
org.chromium.support_lib_boundary.VisualStateCallbackBoundaryInterface
com.google.firebase.firestore.remote.Stream$State: com.google.firebase.firestore.remote.Stream$State valueOf(java.lang.String)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
com.google.firestore.v1.DocumentTransform$FieldTransform
com.mapbox.mapboxsdk.style.layers.Layer: float nativeGetMinZoom()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void registerOnMeasurementEventListener(com.google.android.gms.internal.measurement.zzab)
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
com.google.firestore.v1.DocumentChange: com.google.protobuf.Internal$IntList removedTargetIds_
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
com.mapbox.geojson.MultiLineString: com.google.gson.TypeAdapter typeAdapter(com.google.gson.Gson)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String)
com.mapbox.android.accounts.v1.MapboxAccounts: java.lang.String SKU_ID_NAVIGATION_MAUS
com.mapbox.mapboxsdk.module.telemetry.PhoneState: void setCarrier(java.lang.String)
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent: java.lang.String PERFORMANCE_TRACE
io.flutter.embedding.engine.FlutterOverlaySurface
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconHaloBlur()
com.mapbox.geojson.FeatureCollection: com.mapbox.geojson.FeatureCollection fromJson(java.lang.String)
com.google.firebase.firestore.proto.UnknownDocument: int VERSION_FIELD_NUMBER
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
com.mapbox.geojson.ListOfPointCoordinatesTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.util.List)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetMaxZoom(double)
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
com.google.firestore.v1.StructuredQuery$FieldFilter: com.google.protobuf.Parser PARSER
com.google.protobuf.GeneratedMessageLite$MethodToInvoke: com.google.protobuf.GeneratedMessageLite$MethodToInvoke[] values()
com.google.firestore.v1.StructuredQuery$CompositeFilter: int FILTERS_FIELD_NUMBER
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface
com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat: com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat[] values()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceChanged(int,int)
com.mapbox.mapboxsdk.style.layers.CircleLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetCircleColorTransition()
com.baseflow.geolocator.permission.LocationPermission: com.baseflow.geolocator.permission.LocationPermission valueOf(java.lang.String)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setAllowFileAccess(boolean)
com.mapbox.mapboxsdk.maps.Image: float pixelRatio
com.mapbox.mapboxsdk.style.layers.Layer: void finalize()
com.mapbox.mapboxsdk.style.layers.CircleLayer: void nativeSetCircleColorTransition(long,long)
androidx.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.gms.internal.firebase-auth-api.zzej: int zzb
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: void nativeSetFillExtrusionPatternTransition(long,long)
com.google.firestore.v1.StructuredQuery: int OFFSET_FIELD_NUMBER
io.flutter.embedding.engine.FlutterJNI: void unregisterTexture(long)
io.flutter.view.AccessibilityViewEmbedder: java.util.Map embeddedViewToDisplayBounds
com.mapbox.mapboxsdk.maps.NativeMapView: boolean nativeRemoveSource(com.mapbox.mapboxsdk.style.sources.Source,long)
com.google.android.gms.internal.firebase-auth-api.zzge
com.google.android.gms.internal.measurement.zzhy$zzd
com.google.android.gms.internal.measurement.zzca$zzc: com.google.android.gms.internal.measurement.zzjs zzg
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent: int hashCode()
com.mapbox.mapboxsdk.maps.NativeMapView: boolean nativeIsFullyLoaded()
com.google.firestore.v1.Target: java.lang.Object resumeType_
com.google.gson.JsonElement: com.google.gson.JsonElement deepCopy()
io.flutter.embedding.engine.FlutterOverlaySurface: int id
com.google.android.gms.internal.firebase-auth-api.zznm: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.StructuredQuery$FieldFilter
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
com.google.firebase.firestore.core.OnlineState: com.google.firebase.firestore.core.OnlineState[] values()
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: java.lang.String cellularNetworkType
com.mapbox.mapboxsdk.geometry.LatLng: LatLng(double,double)
com.mapbox.geojson.Polygon: Polygon(java.lang.String,com.mapbox.geojson.BoundingBox,java.util.List)
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent$1
com.google.android.gms.internal.measurement.zzca$zzb: java.lang.String zzj
com.mapbox.android.telemetry.VisionObjectDetectionEvent: java.lang.String getEvent()
com.google.firebase.firestore.core.OnlineState: com.google.firebase.firestore.core.OnlineState valueOf(java.lang.String)
com.google.firestore.v1.DocumentChange: int TARGET_IDS_FIELD_NUMBER
com.mapbox.mapboxsdk.style.layers.SymbolLayer: void nativeSetIconHaloWidthTransition(long,long)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
com.mapbox.geojson.MultiPolygon: java.lang.String toString()
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag valueOf(java.lang.String)
com.google.gson.JsonArray: byte getAsByte()
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent: java.util.List attributes
com.google.android.gms.internal.firebase-auth-api.zzfn: int zze
com.google.firestore.v1.StructuredQuery: int END_AT_FIELD_NUMBER
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreRegistrar: java.util.List getComponents()
com.mapbox.geojson.gson.BoundingBoxTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.google.gson.JsonObject: JsonObject()
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: java.lang.String orientation
com.google.android.gms.internal.firebase-auth-api.zzed
com.mapbox.mapboxsdk.Mapbox: java.lang.Boolean isConnected()
com.google.android.gms.internal.firebase-auth-api.zzht: int zzf
com.google.android.gms.internal.measurement.zzcd$zza
com.google.firestore.v1.DocumentTransform: java.lang.String document_
com.google.type.LatLng: double longitude_
com.mapbox.android.accounts.v1.MapboxAccounts: java.lang.String obtainEndUserId()
io.flutter.embedding.engine.FlutterJNI: float refreshRateFPS
com.google.firestore.v1.Value: int ARRAY_VALUE_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zzne: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzab
com.mapbox.mapboxsdk.geometry.ProjectedMeters: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.metadata.flac.PictureFrame: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.maps.NativeMapView: java.lang.String nativeGetStyleUrl()
com.google.firebase.firestore.proto.MaybeDocument
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeResizeView(int,int)
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
com.mapbox.android.telemetry.AppUserTurnstile: void writeToParcel(android.os.Parcel,int)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsRegionalIndicator(int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$402(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.WindowInsets)
com.google.firestore.v1.DocumentRemove: com.google.protobuf.Internal$IntList removedTargetIds_
com.google.firestore.v1.StructuredQuery$Filter: int COMPOSITE_FILTER_FIELD_NUMBER
com.google.android.exoplayer2.metadata.scte35.TimeSignalCommand: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzgh: com.google.android.gms.internal.firebase-auth-api.zzgh zze
com.google.android.gms.internal.firebase-auth-api.zzgh: com.google.android.gms.internal.firebase-auth-api.zzgk zzb
com.google.firebase.auth.internal.zzbb: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.offline.OfflineRegionStatus: OfflineRegionStatus(int,long,long,long,long,long,boolean)
com.mapbox.geojson.constants.GeoJsonConstants: double MIN_LATITUDE
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
com.mapbox.geojson.ListOfListOfPointCoordinatesTypeAdapter
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebMessagePort(java.lang.Object)
com.mapbox.mapboxsdk.style.layers.HillshadeLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetHillshadeHighlightColorTransition()
com.mapbox.geojson.BaseCoordinatesTypeAdapter: BaseCoordinatesTypeAdapter()
com.google.firebase.firestore.DocumentSnapshot$ServerTimestampBehavior: com.google.firebase.firestore.DocumentSnapshot$ServerTimestampBehavior valueOf(java.lang.String)
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus valueOf(java.lang.String)
com.mapbox.geojson.FeatureCollection: com.mapbox.geojson.FeatureCollection fromFeatures(java.util.List)
com.google.android.gms.internal.measurement.zzca$zzc: int zzc
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
com.google.firestore.v1.StructuredQuery$UnaryFilter: int op_
com.mapbox.geojson.Point: com.mapbox.geojson.Point fromLngLat(double[])
com.mapbox.mapboxsdk.style.layers.HeatmapLayer: void finalize()
com.mapbox.mapboxsdk.style.sources.GeoJsonSource: int nativeGetClusterExpansionZoom(com.mapbox.geojson.Feature)
com.google.protobuf.Int32Value: com.google.protobuf.Parser PARSER
com.google.android.gms.signin.internal.zab: android.os.Parcelable$Creator CREATOR
com.mapbox.geojson.GeometryCollection: java.util.List geometries()
com.google.gson.JsonPrimitive: short getAsShort()
com.mapbox.geojson.BoundingBox: java.lang.String toJson()
com.google.android.gms.internal.measurement.zzil: com.google.android.gms.internal.measurement.zzil[] values()
com.google.android.gms.internal.measurement.zzbv$zzd$zza: com.google.android.gms.internal.measurement.zzbv$zzd$zza[] values()
com.google.firebase.firestore.proto.UnknownDocument
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetPitch(double,long)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetIconOpacityTransition()
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzzl: com.google.android.gms.internal.firebase-auth-api.zzzg zzb
com.google.firestore.v1.Cursor: boolean before_
com.mapbox.mapboxsdk.text.LocalGlyphRasterizer: android.graphics.Bitmap drawGlyphBitmap(java.lang.String,boolean,char)
com.mapbox.mapboxsdk.style.layers.HillshadeLayer: void initialize(java.lang.String,java.lang.String)
com.google.gson.JsonArray: JsonArray(int)
com.mapbox.geojson.BaseCoordinatesTypeAdapter: com.mapbox.geojson.Point readPoint(com.google.gson.stream.JsonReader)
com.google.android.gms.internal.firebase-auth-api.zzfb
io.grpc.internal.MessageDeframer$State: io.grpc.internal.MessageDeframer$State valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
com.google.android.gms.internal.firebase-auth-api.zzfw: com.google.android.gms.internal.firebase-auth-api.zzym zze
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void setSafeBrowsingWhitelist(java.util.List,android.webkit.ValueCallback)
com.google.android.gms.internal.firebase-auth-api.zzxu: int zza
com.mapbox.mapboxsdk.snapshotter.MapSnapshot: long nativePtr
com.mapbox.android.telemetry.Attachment
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status[] values()
com.google.android.gms.internal.firebase-auth-api.zzij: int zzb
androidx.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
com.mapbox.android.telemetry.VisionEvent: com.mapbox.android.telemetry.Event$Type obtainType()
com.google.firebase.components.ComponentDiscoveryService: ComponentDiscoveryService()
com.google.android.gms.internal.measurement.zzbv$zzf: java.lang.String zze
com.mapbox.mapboxsdk.style.types.FormattedSection: FormattedSection(java.lang.String,java.lang.String[])
com.google.android.gms.common.annotation.KeepName
com.google.firebase.firestore.FirestoreRegistrar: com.google.firebase.firestore.FirestoreMultiDbComponent lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.protobuf.Int32Value: int value_
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] values()
com.google.firebase.firestore.proto.Target$TargetTypeCase: com.google.firebase.firestore.proto.Target$TargetTypeCase[] values()
com.mapbox.mapboxsdk.style.layers.HillshadeLayer: void finalize()
com.google.firebase.auth.internal.zzp: android.os.Parcelable$Creator CREATOR
com.mapbox.geojson.MultiPolygon$GsonTypeAdapter
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: int getBatteryLevel()
com.google.android.gms.internal.firebase-auth-api.zzhw: boolean zzg
com.google.firebase.firestore.Source: com.google.firebase.firestore.Source valueOf(java.lang.String)
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: float resolution
com.mapbox.android.telemetry.CrashEvent: java.lang.String device
com.mapbox.geojson.MultiLineString
io.flutter.plugins.firebaseanalytics.FlutterFirebaseAppRegistrar
com.google.android.gms.internal.measurement.zzcd$zzg: com.google.android.gms.internal.measurement.zzcd$zzh zzaq
com.mapbox.android.telemetry.LocationEvent: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.StructuredQuery$UnaryFilter: com.google.protobuf.Parser PARSER
com.google.android.gms.internal.location.zzm: android.os.Parcelable$Creator CREATOR
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
com.google.android.gms.measurement.AppMeasurementReceiver: AppMeasurementReceiver()
com.google.android.exoplayer2.decoder.Buffer: boolean getFlag(int)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetMaxPitch(double)
com.mapbox.mapboxsdk.style.sources.Source: boolean detached
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String)
com.google.firebase.messaging.FirebaseMessaging
com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource$Factory: SsMediaSource$Factory(com.google.android.exoplayer2.upstream.DataSource$Factory)
com.google.firestore.v1.TargetChange: int READ_TIME_FIELD_NUMBER
com.mapbox.android.telemetry.LocationEvent: void setAccuracy(java.lang.Float)
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetFillExtrusionOpacityTransition()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRRect(int,int,int,int,float[])
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadStartEvent: boolean equals(java.lang.Object)
com.mapbox.mapboxsdk.http.NativeHttpRequest: void access$200(com.mapbox.mapboxsdk.http.NativeHttpRequest,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,byte[])
com.mapbox.mapboxsdk.maps.NativeMapView: void onWillStartRenderingMap()
com.google.firestore.v1.Value: int REFERENCE_VALUE_FIELD_NUMBER
com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase: com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate
com.google.android.gms.internal.firebase-auth-api.zzem: int zzb
com.google.android.gms.internal.measurement.zzcd$zza: int zzc
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: java.lang.String shapeForOfflineRegion
io.grpc.okhttp.OkHttpFrameLogger$Direction: io.grpc.okhttp.OkHttpFrameLogger$Direction[] values()
com.mapbox.android.telemetry.LocationEvent: java.lang.String getEvent()
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void setWebMessageCallback(java.lang.reflect.InvocationHandler)
io.grpc.okhttp.internal.Platform$TlsExtensionType: io.grpc.okhttp.internal.Platform$TlsExtensionType[] values()
com.mapbox.android.telemetry.VisionObjectDetectionEvent: VisionObjectDetectionEvent(android.os.Parcel,com.mapbox.android.telemetry.VisionObjectDetectionEvent$1)
com.mapbox.geojson.MultiPoint: com.mapbox.geojson.MultiPoint fromLngLats(java.util.List)
com.mapbox.mapboxsdk.storage.FileSource: boolean isActivated()
com.google.android.gms.internal.firebase-auth-api.zzfn
com.google.firestore.v1.StructuredQuery$UnaryFilter: com.google.firestore.v1.StructuredQuery$UnaryFilter DEFAULT_INSTANCE
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
io.grpc.okhttp.internal.framed.HeadersMode: io.grpc.okhttp.internal.framed.HeadersMode valueOf(java.lang.String)
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
com.mapbox.geojson.MultiLineString: java.lang.Object coordinates()
com.mapbox.mapboxsdk.log.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)
com.mapbox.mapboxsdk.maps.NativeMapView: com.mapbox.mapboxsdk.geometry.LatLng nativeGetLatLng()
com.google.android.gms.common.api.internal.LifecycleCallback
com.google.android.gms.internal.measurement.zzbv$zzd: boolean zze
com.google.firestore.v1.StructuredQuery: com.google.protobuf.Internal$ProtobufList from_
com.google.firebase.firestore.proto.Target: int SNAPSHOT_VERSION_FIELD_NUMBER
com.mapbox.android.telemetry.LocationEvent: java.lang.Float accuracy
com.mapbox.geojson.LineString$GsonTypeAdapter: com.mapbox.geojson.CoordinateContainer createCoordinateContainer(java.lang.String,com.mapbox.geojson.BoundingBox,java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
com.mapbox.mapboxsdk.style.sources.ImageSource: void nativeSetImage(android.graphics.Bitmap)
com.mapbox.mapboxsdk.offline.OfflineRegionError: OfflineRegionError(java.lang.String,java.lang.String)
com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: void setUserTelemetryRequestState(boolean)
com.google.android.gms.internal.measurement.zzcd$zzc: long zzg
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status valueOf(java.lang.String)
com.google.gson.typeadapters.RuntimeTypeAdapterFactory: java.lang.Class baseType
com.mapbox.geojson.constants.GeoJsonConstants
com.google.android.gms.internal.measurement.zzcd$zzd: long zze
com.mapbox.mapboxsdk.style.types.FormattedSection: boolean equals(java.lang.Object)
com.mapbox.mapboxsdk.utils.StringUtils: StringUtils()
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
com.google.android.gms.safetynet.zza: android.os.Parcelable$Creator CREATOR
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface
com.google.firestore.v1.BatchGetDocumentsResponse$ResultCase: com.google.firestore.v1.BatchGetDocumentsResponse$ResultCase valueOf(java.lang.String)
com.mapbox.mapboxsdk.style.sources.UnknownSource
com.google.firebase.firestore.proto.UnknownDocument: com.google.firebase.firestore.proto.UnknownDocument DEFAULT_INSTANCE
com.mapbox.geojson.LineString: java.lang.String type
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
com.google.android.gms.internal.firebase-auth-api.zzge: com.google.android.gms.internal.firebase-auth-api.zzht zzb
com.mapbox.mapboxsdk.maps.NativeMapView: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetTransitionOptions()
com.google.firestore.v1.Write: com.google.firestore.v1.Write DEFAULT_INSTANCE
io.flutter.plugin.platform.SingleViewPresentation: android.content.Context outerContext
com.google.firestore.v1.DocumentChange: com.google.protobuf.Parser PARSER
com.mapbox.mapboxsdk.maps.NativeMapView: double nativeGetPitch()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthRegistrar
com.mapbox.mapboxsdk.module.telemetry.PhoneState: void setCellularNetworkType(java.lang.String)
com.google.firestore.v1.Cursor: int BEFORE_FIELD_NUMBER
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: boolean pluggedIn
com.mapbox.mapboxsdk.style.layers.SymbolLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetIconTranslateTransition()
com.mapbox.mapboxsdk.style.layers.LineLayer: void finalize()
com.google.gson.JsonArray: com.google.gson.JsonElement get(int)
com.mapbox.mapboxsdk.style.layers.FillLayer: FillLayer(long)
com.mapbox.mapboxsdk.style.layers.TransitionOptions: long duration
com.mapbox.mapboxsdk.offline.OfflineManager: void putResourceWithUrl(java.lang.String,byte[],long,long,java.lang.String,boolean)
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver
com.google.rpc.Status: int code_
com.google.android.gms.internal.measurement.zzcd$zzd
com.mapbox.mapboxsdk.log.Logger: int DEBUG
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void queueEvent(com.mapbox.mapboxsdk.maps.renderer.MapRendererRunnable)
com.google.android.gms.internal.firebase-auth-api.zzgb: com.google.android.gms.internal.firebase-auth-api.zzgb[] values()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebResourceError(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
com.google.android.gms.internal.firebase-auth-api.zzim: java.lang.String zzb
com.google.android.gms.internal.firebase-auth-api.zzfn: int zzb
com.google.gson.JsonObject: java.util.Set entrySet()
com.google.firebase.firestore.util.AsyncQueue$TimerId: com.google.firebase.firestore.util.AsyncQueue$TimerId valueOf(java.lang.String)
com.google.firestore.v1.Target: int RESUME_TOKEN_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zzgq: com.google.android.gms.internal.firebase-auth-api.zzgq zzh
com.mapbox.android.telemetry.CrashEvent: java.lang.String model
com.google.firestore.v1.CommitRequest: com.google.protobuf.Internal$ProtobufList writes_
io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel valueOf(java.lang.String)
com.google.gson.typeadapters.RuntimeTypeAdapterFactory: boolean access$000(com.google.gson.typeadapters.RuntimeTypeAdapterFactory)
com.google.android.gms.internal.firebase-auth-api.zzif: int zze
com.google.android.gms.internal.measurement.zzca$zzb: com.google.android.gms.internal.measurement.zzig zzg
com.mapbox.geojson.LineString: java.lang.String type()
com.mapbox.geojson.MultiPolygon: java.lang.String toJson()
com.mapbox.mapboxsdk.module.telemetry.PhoneState: void setBatteryLevel(int)
com.google.firestore.v1.ExistenceFilter: com.google.protobuf.Parser PARSER
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType valueOf(java.lang.String)
com.mapbox.geojson.Polygon: java.util.List inner()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifier(int)
com.google.android.gms.internal.location.zzbf: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.style.layers.HeatmapLayer: void nativeSetHeatmapRadiusTransition(long,long)
com.google.android.gms.internal.firebase-auth-api.zzes: int zzb
com.mapbox.mapboxsdk.style.sources.RasterDemSource: void initialize(java.lang.String,java.lang.Object,int)
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean)
com.mapbox.android.accounts.v1.AccountsConstants: boolean DEFAULT_TOKEN_MANAGE_SKU
com.google.firestore.v1.WriteRequest: com.google.protobuf.MapFieldLite labels_
com.mapbox.mapboxsdk.style.types.FormattedSection: java.lang.String textColor
com.mapbox.mapboxsdk.style.layers.SymbolLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetTextOpacityTransition()
com.google.firebase.FirebaseCommonRegistrar: FirebaseCommonRegistrar()
com.mapbox.mapboxsdk.log.Logger: int ERROR
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeAddImage(java.lang.String,android.graphics.Bitmap,float,boolean)
com.google.android.gms.internal.firebase-auth-api.zzhg: int zzf
com.mapbox.mapboxsdk.maps.renderer.glsurfaceview.MapboxGLSurfaceView: void setDetachedListener(com.mapbox.mapboxsdk.maps.renderer.glsurfaceview.MapboxGLSurfaceView$OnGLSurfaceViewDetachedListener)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: java.util.concurrent.ExecutorService cachedThreadPool
com.mapbox.android.telemetry.VisionObjectDetectionEvent: java.lang.Double object_size_width
com.google.android.gms.internal.firebase-auth-api.zzmw: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.StructuredQuery$Order: com.google.protobuf.Parser PARSER
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setCacheMode(int)
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus[] values()
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreRegistrar
io.flutter.embedding.engine.FlutterJNI: void destroyOverlaySurfaces()
com.google.android.gms.internal.measurement.zzck$zzc: com.google.android.gms.internal.measurement.zzck$zzc zzf
com.google.android.gms.internal.measurement.zzca$zza
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void proceed(boolean)
com.mapbox.geojson.MultiPolygon: java.util.List coordinates
com.google.firebase.firestore.proto.Target: int TARGET_ID_FIELD_NUMBER
androidx.core.app.ComponentActivity: ComponentActivity()
com.google.android.gms.internal.firebase-auth-api.zzjd: com.google.android.gms.internal.firebase-auth-api.zzjd zzb
com.google.android.gms.internal.measurement.zzbv$zze: com.google.android.gms.internal.measurement.zzbv$zze zzj
com.google.firestore.v1.CommitRequest: com.google.protobuf.ByteString transaction_
com.mapbox.android.telemetry.provider.MapboxTelemetryInitProvider
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetLatLngBounds(com.mapbox.mapboxsdk.geometry.LatLngBounds)
com.google.android.gms.internal.firebase-auth-api.zzgn: com.google.android.gms.internal.firebase-auth-api.zzym zzf
com.mapbox.mapboxsdk.Mapbox: Mapbox(android.content.Context,java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzix: com.google.android.gms.internal.firebase-auth-api.zzix zzf
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
com.mapbox.android.telemetry.VisionObjectDetectionEvent: double getObjectLongitude()
com.mapbox.geojson.ListofListofListOfPointCoordinatesTypeAdapter: java.util.List read(com.google.gson.stream.JsonReader)
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformViewFactory,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,java.lang.Object,android.view.View$OnFocusChangeListener)
com.google.firestore.v1.TransactionOptions$ReadWrite: int RETRY_TRANSACTION_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzbv$zza: int zzd
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextJustify()
com.mapbox.mapboxsdk.offline.OfflineRegion
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
com.google.gson.JsonObject: void addProperty(java.lang.String,java.lang.Character)
com.mapbox.geojson.Polygon$GsonTypeAdapter: Polygon$GsonTypeAdapter(com.google.gson.Gson)
com.google.firebase.iid.Registrar: java.util.List getComponents()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onEnd(android.view.WindowInsetsAnimation)
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval valueOf(java.lang.String)
com.mapbox.mapboxsdk.offline.OfflineManager: void runPackDatabaseAutomatically(boolean)
com.google.firebase.analytics.FirebaseAnalytics: void setCurrentScreen(android.app.Activity,java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes valueOf(java.lang.String)
com.google.type.LatLng: int LONGITUDE_FIELD_NUMBER
android.support.v4.app.RemoteActionCompatParcelizer
com.mapbox.mapboxsdk.style.layers.SymbolLayer: void nativeSetIconOpacityTransition(long,long)
io.flutter.plugins.firebasemessaging.FlutterFirebaseAppRegistrar: java.util.List getComponents()
com.google.protobuf.WireFormat$JavaType: com.google.protobuf.WireFormat$JavaType[] values()
com.google.gson.JsonObject: com.google.gson.JsonArray getAsJsonArray(java.lang.String)
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadStartEvent: java.lang.String shapeForOfflineRegion
com.mapbox.mapboxsdk.module.telemetry.PhoneState: int batteryLevel
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$600(io.flutter.embedding.android.FlutterSplashView$SavedState)
io.flutter.plugins.firebasemessaging.FlutterFirebaseMessagingService: FlutterFirebaseMessagingService()
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcelable)
com.mapbox.geojson.BoundingBox: com.mapbox.geojson.Point southwest()
com.mapbox.mapboxsdk.camera.CameraPosition: com.mapbox.mapboxsdk.geometry.LatLng target
org.chromium.support_lib_boundary.StaticsBoundaryInterface
com.google.android.gms.internal.measurement.zzca$zza: int zzc
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: FlutterMutatorsStack()
io.flutter.embedding.engine.FlutterJNI: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
com.google.gson.JsonArray: void add(java.lang.Boolean)
com.mapbox.mapboxsdk.module.telemetry.PhoneState: boolean wifi
androidx.annotation.Keep
com.google.gson.JsonPrimitive: long getAsLong()
com.google.firestore.v1.TransactionOptions: com.google.firestore.v1.TransactionOptions DEFAULT_INSTANCE
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getFinalClippingPaths()
com.mapbox.mapboxsdk.maps.NativeMapView: com.mapbox.mapboxsdk.camera.CameraPosition nativeGetCameraForLatLngBounds(com.mapbox.mapboxsdk.geometry.LatLngBounds,double,double,double,double,double,double)
com.google.android.gms.internal.measurement.zzcd$zzc: java.lang.String zze
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageEmptyResponseCallback(long,int)
io.flutter.plugin.platform.SingleViewPresentation: java.lang.Object createParams
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getStatics()
com.mapbox.geojson.Point: com.google.gson.TypeAdapter typeAdapter(com.google.gson.Gson)
com.google.android.gms.internal.firebase-auth-api.zzfb: com.google.android.gms.internal.firebase-auth-api.zzfb zzg
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.gms.internal.measurement.zzbv$zzd: com.google.android.gms.internal.measurement.zzjs zzj
com.mapbox.mapboxsdk.style.layers.CircleLayer: java.lang.Object nativeGetCircleBlur()
com.mapbox.mapboxsdk.maps.NativeMapView: com.mapbox.geojson.Feature[] nativeQueryRenderedFeaturesForBox(float,float,float,float,java.lang.String[],java.lang.Object[])
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertWebResourceError(java.lang.reflect.InvocationHandler)
com.google.firestore.v1.DocumentMask
com.mapbox.geojson.Feature: com.mapbox.geojson.BoundingBox bbox()
com.mapbox.mapboxsdk.Mapbox
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: void nativeSetFillExtrusionTranslateTransition(long,long)
com.google.android.gms.internal.measurement.zzck$zzb
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadStartEvent: void writeToParcel(android.os.Parcel,int)
com.google.firestore.v1.StructuredQuery$CollectionSelector: com.google.protobuf.Parser PARSER
io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel[] values()
com.google.firestore.v1.TargetChange: int targetChangeType_
com.mapbox.mapboxsdk.style.layers.FillLayer: void initialize(java.lang.String,java.lang.String)
com.google.firestore.v1.StructuredQuery$Filter$FilterTypeCase: com.google.firestore.v1.StructuredQuery$Filter$FilterTypeCase valueOf(java.lang.String)
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void nativeInitialize(com.mapbox.mapboxsdk.maps.renderer.MapRenderer,float,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
com.google.android.gms.measurement.AppMeasurement: long generateEventId()
androidx.savedstate.Recreator
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTriggeredTimestamp
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: int[] yuvStrides
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setMeasurementEnabled(boolean,long)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: ImeSyncDeferringInsetsCallback(android.view.View,int,int)
io.flutter.embedding.engine.FlutterJNI: long nativeAttach(io.flutter.embedding.engine.FlutterJNI,boolean)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconHaloWidth()
com.mapbox.android.telemetry.VisionObjectDetectionEvent: com.mapbox.android.telemetry.Event$Type obtainType()
com.google.android.gms.internal.firebase-auth-api.zzhq: com.google.android.gms.internal.firebase-auth-api.zzhq[] values()
com.google.android.gms.internal.measurement.zzcd$zzk: long zzg
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: boolean initForYuvFrame(int,int,int,int,int)
io.flutter.embedding.engine.FlutterJNI: void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
com.mapbox.mapboxsdk.module.telemetry.PhoneState: boolean isWifi()
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes[] values()
com.google.android.gms.internal.measurement.zzcd$zzd: java.lang.String zzd
com.google.android.gms.internal.measurement.zzck$zzd: int zzc
com.google.firestore.v1.TransactionOptions: int READ_ONLY_FIELD_NUMBER
com.mapbox.geojson.MultiLineString: com.mapbox.geojson.MultiLineString fromLngLats(java.util.List)
io.flutter.embedding.engine.FlutterJNI: void notifyLowMemoryWarning()
com.google.firestore.v1.Value
com.mapbox.mapboxsdk.log.Logger: void setLoggerDefinition(com.mapbox.mapboxsdk.log.LoggerDefinition)
com.google.android.gms.internal.measurement.zzbv$zzf$zzb: com.google.android.gms.internal.measurement.zzbv$zzf$zzb[] values()
com.google.android.gms.internal.firebase-auth-api.zzgn
com.google.firestore.v1.Document: int UPDATE_TIME_FIELD_NUMBER
com.mapbox.mapboxsdk.style.sources.UnknownSource: void finalize()
com.google.gson.JsonArray: void add(java.lang.Character)
com.mapbox.mapboxsdk.style.layers.RasterLayer: java.lang.Object nativeGetRasterHueRotate()
com.google.android.gms.common.stats.WakeLockEvent: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: void loadDartDeferredLibrary(int,java.lang.String[])
com.mapbox.mapboxsdk.snapshotter.MapSnapshot
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzaf
com.google.firestore.v1.StructuredQuery$CompositeFilter: int OP_FIELD_NUMBER
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: java.lang.Double getMinZoom()
com.mapbox.mapboxsdk.style.light.Light: java.lang.String nativeGetAnchor()
com.google.android.gms.measurement.internal.zzn: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.DropDownListView: void setSelector(android.graphics.drawable.Drawable)
com.google.firebase.datatransport.TransportRegistrar: TransportRegistrar()
com.mapbox.geojson.MultiLineString$GsonTypeAdapter: MultiLineString$GsonTypeAdapter(com.google.gson.Gson)
com.mapbox.mapboxsdk.style.layers.Layer: void nativeSetPaintProperty(java.lang.String,java.lang.Object)
com.mapbox.geojson.GeometryCollection: java.lang.String type
com.google.android.gms.internal.firebase-auth-api.zzix: java.lang.String zzb
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] values()
com.mapbox.geojson.LineString: java.util.List coordinates()
com.google.android.gms.internal.measurement.zzcd$zzg: int zzaw
com.google.firestore.v1.DocumentTransform: com.google.protobuf.Parser PARSER
com.google.android.gms.internal.measurement.zzbv$zzc: java.lang.String zzg
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String)
com.mapbox.mapboxsdk.storage.FileSource: void finalize()
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype[] values()
com.google.firestore.v1.Document: int NAME_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zzfq: com.google.android.gms.internal.firebase-auth-api.zzym zze
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
com.google.android.gms.internal.firebase-auth-api.zzgy: com.google.android.gms.internal.firebase-auth-api.zzig zze
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: int COLORSPACE_BT601
com.mapbox.android.telemetry.VisionObjectDetectionEvent: void setObjectSizeHeight(double)
androidx.appcompat.widget.DialogTitle: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.google.android.gms.location.zzaj: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getChimeraLifecycleFragmentImpl(com.google.android.gms.common.api.internal.LifecycleActivity)
com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken getParameterized(java.lang.reflect.Type,java.lang.reflect.Type[])
com.google.firestore.v1.Target: int DOCUMENTS_FIELD_NUMBER
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
com.mapbox.geojson.GeometryAdapterFactory
io.flutter.embedding.engine.FlutterJNI: void runBundleAndSnapshotFromLibrary(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
com.google.android.gms.internal.firebase-auth-api.zzip: com.google.android.gms.internal.firebase-auth-api.zzis zze
io.flutter.plugins.webviewflutter.JavaScriptChannel
com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberType: com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberType valueOf(java.lang.String)
com.mapbox.mapboxsdk.style.sources.Source: java.lang.Long nativeGetMinimumTileUpdateInterval()
com.google.android.gms.internal.measurement.zzck$zzd: com.google.android.gms.internal.measurement.zzck$zzd zzk
com.google.gson.reflect.TypeToken: boolean equals(java.lang.Object)
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: void setCameraPosition(com.mapbox.mapboxsdk.camera.CameraPosition)
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status[] values()
com.google.gson.JsonArray: java.util.Iterator iterator()
com.mapbox.mapboxsdk.offline.OfflineManager: void nativeResetDatabase(com.mapbox.mapboxsdk.offline.OfflineManager$FileSourceCallback)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setDefaultEventParameters(android.os.Bundle)
io.grpc.okhttp.OkHttpChannelBuilder: io.grpc.okhttp.OkHttpChannelBuilder transportExecutor(java.util.concurrent.Executor)
com.mapbox.geojson.Feature$GsonTypeAdapter: void write(com.google.gson.stream.JsonWriter,com.mapbox.geojson.Feature)
io.flutter.view.AccessibilityViewEmbedder: android.view.View platformViewOfNode(int)
com.google.android.gms.internal.firebase-auth-api.zzix
com.google.firestore.v1.StructuredQuery$CompositeFilter: com.google.firestore.v1.StructuredQuery$CompositeFilter DEFAULT_INSTANCE
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: java.lang.Object nativeGetFillExtrusionPattern()
com.mapbox.mapboxsdk.style.layers.RasterLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetRasterSaturationTransition()
com.google.android.gms.common.internal.zzs: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadStartEvent: java.lang.Double getMaxZoom()
io.flutter.embedding.android.FlutterSurfaceView
com.google.gson.JsonPrimitive: JsonPrimitive(java.lang.Number)
com.google.android.gms.internal.measurement.zzbv$zze: int zzc
com.google.gson.JsonObject: void addProperty(java.lang.String,java.lang.Boolean)
com.google.android.gms.internal.firebase-auth-api.zzlm: android.os.Parcelable$Creator CREATOR
com.mapbox.android.telemetry.AppUserTurnstile: java.lang.String created
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$602(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.View)
com.google.firestore.v1.StructuredQuery$Filter: int UNARY_FILTER_FIELD_NUMBER
com.mapbox.mapboxsdk.style.layers.RasterLayer: java.lang.Object nativeGetRasterFadeDuration()
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
com.mapbox.mapboxsdk.style.layers.Layer: void nativeSetLayoutProperty(java.lang.String,java.lang.Object)
com.google.android.gms.location.LocationSettingsResult: android.os.Parcelable$Creator CREATOR
androidx.activity.ImmLeaksCleaner
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: void nativeCancel()
com.google.firestore.v1.ListenRequest: int DATABASE_FIELD_NUMBER
com.mapbox.mapboxsdk.module.telemetry.MapEventFactory: com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent buildOfflineDownloadCompleteEvent(com.mapbox.mapboxsdk.module.telemetry.PhoneState,java.lang.String,java.lang.Double,java.lang.Double,java.lang.String,long,long,int)
androidx.media.AudioAttributesImplApi21
com.google.firestore.v1.Value$ValueTypeCase: com.google.firestore.v1.Value$ValueTypeCase valueOf(java.lang.String)
com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionDeleteCallback: void onError(java.lang.String)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconPadding()
com.mapbox.mapboxsdk.style.layers.TransitionOptions: long delay
com.mapbox.mapboxsdk.style.layers.SymbolLayer: void nativeSetTextColorTransition(long,long)
com.mapbox.mapboxsdk.style.layers.LineLayer: java.lang.Object nativeGetLineGradient()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean released
io.flutter.embedding.engine.FlutterJNI: void attachToNative(boolean)
com.mapbox.mapboxsdk.maps.NativeMapView: java.lang.String nativeGetStyleJson()
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
com.google.firebase.components.ComponentDiscoveryService
com.google.gson.typeadapters.RuntimeTypeAdapterFactory: java.util.Map labelToSubtype
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier[] values()
com.mapbox.geojson.Point: java.lang.String type()
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.google.android.gms.internal.firebase-auth-api.zzzh: com.google.android.gms.internal.firebase-auth-api.zzzh[] values()
com.mapbox.mapboxsdk.text.LocalGlyphRasterizer: android.graphics.Canvas canvas
com.mapbox.geojson.LineString: java.lang.String toString()
com.mapbox.geojson.Polygon: com.mapbox.geojson.Polygon fromOuterInner(com.mapbox.geojson.LineString,com.mapbox.geojson.LineString[])
io.flutter.plugins.firebaseanalytics.FlutterFirebaseAppRegistrar: java.util.List getComponents()
com.mapbox.mapboxsdk.style.types.FormattedSection: void setFontScale(java.lang.Number)
com.mapbox.geojson.MultiPoint$GsonTypeAdapter: com.mapbox.geojson.CoordinateContainer createCoordinateContainer(java.lang.String,com.mapbox.geojson.BoundingBox,java.lang.Object)
com.mapbox.geojson.GeometryCollection: int hashCode()
com.mapbox.mapboxsdk.module.telemetry.MapBaseEvent
com.mapbox.geojson.MultiPoint$GsonTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void ensureAttachedToNative()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
com.google.protobuf.Any: java.lang.String typeUrl_
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty
com.google.android.gms.internal.measurement.zzcd$zzg: long zzh
com.mapbox.mapboxsdk.style.layers.Layer: com.google.gson.JsonElement nativeGetFilter()
com.mapbox.mapboxsdk.style.types.Formatted
com.google.android.gms.internal.firebase-auth-api.zzfb: com.google.android.gms.internal.firebase-auth-api.zzfh zze
com.google.android.gms.internal.firebase-auth-api.zzle: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionUpdateMetadataCallback: void onError(java.lang.String)
com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionInvalidateCallback: void onError(java.lang.String)
com.google.firestore.v1.ListenResponse$ResponseTypeCase: com.google.firestore.v1.ListenResponse$ResponseTypeCase[] values()
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void updateFps()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setDataCollectionEnabled(boolean)
com.google.firebase.firestore.FirebaseFirestore
com.mapbox.mapboxsdk.maps.NativeMapView: double nativeGetTopOffsetPixelsForAnnotationSymbol(java.lang.String)
com.mapbox.geojson.Polygon$GsonTypeAdapter: void write(com.google.gson.stream.JsonWriter,com.mapbox.geojson.Polygon)
com.google.android.gms.internal.firebase-auth-api.zzep: com.google.android.gms.internal.firebase-auth-api.zzhg zze
com.google.firebase.messaging.FirebaseMessagingService
com.google.firestore.v1.ListenResponse: int DOCUMENT_DELETE_FIELD_NUMBER
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessageResponse(int,byte[])
com.google.android.exoplayer2.decoder.Buffer: void addFlag(int)
androidx.core.app.RemoteActionCompatParcelizer
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver
com.google.android.gms.internal.firebase-auth-api.zzmu: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeFlyTo(double,double,double,long,double,double,double[])
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy valueOf(java.lang.String)
com.google.firebase.firestore.core.Filter$Operator: com.google.firebase.firestore.core.Filter$Operator valueOf(java.lang.String)
com.google.firestore.v1.ListenRequest: int targetChangeCase_
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler
com.google.android.gms.maps.model.PolylineOptions: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: void ensureRunningOnMainThread()
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent: PerformanceEvent(com.mapbox.mapboxsdk.module.telemetry.PhoneState,java.lang.String,android.os.Bundle)
com.mapbox.geojson.MultiLineString: java.lang.String type
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: java.lang.Object nativeGetFillExtrusionTranslateAnchor()
com.mapbox.mapboxsdk.maps.NativeMapView: void onWillStartRenderingFrame()
com.google.firestore.v1.WriteResult: com.google.firestore.v1.WriteResult DEFAULT_INSTANCE
com.mapbox.mapboxsdk.style.layers.SymbolLayer: void nativeSetIconTranslateTransition(long,long)
com.mapbox.mapboxsdk.maps.Image: float[] stretchY
com.google.gson.JsonElement: boolean isJsonObject()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconTranslate()
com.mapbox.mapboxsdk.style.layers.FillLayer: java.lang.Object nativeGetFillColor()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
com.mapbox.geojson.Point: double longitude()
com.mapbox.geojson.MultiPoint$GsonTypeAdapter: MultiPoint$GsonTypeAdapter(com.google.gson.Gson)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
com.mapbox.mapboxsdk.log.Logger: int NONE
io.flutter.embedding.engine.FlutterJNI: void updateJavaAssetManager(android.content.res.AssetManager,java.lang.String)
com.mapbox.mapboxsdk.offline.OfflineManager: void nativeClearAmbientCache(com.mapbox.mapboxsdk.offline.OfflineManager$FileSourceCallback)
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: java.lang.Object nativeGetLocation()
android.support.v4.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
com.google.android.gms.measurement.AppMeasurement
com.mapbox.geojson.Feature: com.mapbox.geojson.Feature fromGeometry(com.mapbox.geojson.Geometry,com.mapbox.geojson.BoundingBox)
com.google.android.gms.internal.firebase-auth-api.zzip: com.google.android.gms.internal.firebase-auth-api.zzip zzf
io.grpc.okhttp.internal.Protocol: io.grpc.okhttp.internal.Protocol valueOf(java.lang.String)
com.mapbox.mapboxsdk.style.layers.CircleLayer: java.lang.Object nativeGetCircleTranslateAnchor()
com.google.firestore.v1.StructuredQuery$UnaryFilter
com.google.firebase.analytics.FirebaseAnalytics: com.google.firebase.analytics.FirebaseAnalytics getInstance(android.content.Context)
com.mapbox.geojson.PointAsCoordinatesTypeAdapter: com.mapbox.geojson.Point read(com.google.gson.stream.JsonReader)
com.google.firestore.v1.Value$ValueTypeCase: com.google.firestore.v1.Value$ValueTypeCase[] values()
com.mapbox.geojson.utils.PolylineUtils: java.util.List simplify(java.util.List,boolean)
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mCreationTimestamp
io.flutter.embedding.android.FlutterSplashView$SavedState
com.google.android.gms.internal.firebase-auth-api.zzxg: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzgk: com.google.android.gms.internal.firebase-auth-api.zzgk zzg
com.google.android.gms.internal.measurement.zzcd$zzg: com.google.android.gms.internal.measurement.zzcd$zzg zzax
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
com.google.android.gms.maps.model.PolygonOptions: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzhd
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateJavaAssetManager(long,android.content.res.AssetManager,java.lang.String)
com.mapbox.mapboxsdk.style.layers.RasterLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetRasterOpacityTransition()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityStopped(com.google.android.gms.dynamic.IObjectWrapper,long)
com.google.firebase.firestore.core.ViewSnapshot$SyncState: com.google.firebase.firestore.core.ViewSnapshot$SyncState valueOf(java.lang.String)
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: java.lang.String getEventName()
com.google.android.gms.internal.measurement.zzca$zzc: com.google.android.gms.internal.measurement.zzca$zzc zzf
com.google.android.gms.internal.measurement.zzcd$zzg: long zzak
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
com.mapbox.mapboxsdk.style.layers.RasterLayer: RasterLayer(long)
com.google.firestore.v1.WriteResult
com.google.gson.reflect.TypeToken: boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map)
android.support.v4.media.MediaMetadataCompat
com.google.android.gms.internal.measurement.zzcd$zze: com.google.android.gms.internal.measurement.zzcd$zze zzj
com.mapbox.geojson.utils.PolylineUtils: double getSqSegDist(com.mapbox.geojson.Point,com.mapbox.geojson.Point,com.mapbox.geojson.Point)
com.mapbox.mapboxsdk.annotations.Polygon: int strokeColor
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
com.mapbox.geojson.utils.PolylineUtils: java.util.List simplify(java.util.List,double)
com.mapbox.mapboxsdk.offline.OfflineRegion: void finalize()
androidx.appcompat.widget.SearchView: void setIconified(boolean)
com.google.firestore.v1.Precondition$ConditionTypeCase: com.google.firestore.v1.Precondition$ConditionTypeCase valueOf(java.lang.String)
com.google.gson.JsonObject: com.google.gson.JsonPrimitive getAsJsonPrimitive(java.lang.String)
com.mapbox.geojson.GeometryCollection$GsonTypeAdapter: com.google.gson.TypeAdapter listGeometryAdapter
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
com.google.gson.JsonArray: char getAsCharacter()
com.google.gson.typeadapters.RuntimeTypeAdapterFactory
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle)
com.mapbox.geojson.MultiPolygon: java.lang.String type
com.google.android.gms.internal.measurement.zzcd$zzk: double zzi
com.google.android.gms.internal.measurement.zzbv$zzd: java.lang.String zzh
com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat: com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat valueOf(java.lang.String)
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
com.google.android.gms.internal.firebase-auth-api.zzib: int zzb
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextTranslateAnchor()
com.google.firebase.firestore.proto.Target: int targetId_
com.mapbox.geojson.Feature: java.lang.String type()
com.mapbox.mapboxsdk.offline.OfflineManager$MergeOfflineRegionsCallback
org.chromium.support_lib_boundary.WebMessageCallbackBoundaryInterface: void onMessage(java.lang.reflect.InvocationHandler,java.lang.reflect.InvocationHandler)
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
com.mapbox.android.accounts.v1.MapboxAccounts: java.lang.String obtainMapsSkuUserToken(java.lang.String)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformView getView()
com.google.gson.JsonArray: int hashCode()
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String)
com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionUpdateMetadataCallback
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetStyleJson(java.lang.String)
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzan
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.gms.internal.measurement.zzcd$zzg: int zzq
com.google.android.gms.internal.measurement.zzbv$zza: boolean zzh
com.mapbox.geojson.BaseGeometryTypeAdapter: BaseGeometryTypeAdapter(com.google.gson.Gson,com.google.gson.TypeAdapter)
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.mapbox.geojson.Feature: com.mapbox.geojson.Feature fromGeometry(com.mapbox.geojson.Geometry)
com.google.protobuf.GeneratedMessageLite: java.util.Map defaultInstanceMap
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setAllowContentAccess(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
com.mapbox.geojson.Feature: com.google.gson.JsonObject properties
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus valueOf(java.lang.String)
com.mapbox.mapboxsdk.storage.FileSource: void setResourceCachePath(java.lang.String,com.mapbox.mapboxsdk.storage.FileSource$ResourcesCachePathChangeCallback)
com.google.android.gms.common.internal.zza: android.os.Parcelable$Creator CREATOR
io.grpc.internal.MessageDeframer$State: io.grpc.internal.MessageDeframer$State[] values()
com.mapbox.geojson.gson.GeoJsonAdapterFactory$GeoJsonAdapterFactoryIml
com.mapbox.geojson.MultiPolygon: com.mapbox.geojson.MultiPolygon fromPolygons(java.util.List,com.mapbox.geojson.BoundingBox)
com.google.android.gms.internal.measurement.zzc: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
com.google.android.gms.internal.firebase-auth-api.zzgt: com.google.android.gms.internal.firebase-auth-api.zzgt zzg
com.google.android.gms.internal.firebase-auth-api.zzgy: com.google.android.gms.internal.firebase-auth-api.zzgy zzf
com.mapbox.android.telemetry.AppUserTurnstile: void setSkuId(java.lang.String)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetTextColorTransition()
com.mapbox.mapboxsdk.style.layers.CustomLayer: void update()
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: long nativePtr
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: long sizeOfResourcesCompleted
com.google.firebase.firestore.proto.WriteBatch: int LOCAL_WRITE_TIME_FIELD_NUMBER
com.google.firebase.FirebaseCommonRegistrar
com.mapbox.geojson.Polygon: com.mapbox.geojson.Polygon fromJson(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.maps.NativeMapView: com.mapbox.mapboxsdk.camera.CameraPosition nativeGetCameraPosition()
com.mapbox.mapboxsdk.annotations.Marker
com.mapbox.mapboxsdk.Mapbox: com.mapbox.mapboxsdk.ModuleProvider moduleProvider
com.google.android.gms.measurement.AppMeasurement: void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle)
com.google.android.gms.internal.measurement.zzcd$zza: boolean zzg
androidx.appcompat.widget.ActionMenuView
com.google.rpc.Status: int MESSAGE_FIELD_NUMBER
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
com.mapbox.mapboxsdk.maps.NativeMapView: void onDidBecomeIdle()
io.grpc.okhttp.internal.Protocol: io.grpc.okhttp.internal.Protocol[] values()
com.mapbox.android.telemetry.LocationEvent: LocationEvent(java.lang.String,double,double,java.lang.String)
com.google.firestore.v1.DocumentTransform$FieldTransform: int APPEND_MISSING_ELEMENTS_FIELD_NUMBER
com.google.gson.JsonPrimitive: boolean isBoolean()
com.google.firestore.v1.StructuredQuery$Filter: com.google.protobuf.Parser PARSER
com.mapbox.mapboxsdk.module.telemetry.MapBaseEvent: void writeToParcel(android.os.Parcel,int)
com.google.firestore.v1.TransactionOptions$ReadOnly: com.google.firestore.v1.TransactionOptions$ReadOnly DEFAULT_INSTANCE
com.mapbox.mapboxsdk.offline.OfflineGeometryRegionDefinition: double minZoom
com.mapbox.mapboxsdk.style.sources.Source: java.lang.Boolean isVolatile()
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent: com.google.gson.JsonObject metadata
com.mapbox.android.telemetry.CrashEvent: boolean isValid()
com.google.android.gms.safetynet.zzh: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.style.light.Light: void nativeSetColorTransition(long,long)
com.google.firestore.v1.ListenResponse: java.lang.Object responseType_
com.google.firestore.v1.StructuredQuery: int SELECT_FIELD_NUMBER
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: java.lang.Object nativeGetFillExtrusionHeight()
com.mapbox.mapboxsdk.log.Logger: com.mapbox.mapboxsdk.log.LoggerDefinition logger
com.mapbox.geojson.FeatureCollection: java.util.List features()
com.mapbox.android.telemetry.VisionObjectDetectionEvent: java.lang.Double vehicle_lat
com.mapbox.mapboxsdk.offline.OfflineManager: void setOfflineMapboxTileCountLimit(long)
com.mapbox.mapboxsdk.module.telemetry.MapEventFactory
com.mapbox.geojson.BoundingBox: com.mapbox.geojson.BoundingBox fromCoordinates(double,double,double,double,double,double)
com.mapbox.mapboxsdk.log.Logger: void w(java.lang.String,java.lang.String,java.lang.Throwable)
com.mapbox.mapboxsdk.module.telemetry.PhoneState$Orientation: java.lang.String orientation
io.flutter.view.FlutterView: io.flutter.app.FlutterPluginRegistry getPluginRegistry()
com.mapbox.mapboxsdk.maps.renderer.MapRendererScheduler
com.mapbox.geojson.utils.GeoJsonUtils: double ROUND_PRECISION
com.google.android.gms.internal.measurement.zzca$zzb: com.google.android.gms.internal.measurement.zzig zzl
com.mapbox.mapboxsdk.offline.OfflineTilePyramidRegionDefinition: float pixelRatio
com.google.firestore.v1.WriteResponse: java.lang.String streamId_
com.mapbox.mapboxsdk.annotations.Polyline: float width
com.mapbox.mapboxsdk.module.telemetry.PhoneState: float obtainDisplayDensity(android.content.Context)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$200(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.mapbox.geojson.ListofListofListOfPointCoordinatesTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
com.mapbox.mapboxsdk.style.layers.HillshadeLayer: void nativeSetHillshadeShadowColorTransition(long,long)
com.google.android.exoplayer2.trackselection.TrackSelectionParameters: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceDestroyed(long)
com.google.firestore.v1.TargetChange: com.google.protobuf.Timestamp readTime_
com.mapbox.mapboxsdk.style.layers.RasterLayer: void nativeSetRasterContrastTransition(long,long)
com.google.android.gms.internal.measurement.zzhs: com.google.android.gms.internal.measurement.zzhs[] values()
com.google.android.gms.internal.firebase-auth-api.zzev: com.google.android.gms.internal.firebase-auth-api.zzev zzf
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
com.google.android.exoplayer2.upstream.RawResourceDataSource: android.net.Uri buildRawResourceUri(int)
com.mapbox.android.telemetry.AppUserTurnstile
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconTextFit()
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
com.google.android.gms.internal.measurement.zzgg: int zza
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] values()
com.mapbox.mapboxsdk.style.layers.BackgroundLayer
com.mapbox.geojson.Feature: Feature(java.lang.String,com.mapbox.geojson.BoundingBox,java.lang.String,com.mapbox.geojson.Geometry,com.google.gson.JsonObject)
com.mapbox.mapboxsdk.style.layers.FillLayer: void nativeSetFillOutlineColorTransition(long,long)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.gms.internal.firebase-auth-api.zzey: int zzb
com.google.android.gms.signin.internal.zak: android.os.Parcelable$Creator CREATOR
com.mapbox.android.accounts.v1.MapboxAccounts: java.lang.String obtainVisionFleetSkuUserToken(java.lang.String)
com.google.firestore.v1.Write: java.lang.Object operation_
com.mapbox.geojson.Point: double altitude()
androidx.activity.ComponentActivity$3
io.flutter.view.AccessibilityViewEmbedder: AccessibilityViewEmbedder(android.view.View,int)
io.flutter.view.FlutterView$ZeroSides: io.flutter.view.FlutterView$ZeroSides valueOf(java.lang.String)
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy[] values()
com.mapbox.mapboxsdk.module.telemetry.PhoneState: java.lang.String getCreated()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture
com.mapbox.mapboxsdk.style.sources.Source: void nativeSetPrefetchZoomDelta(java.lang.Integer)
com.mapbox.android.telemetry.VisionObjectDetectionEvent: java.lang.Double vehicle_lon
com.mapbox.geojson.shifter.CoordinateShifterManager$1: java.util.List shiftLonLatAlt(double,double,double)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
com.google.firestore.v1.Value: com.google.protobuf.Parser PARSER
com.mapbox.mapboxsdk.style.sources.Source
com.google.android.gms.location.zzae: android.os.Parcelable$Creator CREATOR
com.mapbox.geojson.ListOfListOfPointCoordinatesTypeAdapter: java.util.List read(com.google.gson.stream.JsonReader)
com.mapbox.geojson.LineString: com.mapbox.geojson.LineString fromLngLats(com.mapbox.geojson.MultiPoint,com.mapbox.geojson.BoundingBox)
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: MapLoadEvent(java.lang.String,com.mapbox.mapboxsdk.module.telemetry.PhoneState)
io.grpc.internal.ManagedChannelImpl$ResolutionState: io.grpc.internal.ManagedChannelImpl$ResolutionState valueOf(java.lang.String)
com.google.firestore.v1.StructuredQuery$CompositeFilter: com.google.protobuf.Internal$ProtobufList filters_
com.google.gson.JsonElement: short getAsShort()
com.mapbox.geojson.Polygon: com.mapbox.geojson.Polygon fromOuterInner(com.mapbox.geojson.LineString,com.mapbox.geojson.BoundingBox,com.mapbox.geojson.LineString[])
androidx.appcompat.widget.SearchView$SearchAutoComplete
com.google.android.gms.measurement.internal.zzz: android.os.Parcelable$Creator CREATOR
com.google.android.gms.measurement.AppMeasurementJobService: AppMeasurementJobService()
com.google.gson.JsonArray: com.google.gson.JsonElement set(int,com.google.gson.JsonElement)
com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)
com.mapbox.geojson.ListOfDoublesCoordinatesTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.util.List)
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
com.google.firestore.v1.TargetChange: int TARGET_IDS_FIELD_NUMBER
com.mapbox.mapboxsdk.style.sources.GeoJsonSource
com.google.android.gms.internal.firebase-auth-api.zzem: com.google.android.gms.internal.firebase-auth-api.zzhd zzf
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
com.google.firebase.firestore.proto.Target$TargetTypeCase: com.google.firebase.firestore.proto.Target$TargetTypeCase valueOf(java.lang.String)
com.google.firebase.auth.internal.zzr: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeGetVisibleCoordinateBounds(double[])
com.mapbox.android.telemetry.VisionObjectDetectionEvent: double getObjectPositionHeight()
com.google.android.gms.internal.measurement.zzck$zza: com.google.android.gms.internal.measurement.zzjs zze
com.google.gson.JsonArray: void addAll(com.google.gson.JsonArray)
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void onSurfaceDestroyed()
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetMinZoom(double)
com.mapbox.mapboxsdk.style.layers.CircleLayer: java.lang.Object nativeGetCircleStrokeColor()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: ImeSyncDeferringInsetsCallback$AnimationCallback(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.mapbox.mapboxsdk.module.telemetry.MapEventFactory: com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent buildMapLoadEvent(com.mapbox.mapboxsdk.module.telemetry.PhoneState)
com.mapbox.mapboxsdk.style.sources.ImageSource: java.lang.String nativeGetUrl()
com.google.firestore.v1.Target$QueryTarget: java.lang.String parent_
com.mapbox.mapboxsdk.style.sources.Source: long getNativePtr()
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzn
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.gms.internal.measurement.zzck$zzd: com.google.android.gms.internal.measurement.zzig zzi
androidx.fragment.app.FragmentManagerViewModel
com.mapbox.mapboxsdk.style.layers.LineLayer: void nativeSetLineGapWidthTransition(long,long)
com.google.protobuf.FieldType: com.google.protobuf.FieldType[] values()
com.mapbox.mapboxsdk.maps.renderer.MapRendererRunnable: void nativeInitialize()
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetShadowImageSizeTransition()
com.google.android.gms.internal.measurement.zzcd$zzg: com.google.android.gms.internal.measurement.zzig zzae
com.mapbox.geojson.MultiLineString: com.mapbox.geojson.BoundingBox bbox
com.mapbox.mapboxsdk.storage.FileSource$ResourceTransformCallback: java.lang.String onURL(int,java.lang.String)
com.google.android.gms.internal.measurement.zzcd$zzc: com.google.android.gms.internal.measurement.zzig zzd
com.google.android.gms.internal.firebase-auth-api.zzwo: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.Document: int CREATE_TIME_FIELD_NUMBER
com.google.firebase.auth.internal.zzae: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.StructuredQuery$Direction: com.google.firestore.v1.StructuredQuery$Direction[] values()
com.mapbox.geojson.Feature: void addBooleanProperty(java.lang.String,java.lang.Boolean)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmoji(int)
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: com.mapbox.mapboxsdk.style.sources.Source nativeGetSource(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void ensureNotAttachedToNative()
androidx.lifecycle.Lifecycling$1
com.google.android.gms.internal.firebase-auth-api.zzij: com.google.android.gms.internal.firebase-auth-api.zzim zze
com.mapbox.mapboxsdk.style.layers.RasterLayer: void finalize()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void insertVisualStateCallback(long,java.lang.reflect.InvocationHandler)
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority valueOf(java.lang.String)
com.google.android.exoplayer2.decoder.Buffer: boolean isDecodeOnly()
com.google.firebase.firestore.FirestoreRegistrar: java.util.List getComponents()
com.google.android.gms.internal.firebase-auth-api.zzia
com.google.android.gms.internal.firebase-auth-api.zzwm: android.os.Parcelable$Creator CREATOR
com.mapbox.geojson.constants.GeoJsonConstants: double MAX_LONGITUDE
androidx.appcompat.widget.ContentFrameLayout
com.google.firestore.v1.DocumentChange
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
com.google.android.gms.internal.measurement.zzca$zzb: com.google.android.gms.internal.measurement.zzca$zzb zzm
com.mapbox.geojson.LineString$GsonTypeAdapter
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.Object mValue
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map)
com.google.firestore.v1.BatchGetDocumentsResponse
com.google.android.gms.internal.measurement.zzcd$zzf: com.google.android.gms.internal.measurement.zzjs zze
com.google.android.gms.internal.measurement.zzcd$zzd: com.google.android.gms.internal.measurement.zzcd$zzd zzf
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void onDrawFrame(javax.microedition.khronos.opengles.GL10)
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcel)
com.mapbox.mapboxsdk.camera.CameraPosition: double zoom
io.grpc.ConnectivityState: io.grpc.ConnectivityState valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int)
com.mapbox.android.accounts.v1.AccountsConstants
com.mapbox.mapboxsdk.style.layers.HillshadeLayer: void nativeSetHillshadeAccentColorTransition(long,long)
com.google.firestore.v1.Document: com.google.protobuf.Timestamp updateTime_
com.google.android.gms.internal.measurement.zzcd$zzg: com.google.android.gms.internal.measurement.zzjs zzay
com.mapbox.geojson.MultiPoint$GsonTypeAdapter: void write(com.google.gson.stream.JsonWriter,com.mapbox.geojson.MultiPoint)
com.google.firebase.ktx.FirebaseCommonKtxRegistrar: java.util.List getComponents()
io.flutter.view.AccessibilityViewEmbedder: void cacheVirtualIdMappings(android.view.View,int,int)
com.mapbox.mapboxsdk.maps.NativeMapView: com.mapbox.mapboxsdk.style.layers.Layer nativeGetLayer(java.lang.String)
com.mapbox.mapboxsdk.style.layers.TransitionOptions: com.mapbox.mapboxsdk.style.layers.TransitionOptions fromTransitionOptions(long,long,boolean)
com.mapbox.geojson.MultiPolygon: boolean equals(java.lang.Object)
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: void nativeSetFillExtrusionHeightTransition(long,long)
com.mapbox.geojson.utils.PolylineUtils
com.google.android.exoplayer2.metadata.flac.VorbisComment: android.os.Parcelable$Creator CREATOR
com.mapbox.geojson.Polygon: java.lang.String type()
com.google.firebase.firestore.core.OrderBy$Direction: com.google.firebase.firestore.core.OrderBy$Direction[] values()
com.mapbox.android.telemetry.LocationEvent: java.lang.String sessionId
com.google.android.gms.internal.firebase-auth-api.zzmm: android.os.Parcelable$Creator CREATOR
com.mapbox.geojson.shifter.CoordinateShifter: java.util.List shiftLonLat(double,double)
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTriggeredEventName
androidx.core.app.JobIntentService: JobIntentService()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityPaused(com.google.android.gms.dynamic.IObjectWrapper,long)
com.mapbox.mapboxsdk.maps.NativeMapView: com.mapbox.mapboxsdk.style.light.Light nativeGetLight()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
com.mapbox.android.telemetry.CrashEvent: java.lang.String appId
com.google.android.gms.location.LocationSettingsRequest: android.os.Parcelable$Creator CREATOR
com.mapbox.geojson.utils.PolylineUtils: java.util.List simplifyDpStep(java.util.List,int,int,double,java.util.List)
com.google.android.gms.internal.firebase-auth-api.zzma: android.os.Parcelable$Creator CREATOR
com.google.gson.JsonPrimitive
com.google.android.gms.internal.measurement.zzcd$zze: float zzg
io.flutter.embedding.engine.FlutterJNI: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
com.google.firestore.v1.Value: int valueTypeCase_
com.google.firestore.v1.DocumentRemove: int READ_TIME_FIELD_NUMBER
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
io.flutter.plugins.firebaseanalytics.FlutterFirebaseAppRegistrar: FlutterFirebaseAppRegistrar()
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: java.lang.String styleURL
com.google.firestore.v1.StructuredQuery: com.google.protobuf.Internal$ProtobufList orderBy_
com.google.protobuf.Any: com.google.protobuf.Any DEFAULT_INSTANCE
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State[] values()
com.google.android.gms.internal.measurement.zzca$zzb: long zzd
io.flutter.plugins.firebasemessaging.FlutterFirebaseAppRegistrar: FlutterFirebaseAppRegistrar()
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: boolean isPluggedIn()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent: java.util.List counters
com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionDeleteCallback: void onDelete()
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.style.layers.FillLayer: java.lang.Object nativeGetFillPattern()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String)
com.google.firebase.firestore.core.LimboDocumentChange$Type: com.google.firebase.firestore.core.LimboDocumentChange$Type[] values()
com.mapbox.mapboxsdk.offline.OfflineManager$FileSourceCallback: void onError(java.lang.String)
com.google.gson.JsonElement: char getAsCharacter()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceCreated(long,android.view.Surface)
com.mapbox.mapboxsdk.module.telemetry.PhoneState: java.lang.String carrier
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextAllowOverlap()
com.mapbox.mapboxsdk.annotations.Polygon
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
com.mapbox.mapboxsdk.style.light.Light: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetColorTransition()
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: void initForPrivateFrame(int,int)
com.google.firebase.firestore.proto.MaybeDocument$DocumentTypeCase: com.google.firebase.firestore.proto.MaybeDocument$DocumentTypeCase[] values()
androidx.appcompat.widget.SearchView: void setInputType(int)
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
com.mapbox.mapboxsdk.offline.OfflineManager: void mergeOfflineRegions(com.mapbox.mapboxsdk.storage.FileSource,java.lang.String,com.mapbox.mapboxsdk.offline.OfflineManager$MergeOfflineRegionsCallback)
com.mapbox.android.telemetry.CrashEvent: java.lang.String threadDetails
com.google.firebase.installations.FirebaseInstallationsRegistrar
io.grpc.okhttp.NegotiationType: io.grpc.okhttp.NegotiationType valueOf(java.lang.String)
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: java.lang.String getStyleURL()
com.mapbox.mapboxsdk.style.layers.FillLayer: java.lang.Object nativeGetFillTranslate()
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler[] createWebMessageChannel()
com.mapbox.mapboxsdk.module.telemetry.PhoneState: boolean isPluggedIn()
android.support.v4.media.session.ParcelableVolumeInfo
com.google.firestore.v1.ListenRequest: int LABELS_FIELD_NUMBER
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: OfflineDownloadEndEvent(com.mapbox.mapboxsdk.module.telemetry.PhoneState,java.lang.String,java.lang.Double,java.lang.Double)
com.google.android.gms.measurement.AppMeasurement: void beginAdUnitExposure(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzgn: int zzb
com.mapbox.mapboxsdk.style.layers.LineLayer: java.lang.Object nativeGetLineSortKey()
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
com.google.firebase.auth.UserProfileChangeRequest: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.module.telemetry.MapEventFactory: com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent buildPerformanceEvent(com.mapbox.mapboxsdk.module.telemetry.PhoneState,java.lang.String,android.os.Bundle)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
com.google.firebase.firestore.remote.Stream$State: com.google.firebase.firestore.remote.Stream$State[] values()
com.mapbox.geojson.LineString: com.mapbox.geojson.LineString fromLngLats(double[][])
com.mapbox.geojson.GeometryCollection: GeometryCollection(java.lang.String,com.mapbox.geojson.BoundingBox,java.util.List)
com.mapbox.geojson.Point
com.mapbox.mapboxsdk.maps.NativeMapView: com.mapbox.mapboxsdk.geometry.LatLng nativeLatLngForProjectedMeters(double,double)
com.google.android.gms.internal.firebase-auth-api.zzia: com.google.android.gms.internal.firebase-auth-api.zzia zzh
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzgt: int zze
com.mapbox.geojson.shifter.CoordinateShifterManager: boolean isUsingDefaultShifter()
com.baseflow.geolocator.permission.LocationPermission: com.baseflow.geolocator.permission.LocationPermission[] values()
com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator: com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator valueOf(java.lang.String)
com.google.firestore.v1.CommitRequest: com.google.firestore.v1.CommitRequest DEFAULT_INSTANCE
com.google.android.gms.internal.firebase-auth-api.zzem: com.google.android.gms.internal.firebase-auth-api.zzes zze
com.mapbox.geojson.GeometryCollection: java.lang.String toJson()
com.mapbox.mapboxsdk.offline.OfflineManager: void listOfflineRegions(com.mapbox.mapboxsdk.storage.FileSource,com.mapbox.mapboxsdk.offline.OfflineManager$ListOfflineRegionsCallback)
com.google.android.gms.internal.measurement.zzcd$zzh: int zzd
com.google.firestore.v1.WriteResponse: int WRITE_RESULTS_FIELD_NUMBER
com.mapbox.geojson.LineString: java.lang.Object coordinates()
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetTransitionDuration(long)
com.mapbox.mapboxsdk.style.layers.LineLayer: void nativeSetLineOpacityTransition(long,long)
com.mapbox.mapboxsdk.style.layers.LineLayer: java.lang.Object nativeGetLineDasharray()
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mExpiredEventParams
com.google.type.LatLng
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
com.google.firebase.firestore.proto.Target: int LAST_LIMBO_FREE_SNAPSHOT_VERSION_FIELD_NUMBER
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] values()
com.mapbox.mapboxsdk.style.layers.CannotAddLayerException
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: boolean equals(java.lang.Object)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
com.google.firebase.firestore.core.Query$LimitType: com.google.firebase.firestore.core.Query$LimitType valueOf(java.lang.String)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeDestroy()
io.grpc.MethodDescriptor$MethodType: io.grpc.MethodDescriptor$MethodType valueOf(java.lang.String)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
com.mapbox.geojson.gson.GeoJsonAdapterFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
com.mapbox.mapboxsdk.style.sources.CustomGeometrySource: boolean isCancelled(int,int,int)
com.mapbox.mapboxsdk.offline.OfflineManager$ListOfflineRegionsCallback: void onList(com.mapbox.mapboxsdk.offline.OfflineRegion[])
com.mapbox.mapboxsdk.style.layers.SymbolLayer: void nativeSetTextHaloColorTransition(long,long)
com.google.firestore.v1.ExistenceFilter: com.google.firestore.v1.ExistenceFilter DEFAULT_INSTANCE
com.mapbox.android.telemetry.CrashEvent: java.lang.String appVersion
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextOffset()
com.mapbox.mapboxsdk.style.layers.CircleLayer: void nativeSetCircleStrokeColorTransition(long,long)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.String[] getSupportedFeatures()
com.mapbox.geojson.BaseGeometryTypeAdapter: void writeCoordinateContainer(com.google.gson.stream.JsonWriter,com.mapbox.geojson.CoordinateContainer)
com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: void onGestureInteraction(java.lang.String,double,double,double)
io.flutter.embedding.engine.FlutterJNI: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzw
io.flutter.embedding.android.FlutterSplashView$SavedState: void writeToParcel(android.os.Parcel,int)
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface getSurface()
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
com.google.android.gms.internal.firebase-auth-api.zzly: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
com.mapbox.mapboxsdk.style.types.FormattedSection: java.lang.String text
com.mapbox.mapboxsdk.style.types.FormattedSection: java.lang.String toString()
com.mapbox.geojson.shifter.CoordinateShifterManager$1: CoordinateShifterManager$1()
com.google.firestore.v1.BatchGetDocumentsResponse: com.google.firestore.v1.BatchGetDocumentsResponse DEFAULT_INSTANCE
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback animationCallback
com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionUpdateMetadataCallback: void onUpdate(byte[])
com.google.firebase.firestore.proto.WriteBatch: com.google.firebase.firestore.proto.WriteBatch DEFAULT_INSTANCE
com.google.android.gms.internal.firebase-auth-api.zzif: com.google.android.gms.internal.firebase-auth-api.zzif zzh
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getOffscreenPreRaster()
com.mapbox.geojson.BoundingBox: com.mapbox.geojson.BoundingBox fromLngLats(double,double,double,double,double,double)
io.flutter.embedding.engine.FlutterJNI: void nativeLoadDartDeferredLibrary(long,int,java.lang.String[])
com.google.android.gms.internal.measurement.zzbv$zze: com.google.android.gms.internal.measurement.zzbv$zzc zzf
android.support.v4.media.MediaDescriptionCompat
android.support.v4.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
com.google.android.gms.internal.firebase-auth-api.zzia: com.google.android.gms.internal.firebase-auth-api.zzho zzb
com.mapbox.mapboxsdk.style.types.FormattedSection: java.lang.Object[] toArray()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
com.mapbox.mapboxsdk.offline.OfflineTilePyramidRegionDefinition: OfflineTilePyramidRegionDefinition(java.lang.String,com.mapbox.mapboxsdk.geometry.LatLngBounds,double,double,float)
com.mapbox.geojson.Feature: com.mapbox.geojson.Feature fromGeometry(com.mapbox.geojson.Geometry,com.google.gson.JsonObject,java.lang.String)
com.mapbox.mapboxsdk.style.types.FormattedSection: void setTextColor(int)
com.google.gson.typeadapters.RuntimeTypeAdapterFactory: java.lang.String typeFieldName
io.flutter.embedding.engine.FlutterJNI: boolean nativeGetIsSoftwareRenderingEnabled()
com.mapbox.mapboxsdk.storage.FileSource: void deactivate()
com.mapbox.geojson.FeatureCollection$GsonTypeAdapter: com.google.gson.TypeAdapter listFeatureAdapter
com.mapbox.mapboxsdk.module.telemetry.PhoneState$Orientation: com.mapbox.mapboxsdk.module.telemetry.PhoneState$Orientation[] values()
com.mapbox.geojson.MultiPolygon: com.mapbox.geojson.MultiPolygon fromLngLats(java.util.List)
com.google.firestore.v1.Value: int BOOLEAN_VALUE_FIELD_NUMBER
com.mapbox.geojson.FeatureCollection: com.mapbox.geojson.BoundingBox bbox
com.google.firebase.firestore.core.DocumentViewChange$Type: com.google.firebase.firestore.core.DocumentViewChange$Type valueOf(java.lang.String)
com.google.firestore.v1.Write: com.google.protobuf.Parser PARSER
com.mapbox.geojson.ListOfPointCoordinatesTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
com.mapbox.geojson.Feature: com.mapbox.geojson.Geometry geometry
com.mapbox.geojson.GeometryCollection: java.lang.String toString()
com.mapbox.geojson.GeometryCollection$GsonTypeAdapter: GeometryCollection$GsonTypeAdapter(com.google.gson.Gson)
com.mapbox.mapboxsdk.style.layers.CircleLayer: java.lang.Object nativeGetCircleTranslate()
com.mapbox.mapboxsdk.geometry.VisibleRegion: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
androidx.appcompat.widget.ActivityChooserView$InnerLayout
com.google.protobuf.Any: int VALUE_FIELD_NUMBER
com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$FieldType valueOf(java.lang.String)
com.google.firestore.v1.DocumentTransform: int FIELD_TRANSFORMS_FIELD_NUMBER
com.google.gson.JsonPrimitive: boolean isIntegral(com.google.gson.JsonPrimitive)
com.mapbox.mapboxsdk.geometry.LatLngQuad: com.mapbox.mapboxsdk.geometry.LatLng bottomLeft
androidx.appcompat.widget.Toolbar: int getPopupTheme()
com.mapbox.android.telemetry.LocationEvent: LocationEvent(android.os.Parcel)
com.google.android.gms.internal.firebase-auth-api.zzev: int zze
com.google.firestore.v1.StructuredQuery: com.google.firestore.v1.StructuredQuery DEFAULT_INSTANCE
com.google.firestore.v1.StructuredQuery$Projection: int FIELDS_FIELD_NUMBER
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: void nativeSetLocationTransition(long,long)
com.google.android.gms.internal.measurement.zzcd$zzg: long zzal
com.google.gson.JsonArray: void add(com.google.gson.JsonElement)
com.google.firestore.v1.StructuredQuery$CompositeFilter
com.google.android.gms.internal.measurement.zzbv$zza: com.google.android.gms.internal.measurement.zzjs zzj
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.media.AudioAttributesImplApi21Parcelizer
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzac
com.google.android.gms.safetynet.zzf: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeResetZoom()
androidx.appcompat.widget.SearchView: int getInputType()
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(java.lang.Class)
com.mapbox.mapboxsdk.style.layers.HillshadeLayer: void nativeSetHillshadeExaggerationTransition(long,long)
com.google.gson.typeadapters.RuntimeTypeAdapterFactory: com.google.gson.typeadapters.RuntimeTypeAdapterFactory of(java.lang.Class,java.lang.String)
com.google.protobuf.Any: int TYPE_URL_FIELD_NUMBER
com.mapbox.mapboxsdk.maps.NativeMapView: void onStyleImageMissing(java.lang.String)
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: java.lang.String operatingSystem
com.mapbox.mapboxsdk.module.telemetry.PhoneState: PhoneState()
com.google.gson.JsonPrimitive: boolean equals(java.lang.Object)
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: java.lang.String getSdkVersion()
com.google.android.gms.internal.firebase-auth-api.zzem
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeAddLayerAt(long,int)
com.mapbox.mapboxsdk.maps.MapView: android.view.View getRenderView()
androidx.appcompat.widget.AppCompatAutoCompleteTextView
com.google.firestore.v1.TargetChange: com.google.protobuf.ByteString resumeToken_
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver: AlarmManagerSchedulerBroadcastReceiver()
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: void setNumberOfTilesCompleted(long)
com.mapbox.geojson.ListOfDoublesCoordinatesTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionStatusCallback
com.mapbox.android.telemetry.VisionObjectDetectionEvent: android.os.Parcelable$Creator CREATOR
io.flutter.view.AccessibilityViewEmbedder: io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors
com.mapbox.mapboxsdk.style.layers.CircleLayer: java.lang.Object nativeGetCircleStrokeOpacity()
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetTextHaloBlurTransition()
com.google.firestore.v1.CommitRequest: java.lang.String database_
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mExpiredEventName
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: void nativeAddLayerAt(long,int)
com.mapbox.android.telemetry.LocationEvent
com.mapbox.mapboxsdk.style.layers.BackgroundLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetBackgroundOpacityTransition()
com.mapbox.mapboxsdk.style.sources.ImageSource: void nativeSetCoordinates(com.mapbox.mapboxsdk.geometry.LatLngQuad)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextHaloWidth()
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
com.mapbox.mapboxsdk.annotations.Marker: com.mapbox.mapboxsdk.geometry.LatLng position
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: void setStyleURL(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzxe: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
io.flutter.app.FlutterApplication: FlutterApplication()
com.mapbox.mapboxsdk.style.layers.BackgroundLayer: java.lang.Object nativeGetBackgroundOpacity()
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextLetterSpacing()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconOpacity()
com.google.gson.JsonElement: double getAsDouble()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertSettings(android.webkit.WebSettings)
com.mapbox.geojson.Polygon: com.google.gson.TypeAdapter typeAdapter(com.google.gson.Gson)
io.flutter.embedding.engine.FlutterJNI: java.util.Set flutterUiDisplayListeners
com.mapbox.mapboxsdk.style.types.FormattedSection
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: void nativeSetFillExtrusionColorTransition(long,long)
com.mapbox.mapboxsdk.style.sources.CustomGeometrySource: void nativeInvalidateTile(int,int,int)
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
com.google.android.gms.internal.firebase-auth-api.zzlk: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.Target$DocumentsTarget
com.google.firebase.firestore.core.ViewSnapshot$SyncState: com.google.firebase.firestore.core.ViewSnapshot$SyncState[] values()
com.google.android.gms.internal.measurement.zzcd$zze
com.mapbox.mapboxsdk.maps.MapView
com.google.firestore.v1.DocumentDelete: int DOCUMENT_FIELD_NUMBER
com.mapbox.mapboxsdk.Mapbox: android.content.Context getApplicationContext()
com.mapbox.android.telemetry.AppUserTurnstile: void checkApplicationContext()
com.mapbox.geojson.BoundingBox: com.mapbox.geojson.BoundingBox fromCoordinates(double,double,double,double)
com.google.android.gms.internal.measurement.zzcd$zza: com.google.android.gms.internal.measurement.zzjs zzi
com.google.firebase.iid.FirebaseInstanceId: com.google.firebase.iid.FirebaseInstanceId getInstance(com.google.firebase.FirebaseApp)
com.google.firebase.auth.PlayGamesAuthCredential: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.log.Logger: void d(java.lang.String,java.lang.String)
com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: void onPerformanceEvent(android.os.Bundle)
com.google.firestore.v1.DocumentRemove: int DOCUMENT_FIELD_NUMBER
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent$PerformanceAttribute: int hashCode()
com.google.firestore.v1.StructuredQuery: com.google.protobuf.Int32Value limit_
io.flutter.embedding.engine.FlutterJNI: java.lang.Long nativePlatformViewId
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: FlutterFirebaseCoreRegistrar()
com.google.android.gms.internal.measurement.zzcd$zzg: long zzj
com.google.protobuf.FieldType$Collection: com.google.protobuf.FieldType$Collection valueOf(java.lang.String)
org.chromium.support_lib_boundary.VisualStateCallbackBoundaryInterface: void onComplete(long)
com.google.android.gms.internal.firebase-auth-api.zzhg: int zze
com.google.gson.reflect.TypeToken: java.lang.Class getRawType()
com.google.android.gms.internal.measurement.zzcd$zzk
com.mapbox.mapboxsdk.style.layers.HillshadeLayer: void nativeSetHillshadeHighlightColorTransition(long,long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
com.google.firestore.v1.StructuredQuery$CollectionSelector
androidx.lifecycle.FullLifecycleObserverAdapter
com.google.firestore.v1.Precondition: int EXISTS_FIELD_NUMBER
com.mapbox.geojson.Feature: java.lang.Number getNumberProperty(java.lang.String)
com.google.firestore.v1.ListenResponse: com.google.firestore.v1.ListenResponse DEFAULT_INSTANCE
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: java.lang.Double minZoom
com.google.android.gms.internal.firebase-auth-api.zzep: com.google.android.gms.internal.firebase-auth-api.zzev zzb
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Parcelable$Creator CREATOR
com.mapbox.geojson.Point: com.mapbox.geojson.Point fromLngLat(double,double,com.mapbox.geojson.BoundingBox)
com.google.firestore.v1.DocumentRemove: int removedTargetIdsMemoizedSerializedSize
com.google.firestore.v1.BatchGetDocumentsResponse: com.google.protobuf.ByteString transaction_
androidx.media.AudioAttributesImplBase: AudioAttributesImplBase()
io.grpc.internal.ClientStreamListener$RpcProgress: io.grpc.internal.ClientStreamListener$RpcProgress valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageEmptyResponseCallback(int)
com.google.android.gms.maps.model.CircleOptions: android.os.Parcelable$Creator CREATOR
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface
com.mapbox.mapboxsdk.style.types.FormattedSection: int hashCode()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void isDataCollectionEnabled(com.google.android.gms.internal.measurement.zzw)
com.google.android.gms.internal.firebase-auth-api.zzhw: com.google.android.gms.internal.firebase-auth-api.zzhw zzi
com.google.android.exoplayer2.metadata.id3.ChapterFrame: android.os.Parcelable$Creator CREATOR
com.mapbox.geojson.MultiLineString: com.mapbox.geojson.MultiLineString fromJson(java.lang.String)
com.mapbox.mapboxsdk.module.telemetry.PhoneState: java.lang.String getCarrier()
com.google.firebase.firestore.proto.NoDocument: com.google.firebase.firestore.proto.NoDocument DEFAULT_INSTANCE
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: void onDidFinishLoadingStyle()
com.mapbox.android.telemetry.VisionObjectDetectionEvent: void setObjectPositionHeight(double)
android.support.v4.media.AudioAttributesImplApi26Parcelizer: androidx.media.AudioAttributesImplApi26 read(androidx.versionedparcelable.VersionedParcel)
com.google.gson.TypeAdapter: TypeAdapter()
com.mapbox.geojson.Polygon: com.mapbox.geojson.Polygon fromOuterInner(com.mapbox.geojson.LineString,java.util.List)
com.google.firestore.v1.ArrayValue: com.google.protobuf.Parser PARSER
com.mapbox.mapboxsdk.log.Logger: void log(int,java.lang.String,java.lang.String)
com.mapbox.geojson.LineString: com.mapbox.geojson.LineString fromLngLats(java.util.List,com.mapbox.geojson.BoundingBox)
com.google.firebase.firestore.util.AsyncQueue$TimerId: com.google.firebase.firestore.util.AsyncQueue$TimerId[] values()
com.google.gson.JsonArray: java.lang.String getAsString()
com.mapbox.android.accounts.v1.MapboxAccounts: java.lang.String SKU_ID_NAVIGATION_TRIPS
com.google.firestore.v1.DocumentRemove: java.lang.String document_
com.google.gson.reflect.TypeToken: TypeToken()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
androidx.media.AudioAttributesImplApi26
com.google.firestore.v1.BatchGetDocumentsResponse: int READ_TIME_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zzeg: com.google.android.gms.internal.firebase-auth-api.zzeg zzf
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: void nativeStart()
com.mapbox.mapboxsdk.style.layers.RasterLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetRasterHueRotateTransition()
com.google.firebase.ktx.FirebaseCommonKtxRegistrar
com.mapbox.geojson.shifter.CoordinateShifterManager$1
com.google.firebase.firestore.DocumentSnapshot$ServerTimestampBehavior: com.google.firebase.firestore.DocumentSnapshot$ServerTimestampBehavior[] values()
com.google.firestore.v1.StructuredQuery$Projection: com.google.protobuf.Internal$ProtobufList fields_
com.google.android.gms.internal.measurement.zzbv$zzf: com.google.android.gms.internal.measurement.zzig zzg
io.grpc.okhttp.OkHttpChannelBuilder: io.grpc.okhttp.OkHttpChannelBuilder sslSocketFactory(javax.net.ssl.SSLSocketFactory)
com.google.android.gms.internal.firebase-auth-api.zzhg
com.mapbox.android.telemetry.VisionObjectDetectionEvent: void writeToParcel(android.os.Parcel,int)
com.mapbox.geojson.MultiLineString$GsonTypeAdapter: com.mapbox.geojson.CoordinateContainer createCoordinateContainer(java.lang.String,com.mapbox.geojson.BoundingBox,java.util.List)
com.mapbox.mapboxsdk.maps.NativeMapView: com.mapbox.mapboxsdk.camera.CameraPosition nativeGetCameraForGeometry(com.mapbox.geojson.Geometry,double,double,double,double,double,double)
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.google.firebase.auth.internal.zzz: android.os.Parcelable$Creator CREATOR
io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType: io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType[] values()
io.grpc.SecurityLevel: io.grpc.SecurityLevel valueOf(java.lang.String)
com.mapbox.geojson.MultiPolygon: java.lang.String type()
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
com.google.android.gms.internal.location.zzad: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.style.layers.CircleLayer: java.lang.Object nativeGetCircleRadius()
com.google.gson.JsonArray: void add(java.lang.Number)
com.mapbox.geojson.MultiLineString: com.mapbox.geojson.MultiLineString fromLngLats(double[][][])
androidx.media.AudioAttributesImplApi26: AudioAttributesImplApi26()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
com.mapbox.mapboxsdk.Mapbox: com.mapbox.mapboxsdk.Mapbox INSTANCE
com.google.android.gms.internal.firebase-auth-api.zzli: android.os.Parcelable$Creator CREATOR
com.google.firebase.firestore.FirebaseFirestore: void setClientLanguage(java.lang.String)
com.mapbox.mapboxsdk.maps.NativeMapView: void onDidFinishRenderingMap(boolean)
com.google.android.gms.internal.firebase-auth-api.zzis: com.google.android.gms.internal.firebase-auth-api.zzht zze
com.mapbox.mapboxsdk.module.telemetry.MapBaseEvent: java.lang.String getCreated()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextHaloColor()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
com.mapbox.mapboxsdk.maps.Image: java.lang.String name
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceWindowChanged(long,android.view.Surface)
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.platform.PlatformViewsController platformViewsController
com.mapbox.mapboxsdk.style.layers.RasterLayer: java.lang.Object nativeGetRasterOpacity()
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzy
com.google.android.gms.internal.firebase-auth-api.zzim: com.google.android.gms.internal.firebase-auth-api.zzim zze
com.google.android.gms.internal.firebase-auth-api.zzht: com.google.android.gms.internal.firebase-auth-api.zzym zze
com.google.android.gms.internal.firebase-auth-api.zzht
com.mapbox.geojson.Point: com.mapbox.geojson.Point fromLngLat(double,double)
com.google.android.gms.internal.firebase-auth-api.zzfq: int zzb
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.mapbox.mapboxsdk.maps.renderer.MapRendererRunnable: MapRendererRunnable(long)
com.mapbox.mapboxsdk.maps.NativeMapView: long[] nativeQueryShapeAnnotations(android.graphics.RectF)
com.google.android.gms.internal.firebase-auth-api.zzmc: android.os.Parcelable$Creator CREATOR
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: FlutterFirebasePluginRegistry()
io.flutter.embedding.engine.FlutterJNI: void nativeOnVsync(long,long,long)
com.google.firestore.v1.StructuredQuery$FieldReference
com.google.android.gms.internal.firebase-auth-api.zzis: com.google.android.gms.internal.firebase-auth-api.zzis zzf
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: void nativeSetFillExtrusionBaseTransition(long,long)
com.mapbox.android.telemetry.CrashEvent: java.lang.String event
com.google.android.exoplayer2.metadata.scte35.PrivateCommand: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: boolean wifi
com.google.firebase.messaging.FirebaseMessagingRegistrar: FirebaseMessagingRegistrar()
com.google.android.gms.internal.measurement.zzbv$zzb
com.mapbox.geojson.MultiLineString$GsonTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.google.firebase.firestore.proto.WriteBatch: com.google.protobuf.Internal$ProtobufList writes_
androidx.core.graphics.drawable.IconCompatParcelizer
com.google.android.gms.internal.measurement.zzbv$zzc
com.mapbox.mapboxsdk.maps.Image: boolean sdf
com.google.android.gms.internal.measurement.zzbv$zze: boolean zzi
com.mapbox.mapboxsdk.annotations.BubbleLayout: int getBubbleColor()
com.google.android.gms.internal.firebase-auth-api.zzzo: int zzd
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource[] values()
com.google.android.gms.internal.measurement.zzca$zza: boolean zzf
com.google.gson.JsonPrimitive: java.lang.Object value
com.google.android.gms.measurement.AppMeasurementService: AppMeasurementService()
com.mapbox.geojson.ListOfListOfPointCoordinatesTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: java.lang.Object nativeGetAccuracyRadiusColor()
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: long timeElapsed
com.google.firestore.v1.Write
com.mapbox.android.telemetry.CrashEvent: CrashEvent(java.lang.String,java.lang.String)
com.mapbox.android.telemetry.VisionObjectDetectionEvent: void setSignValue(java.lang.String)
com.mapbox.mapboxsdk.maps.NativeMapView: boolean nativeGetDebug()
io.grpc.okhttp.OkHttpChannelBuilder: io.grpc.okhttp.OkHttpChannelBuilder forTarget(java.lang.String)
com.mapbox.geojson.MultiPolygon: java.util.List polygons()
com.google.firebase.firestore.proto.NoDocument: com.google.protobuf.Parser PARSER
com.mapbox.mapboxsdk.maps.widgets.CompassView: android.graphics.drawable.Drawable getCompassImage()
com.google.rpc.Status: com.google.protobuf.Internal$ProtobufList details_
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$702(io.flutter.embedding.android.FlutterSplashView$SavedState,android.os.Bundle)
com.mapbox.mapboxsdk.maps.Image: float[] content
com.google.gson.TypeAdapter: com.google.gson.TypeAdapter nullSafe()
com.mapbox.mapboxsdk.maps.NativeMapView: long[] nativeQueryPointAnnotations(android.graphics.RectF)
com.google.android.gms.internal.measurement.zzcd$zzb: com.google.android.gms.internal.measurement.zzjs zzg
com.mapbox.mapboxsdk.style.sources.Source: void nativeSetVolatile(java.lang.Boolean)
com.mapbox.mapboxsdk.style.light.Light: void nativeSetColor(java.lang.String)
com.mapbox.mapboxsdk.offline.OfflineTilePyramidRegionDefinition: com.mapbox.mapboxsdk.geometry.LatLngBounds bounds
com.google.gson.reflect.TypeToken: int hashCode
io.grpc.Status$Code: io.grpc.Status$Code[] values()
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: void onDidFailLoadingStyle(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onPrepare(android.view.WindowInsetsAnimation)
com.mapbox.mapboxsdk.module.telemetry.PhoneState$Orientation: com.mapbox.mapboxsdk.module.telemetry.PhoneState$Orientation ORIENTATION_PORTRAIT
com.mapbox.mapboxsdk.offline.OfflineManager$MergeOfflineRegionsCallback: void onMerge(com.mapbox.mapboxsdk.offline.OfflineRegion[])
com.google.android.gms.internal.firebase-auth-api.zzey
com.google.android.gms.internal.firebase-auth-api.zzft
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
com.mapbox.geojson.FeatureCollection: java.lang.String TYPE
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] values()
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: void setStyleJson(java.lang.String)
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy[] values()
com.google.android.exoplayer2.decoder.OutputBuffer: void release()
io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error[] values()
com.google.gson.JsonArray: short getAsShort()
com.google.android.gms.internal.measurement.zzcd$zzi: com.google.android.gms.internal.measurement.zzig zzf
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void finalize()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean animating
com.mapbox.geojson.LineString: boolean equals(java.lang.Object)
com.mapbox.geojson.MultiLineString: com.mapbox.geojson.MultiLineString fromLineString(com.mapbox.geojson.LineString,com.mapbox.geojson.BoundingBox)
com.mapbox.mapboxsdk.style.layers.FillLayer: void nativeSetFillPatternTransition(long,long)
com.google.android.gms.internal.firebase-auth-api.zzeg: com.google.android.gms.internal.firebase-auth-api.zzej zze
com.google.android.gms.internal.firebase-auth-api.zzig: int zzb
com.google.gson.JsonPrimitive: boolean isString()
com.google.gson.JsonObject: int size()
com.mapbox.geojson.Feature: com.mapbox.geojson.Feature fromGeometry(com.mapbox.geojson.Geometry,com.google.gson.JsonObject,java.lang.String,com.mapbox.geojson.BoundingBox)
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetTopImageSizeTransition()
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
com.google.protobuf.Timestamp: int SECONDS_FIELD_NUMBER
com.mapbox.geojson.PointAsCoordinatesTypeAdapter: void write(com.google.gson.stream.JsonWriter,com.mapbox.geojson.Point)
com.google.firestore.v1.TransactionOptions$ReadWrite: com.google.firestore.v1.TransactionOptions$ReadWrite DEFAULT_INSTANCE
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.android.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
com.mapbox.mapboxsdk.style.layers.HeatmapLayer: void initialize(java.lang.String,java.lang.String)
com.google.android.gms.internal.measurement.zzcd$zza: int zzd
com.google.android.exoplayer2.decoder.OutputBuffer: long timeUs
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeResetNorth()
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver
com.mapbox.geojson.MultiPoint: com.mapbox.geojson.MultiPoint fromLngLats(double[][])
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextColor()
com.google.android.gms.internal.measurement.zzca$zzb: int zzc
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconTranslateAnchor()
com.mapbox.mapboxsdk.style.types.FormattedSection: void setTextColor(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.firestore.v1.DocumentTransform
com.example.flutter_faem_app.MainActivity
com.mapbox.mapboxsdk.net.NativeConnectivityListener: NativeConnectivityListener(long)
com.mapbox.android.telemetry.AppUserTurnstile: java.lang.String userId
com.mapbox.mapboxsdk.net.NativeConnectivityListener: void initialize()
com.mapbox.geojson.MultiPolygon$GsonTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
com.mapbox.mapboxsdk.annotations.BubbleLayout: float getCornersRadius()
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.google.android.gms.internal.firebase-auth-api.zzls: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.Write: com.google.firestore.v1.DocumentMask updateMask_
com.google.firestore.v1.WriteResult: com.google.protobuf.Internal$ProtobufList transformResults_
com.mapbox.geojson.Polygon: java.lang.String TYPE
io.flutter.embedding.android.FlutterView
com.google.firebase.firestore.proto.UnknownDocument: com.google.protobuf.Timestamp version_
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
com.mapbox.android.telemetry.VisionEvent: java.lang.String VIS_GENERAL
com.mapbox.mapboxsdk.style.layers.LineLayer: void initialize(java.lang.String,java.lang.String)
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: boolean isWifi()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView
com.google.android.gms.location.LocationRequest: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.MapValue: int FIELDS_FIELD_NUMBER
com.google.android.exoplayer2.metadata.id3.ChapterTocFrame: android.os.Parcelable$Creator CREATOR
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onSafeBrowsingHit(android.webkit.WebView,android.webkit.WebResourceRequest,int,java.lang.reflect.InvocationHandler)
com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Listener listeners
com.mapbox.mapboxsdk.storage.FileSource: java.lang.String getAccessToken()
com.mapbox.mapboxsdk.maps.NativeMapView: int nativeGetPrefetchZoomDelta()
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
com.mapbox.android.telemetry.VisionEvent: VisionEvent(android.os.Parcel,com.mapbox.android.telemetry.VisionEvent$1)
com.mapbox.mapboxsdk.style.sources.CustomGeometrySource: void initialize(java.lang.String,java.lang.Object)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetMinPitch(double)
com.google.android.gms.internal.measurement.zzca$zzc
com.google.android.gms.internal.firebase-auth-api.zzes: com.google.android.gms.internal.firebase-auth-api.zzey zze
com.google.gson.JsonElement
com.google.android.gms.internal.measurement.zzcd$zzg: boolean zzx
com.google.android.gms.measurement.AppMeasurement: void logEventInternal(java.lang.String,java.lang.String,android.os.Bundle)
com.mapbox.android.telemetry.VisionObjectDetectionEvent: java.lang.String event
androidx.appcompat.widget.AppCompatEditText
com.google.gson.typeadapters.RuntimeTypeAdapterFactory: java.lang.Class access$200(com.google.gson.typeadapters.RuntimeTypeAdapterFactory)
androidx.media.AudioAttributesImplApi26Parcelizer: void write(androidx.media.AudioAttributesImplApi26,androidx.versionedparcelable.VersionedParcel)
com.google.android.gms.measurement.AppMeasurement: int getMaxUserProperties(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService
io.flutter.plugins.firebasemessaging.FlutterFirebaseMessagingService
com.google.android.gms.internal.firebase-auth-api.zziu: com.google.android.gms.internal.firebase-auth-api.zziu[] values()
com.google.android.gms.internal.firebase-auth-api.zzfw: com.google.android.gms.internal.firebase-auth-api.zzfw zzf
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
com.mapbox.geojson.Feature$GsonTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextOpacity()
com.google.firestore.v1.BatchGetDocumentsResponse: int TRANSACTION_FIELD_NUMBER
com.mapbox.geojson.MultiLineString: com.mapbox.geojson.MultiLineString fromLngLats(java.util.List,com.mapbox.geojson.BoundingBox)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceCreated(android.view.Surface)
com.google.firebase.firestore.proto.Target: int LAST_LISTEN_SEQUENCE_NUMBER_FIELD_NUMBER
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: java.lang.Object nativeGetTopImage()
com.mapbox.mapboxsdk.style.layers.LineLayer: java.lang.Object nativeGetLineRoundLimit()
com.google.android.gms.internal.measurement.zzcd$zzi: com.google.android.gms.internal.measurement.zzcd$zzi zzg
com.mapbox.android.telemetry.VisionObjectDetectionEvent: VisionObjectDetectionEvent(android.os.Parcel)
com.google.firebase.firestore.core.Query$LimitType: com.google.firebase.firestore.core.Query$LimitType[] values()
com.mapbox.geojson.Feature: java.lang.String getStringProperty(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzwg: android.os.Parcelable$Creator CREATOR
com.mapbox.geojson.gson.BoundingBoxTypeAdapter: com.mapbox.geojson.BoundingBox read(com.google.gson.stream.JsonReader)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconRotate()
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: java.nio.ByteBuffer supplementalData
com.google.gson.TypeAdapter: java.lang.String toJson(java.lang.Object)
com.google.protobuf.GeneratedMessageLite$MethodToInvoke: com.google.protobuf.GeneratedMessageLite$MethodToInvoke valueOf(java.lang.String)
com.mapbox.geojson.utils.GeoJsonUtils: double trim(double)
com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionDeleteCallback
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View$OnApplyWindowInsetsListener getInsetsListener()
com.google.gson.JsonArray: java.util.List elements
com.mapbox.geojson.BoundingBox: double east()
com.mapbox.geojson.ListofListofListOfPointCoordinatesTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.util.List)
androidx.lifecycle.ViewModel: ViewModel()
com.google.android.exoplayer2.video.ColorInfo: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.StructuredQuery
com.google.gson.JsonElement: boolean isJsonArray()
com.mapbox.mapboxsdk.style.layers.FillLayer: java.lang.Object nativeGetFillSortKey()
androidx.appcompat.widget.AbsActionBarView: int getAnimatedVisibility()
com.mapbox.android.telemetry.VisionObjectDetectionEvent: java.lang.String created
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
com.google.protobuf.Timestamp: com.google.protobuf.Timestamp DEFAULT_INSTANCE
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetFillExtrusionTranslateTransition()
com.google.firestore.v1.WriteRequest: com.google.protobuf.Internal$ProtobufList writes_
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int)
io.grpc.internal.DnsNameResolver$JdkAddressResolver: io.grpc.internal.DnsNameResolver$JdkAddressResolver[] values()
com.mapbox.geojson.MultiPolygon: MultiPolygon(java.lang.String,com.mapbox.geojson.BoundingBox,java.util.List)
com.google.firestore.v1.MapValue: com.google.protobuf.Parser PARSER
com.mapbox.mapboxsdk.offline.OfflineRegionError
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
com.google.android.gms.internal.firebase-auth-api.zzlq: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzej: com.google.android.gms.internal.firebase-auth-api.zzej zze
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$300(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.firestore.v1.DocumentTransform$FieldTransform: java.lang.Object transformType_
com.mapbox.mapboxsdk.maps.Image: int height
com.google.type.LatLng: com.google.protobuf.Parser PARSER
com.mapbox.geojson.Polygon$GsonTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.google.firestore.v1.Target: java.lang.Object targetType_
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
com.google.firebase.messaging.EnhancedIntentService: EnhancedIntentService()
com.google.android.gms.internal.firebase-auth-api.zzja: int zzb
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.mapbox.mapboxsdk.style.types.Formatted: com.mapbox.mapboxsdk.style.types.FormattedSection[] getFormattedSections()
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeUpdatePolyline(long,com.mapbox.mapboxsdk.annotations.Polyline)
android.support.v4.media.session.PlaybackStateCompat
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
com.mapbox.mapboxsdk.style.layers.CustomLayer: void finalize()
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void onDestroy()
com.mapbox.mapboxsdk.style.layers.CircleLayer: CircleLayer(long)
com.mapbox.android.accounts.v1.MapboxAccounts: java.lang.String SKU_ID_MAPS_MAUS
com.mapbox.mapboxsdk.style.layers.SymbolLayer: void nativeSetTextHaloBlurTransition(long,long)
com.google.firestore.v1.StructuredQuery$Order: com.google.firestore.v1.StructuredQuery$FieldReference field_
androidx.appcompat.widget.FitWindowsFrameLayout
com.google.gson.JsonPrimitive: boolean getAsBoolean()
com.mapbox.mapboxsdk.maps.NativeMapView: android.graphics.PointF nativePixelForLatLng(double,double)
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconIgnorePlacement()
com.mapbox.mapboxsdk.maps.Image: Image(byte[],float,java.lang.String,int,int,boolean)
com.google.android.gms.internal.measurement.zzck$zzc: com.google.android.gms.internal.measurement.zzck$zza zze
com.mapbox.geojson.BoundingBox: double north()
com.google.android.gms.internal.measurement.zzcd$zzi: com.google.android.gms.internal.measurement.zzjs zzh
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: void init(long,int,java.nio.ByteBuffer)
com.mapbox.android.telemetry.AppUserTurnstile: int describeContents()
com.mapbox.android.accounts.v1.MapboxAccounts: java.lang.String obtainNavigationSkuSessionToken()
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
com.google.firebase.firestore.core.UserData$Source: com.google.firebase.firestore.core.UserData$Source valueOf(java.lang.String)
com.mapbox.android.telemetry.AppUserTurnstile: com.mapbox.android.telemetry.Event$Type obtainType()
com.google.firestore.v1.Write: int DELETE_FIELD_NUMBER
com.mapbox.mapboxsdk.style.layers.BackgroundLayer: void nativeSetBackgroundPatternTransition(long,long)
com.google.firestore.v1.DocumentDelete: com.google.protobuf.Timestamp readTime_
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetFillExtrusionPatternTransition()
com.google.firestore.v1.StructuredQuery$Order: int FIELD_FIELD_NUMBER
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite valueOf(java.lang.String)
com.mapbox.mapboxsdk.maps.renderer.MapRendererRunnable: long nativePtr
com.google.android.gms.internal.firebase-auth-api.zzfk: com.google.android.gms.internal.firebase-auth-api.zzfk zzf
com.google.firestore.v1.Value: com.google.firestore.v1.Value DEFAULT_INSTANCE
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void nativeOnSurfaceCreated()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix getFinalMatrix()
com.google.gson.JsonPrimitive: JsonPrimitive(java.lang.Character)
com.mapbox.mapboxsdk.style.layers.FillLayer: void nativeSetFillTranslateTransition(long,long)
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
com.google.gson.JsonObject: void addProperty(java.lang.String,java.lang.String)
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void postMessage(java.lang.reflect.InvocationHandler)
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
com.mapbox.geojson.Polygon: int hashCode()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void updateTexImage()
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] values()
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.firestore.v1.ArrayValue: com.google.firestore.v1.ArrayValue DEFAULT_INSTANCE
com.google.firestore.v1.WriteResponse: com.google.firestore.v1.WriteResponse DEFAULT_INSTANCE
com.google.firestore.v1.Document: java.lang.String name_
com.google.firestore.v1.StructuredQuery$FieldReference: com.google.firestore.v1.StructuredQuery$FieldReference DEFAULT_INSTANCE
com.mapbox.mapboxsdk.style.layers.HillshadeLayer: java.lang.Object nativeGetHillshadeIlluminationDirection()
com.google.android.exoplayer2.metadata.id3.PrivFrame: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.offline.OfflineRegion: void getOfflineRegionStatus(com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionStatusCallback)
com.google.android.gms.measurement.AppMeasurementJobService
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
okhttp3.TlsVersion: okhttp3.TlsVersion valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzs
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConsent(android.os.Bundle,long)
com.google.android.gms.internal.measurement.zzcd$zzc: int zzh
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.GenericArrayType)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceDestroyed()
io.grpc.internal.ManagedChannelImpl$ResolutionState: io.grpc.internal.ManagedChannelImpl$ResolutionState[] values()
com.mapbox.mapboxsdk.module.telemetry.PhoneState
com.mapbox.android.telemetry.Attachment: Attachment(android.os.Parcel)
com.mapbox.geojson.Polygon: java.lang.Object coordinates()
com.google.firestore.v1.StructuredQuery$Direction: com.google.firestore.v1.StructuredQuery$Direction valueOf(java.lang.String)
com.mapbox.android.telemetry.VisionObjectDetectionEvent: double getDistanceFromCamera()
com.google.android.gms.dynamite.descriptors.com.google.firebase.auth.ModuleDescriptor: java.lang.String MODULE_ID
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
com.mapbox.mapboxsdk.maps.MapView: void setMaximumFps(int)
com.mapbox.mapboxsdk.style.layers.BackgroundLayer: BackgroundLayer(long)
com.mapbox.android.telemetry.AppUserTurnstile: java.lang.String OPERATING_SYSTEM
androidx.appcompat.widget.ScrollingTabContainerView
com.mapbox.geojson.Polygon: java.lang.String toJson()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: void nativeSetIconHaloColorTransition(long,long)
com.google.android.gms.internal.measurement.zzcd$zzj: int zzd
com.google.firestore.v1.StructuredQuery$Filter
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertSafeBrowsingResponse(java.lang.Object)
com.google.firestore.v1.Cursor: com.google.protobuf.Parser PARSER
com.mapbox.geojson.utils.PolylineUtils: java.util.List simplify(java.util.List,double,boolean)
com.mapbox.mapboxsdk.module.telemetry.PhoneState: java.lang.String cellularNetworkType
com.mapbox.android.accounts.v1.MapboxAccounts: java.lang.String SKU_ID_VISION_FLEET_MAUS
androidx.activity.ComponentActivity: ComponentActivity()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
com.mapbox.mapboxsdk.style.layers.HillshadeLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetHillshadeShadowColorTransition()
com.mapbox.mapboxsdk.annotations.BubbleLayout: float getStrokeWidth()
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
com.google.firebase.datatransport.TransportRegistrar
com.mapbox.geojson.MultiPolygon: com.mapbox.geojson.MultiPolygon fromPolygon(com.mapbox.geojson.Polygon)
com.mapbox.android.accounts.v1.MapboxAccounts: java.lang.String SKU_ID_VISION_MAUS
com.mapbox.mapboxsdk.offline.OfflineRegionDefinition: boolean getIncludeIdeographs()
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.google.protobuf.Any
com.mapbox.mapboxsdk.storage.FileSource$ResourcesCachePathChangeCallback: void onSuccess(java.lang.String)
com.mapbox.android.telemetry.LocationEvent: double longitude
com.google.firebase.firestore.local.QueryPurpose: com.google.firebase.firestore.local.QueryPurpose[] values()
com.google.firestore.v1.CommitResponse: int WRITE_RESULTS_FIELD_NUMBER
com.mapbox.mapboxsdk.Mapbox: com.mapbox.mapboxsdk.maps.TelemetryDefinition telemetry
io.flutter.embedding.engine.FlutterJNI: void onSurfaceWindowChanged(android.view.Surface)
com.mapbox.mapboxsdk.style.layers.RasterLayer: void nativeSetRasterBrightnessMaxTransition(long,long)
com.mapbox.android.telemetry.VisionEvent: VisionEvent(android.os.Parcel)
com.mapbox.mapboxsdk.style.types.Formatted: boolean equals(java.lang.Object)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivitySaveInstanceState(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzw,long)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface: java.lang.CharSequence getDescription()
io.flutter.embedding.engine.FlutterJNI: boolean getIsSoftwareRenderingEnabled()
com.mapbox.android.telemetry.VisionObjectDetectionEvent: void setVehicleLongitude(double)
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void onResume()
com.mapbox.mapboxsdk.maps.NativeMapView: void onSourceChanged(java.lang.String)
androidx.appcompat.widget.SearchView: int getMaxWidth()
com.google.firebase.messaging.RemoteMessage: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzck$zzc: com.google.android.gms.internal.measurement.zzig zzd
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.reflect.InvocationHandler[] getPorts()
com.google.firestore.v1.DocumentChange: int targetIdsMemoizedSerializedSize
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite[] values()
com.mapbox.geojson.BaseGeometryTypeAdapter: com.google.gson.Gson gson
com.google.firestore.v1.Precondition: int conditionTypeCase_
io.flutter.plugin.platform.SingleViewPresentation: int viewId
com.google.android.exoplayer2.metadata.id3.CommentFrame: android.os.Parcelable$Creator CREATOR
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
com.google.firebase.firestore.proto.Target
com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken get(java.lang.reflect.Type)
com.mapbox.mapboxsdk.style.layers.Layer: void nativeSetSourceLayer(java.lang.String)
com.google.android.gms.internal.measurement.zzck$zzb: int zzc
com.google.gson.JsonArray: java.math.BigDecimal getAsBigDecimal()
com.mapbox.android.telemetry.VisionEvent: void writeToParcel(android.os.Parcel,int)
com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionObserver
com.google.firestore.v1.StructuredQuery: int LIMIT_FIELD_NUMBER
com.google.android.exoplayer2.decoder.Buffer: Buffer()
com.mapbox.mapboxsdk.log.Logger: void e(java.lang.String,java.lang.String)
com.mapbox.mapboxsdk.maps.MapView: android.graphics.Bitmap getViewContent()
com.google.android.gms.internal.measurement.zzbv$zze: java.lang.String zze
com.mapbox.android.telemetry.Attachment: java.util.List attachments
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent
com.google.firestore.v1.DocumentRemove: com.google.protobuf.Parser PARSER
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextOptional()
io.flutter.embedding.engine.FlutterJNI: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: java.lang.String EVENT_NAME
com.google.android.gms.common.api.Scope: android.os.Parcelable$Creator CREATOR
androidx.appcompat.app.AlertController$RecycleListView
com.google.gson.TypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformViewFactory viewFactory
com.google.firebase.ktx.FirebaseCommonKtxRegistrar: FirebaseCommonKtxRegistrar()
com.google.android.gms.internal.measurement.zzcd$zzk: java.lang.String zze
com.mapbox.mapboxsdk.style.layers.Layer: java.lang.Object nativeGetVisibility()
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry: android.os.Parcelable$Creator CREATOR
com.mapbox.android.telemetry.LocationEvent: java.lang.String SOURCE_MAPBOX
com.mapbox.mapboxsdk.maps.NativeMapView: void onSnapshotReady(android.graphics.Bitmap)
com.google.android.gms.internal.measurement.zzcd$zzg: int zzd
com.google.firestore.v1.StructuredQuery$FieldFilter: int VALUE_FIELD_NUMBER
io.grpc.internal.KeepAliveManager$State: io.grpc.internal.KeepAliveManager$State[] values()
com.google.firestore.v1.BatchGetDocumentsResponse: java.lang.Object result_
com.google.firebase.datatransport.TransportRegistrar: com.google.android.datatransport.TransportFactory lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
com.google.android.gms.cloudmessaging.zza: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.Target: int targetTypeCase_
com.mapbox.android.accounts.v1.MapboxAccounts
io.flutter.view.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
com.mapbox.geojson.MultiLineString: com.mapbox.geojson.MultiLineString fromLineStrings(java.util.List,com.mapbox.geojson.BoundingBox)
com.google.android.gms.internal.firebase-auth-api.zznq: android.os.Parcelable$Creator CREATOR
com.mapbox.android.telemetry.AppUserTurnstile: java.lang.String APPLICATION_CONTEXT_CANT_BE_NULL
com.mapbox.geojson.Polygon: com.mapbox.geojson.Polygon fromLngLats(double[][][])
com.google.android.gms.internal.firebase-auth-api.zzgt
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.google.firestore.v1.Write$OperationCase: com.google.firestore.v1.Write$OperationCase valueOf(java.lang.String)
com.google.firestore.v1.ExistenceFilter: int TARGET_ID_FIELD_NUMBER
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
com.mapbox.android.telemetry.LocationEvent: com.mapbox.android.telemetry.Event$Type obtainType()
com.mapbox.geojson.Point$GsonTypeAdapter: com.mapbox.geojson.CoordinateContainer createCoordinateContainer(java.lang.String,com.mapbox.geojson.BoundingBox,java.lang.Object)
com.dexterous.flutterlocalnotifications.SoundSource: com.dexterous.flutterlocalnotifications.SoundSource[] values()
com.google.android.gms.internal.firebase-auth-api.zzmg: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzfq: com.google.android.gms.internal.firebase-auth-api.zzfq zzf
com.mapbox.mapboxsdk.maps.NativeMapView: double nativeGetMetersPerPixelAtLatitude(double,double)
com.google.rpc.Status: int DETAILS_FIELD_NUMBER
com.mapbox.mapboxsdk.maps.Image: int width
com.mapbox.mapboxsdk.maps.NativeMapView: com.mapbox.mapboxsdk.geometry.ProjectedMeters nativeProjectedMetersForLatLng(double,double)
com.mapbox.mapboxsdk.geometry.LatLngBounds
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType[] values()
com.mapbox.mapboxsdk.style.layers.LineLayer: java.lang.Object nativeGetLineWidth()
com.google.android.gms.internal.measurement.zzck$zzd: java.lang.String zze
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void setWebMessageCallback(java.lang.reflect.InvocationHandler,android.os.Handler)
com.mapbox.geojson.GeoJson: com.mapbox.geojson.BoundingBox bbox()
com.google.firebase.iid.FirebaseInstanceIdReceiver
com.mapbox.geojson.LineString: java.lang.String TYPE
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface surface
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
io.flutter.plugin.platform.SingleViewPresentation: android.view.View$OnFocusChangeListener focusChangeListener
com.google.firebase.auth.internal.RecaptchaActivity
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture)
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)
com.google.android.gms.measurement.internal.zzku: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzed: com.google.android.gms.internal.firebase-auth-api.zzym zze
com.mapbox.geojson.Feature$GsonTypeAdapter: com.google.gson.TypeAdapter boundingBoxTypeAdapter
com.google.firestore.v1.WriteRequest: com.google.protobuf.ByteString streamToken_
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: float accessibilityFontScale
com.mapbox.geojson.GeometryCollection: com.mapbox.geojson.BoundingBox bbox
com.google.firestore.v1.StructuredQuery$CollectionSelector: int ALL_DESCENDANTS_FIELD_NUMBER
com.mapbox.geojson.utils.PolylineUtils: java.lang.String encode(java.util.List,int)
io.flutter.embedding.engine.FlutterJNI: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
com.dexterous.flutterlocalnotifications.BitmapSource: com.dexterous.flutterlocalnotifications.BitmapSource valueOf(java.lang.String)
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: void finalize()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$100(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.mapbox.geojson.GeometryAdapterFactory: com.google.gson.TypeAdapterFactory geometryTypeFactory
com.mapbox.mapboxsdk.maps.renderer.MapRendererScheduler: void requestRender()
com.mapbox.mapboxsdk.offline.OfflineTilePyramidRegionDefinition: java.lang.String styleURL
com.google.firestore.v1.DocumentRemove: com.google.firestore.v1.DocumentRemove DEFAULT_INSTANCE
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreRegistrar: FlutterFirebaseFirestoreRegistrar()
com.mapbox.android.telemetry.Event$Type: com.mapbox.android.telemetry.Event$Type valueOf(java.lang.String)
com.mapbox.mapboxsdk.module.telemetry.PhoneState: float getAccessibilityFontScale()
com.google.android.gms.internal.firebase-auth-api.zznc: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.mapbox.geojson.Feature: void addNumberProperty(java.lang.String,java.lang.Number)
com.google.firestore.v1.TransactionOptions: com.google.protobuf.Parser PARSER
com.google.android.gms.internal.measurement.zzcd$zzg: int zzah
com.mapbox.mapboxsdk.offline.OfflineRegionStatus
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate)
com.mapbox.mapboxsdk.http.NativeHttpRequest: void executeLocalRequest(java.lang.String)
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: float getAccessibilityFontScale()
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: java.lang.Object nativeGetFillExtrusionOpacity()
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzfk: com.google.android.gms.internal.firebase-auth-api.zzym zze
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void remove()
com.mapbox.geojson.MultiLineString: java.lang.String TYPE
com.mapbox.geojson.Polygon$GsonTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
com.google.android.gms.internal.measurement.zzck$zzd: double zzh
com.mapbox.geojson.Feature: com.google.gson.JsonObject properties()
com.google.type.LatLng: int LATITUDE_FIELD_NUMBER
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void onStop()
com.mapbox.mapboxsdk.style.layers.Layer: float nativeGetMaxZoom()
com.mapbox.mapboxsdk.style.layers.BackgroundLayer: void finalize()
com.mapbox.mapboxsdk.offline.OfflineManager$MergeOfflineRegionsCallback: void onError(java.lang.String)
com.mapbox.mapboxsdk.style.types.FormattedSection: FormattedSection(java.lang.String,java.lang.Number)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextPadding()
androidx.appcompat.widget.Toolbar: void setTitle(int)
com.google.android.gms.internal.measurement.zzcd$zzg: long zzas
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushTransform(float[])
com.mapbox.mapboxsdk.Mapbox: java.lang.String accessToken
com.mapbox.geojson.MultiPoint$GsonTypeAdapter
com.google.android.gms.internal.measurement.zzcd$zzg: int zzao
com.mapbox.geojson.MultiPoint: java.lang.String toJson()
com.google.android.gms.common.api.GoogleApiActivity: GoogleApiActivity()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo convertToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View)
com.google.protobuf.FieldType: com.google.protobuf.FieldType valueOf(java.lang.String)
com.mapbox.mapboxsdk.style.sources.ImageSource: ImageSource(long)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.firestore.v1.CommitResponse
com.google.firestore.v1.StructuredQuery$Filter: int FIELD_FILTER_FIELD_NUMBER
com.mapbox.geojson.shifter.CoordinateShifterManager: com.mapbox.geojson.shifter.CoordinateShifter coordinateShifter
com.mapbox.geojson.utils.GeoJsonUtils: long MAX_DOUBLE_TO_ROUND
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetPrefetchTiles(boolean)
com.google.gson.JsonPrimitive: boolean isNumber()
com.google.gson.JsonPrimitive: java.lang.Number getAsNumber()
com.mapbox.mapboxsdk.style.sources.CustomGeometrySource: void startThreads()
com.google.firestore.v1.CommitResponse: com.google.protobuf.Parser PARSER
com.mapbox.mapboxsdk.style.light.Light: java.lang.String nativeGetColor()
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: int width
com.google.gson.TypeAdapter: java.lang.Object fromJson(java.lang.String)
com.mapbox.mapboxsdk.style.sources.RasterDemSource: void finalize()
com.mapbox.geojson.FeatureCollection$GsonTypeAdapter
com.mapbox.geojson.LineString: int hashCode()
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: java.lang.String getCarrier()
com.google.android.gms.internal.measurement.zzcd$zzf: com.google.android.gms.internal.measurement.zzig zzc
androidx.appcompat.widget.AppCompatTextView
android.support.v4.media.AudioAttributesCompatParcelizer
com.mapbox.mapboxsdk.style.layers.HeatmapLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetHeatmapRadiusTransition()
com.google.firestore.v1.DocumentChange: com.google.firestore.v1.DocumentChange DEFAULT_INSTANCE
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
com.google.firestore.v1.ListenRequest: java.lang.Object targetChange_
com.google.android.gms.internal.firebase-auth-api.zzis: java.lang.String zzb
com.google.firestore.v1.BatchGetDocumentsRequest: int DOCUMENTS_FIELD_NUMBER
com.mapbox.mapboxsdk.style.layers.CircleLayer: java.lang.Object nativeGetCircleOpacity()
com.mapbox.geojson.MultiLineString$GsonTypeAdapter: void write(com.google.gson.stream.JsonWriter,com.mapbox.geojson.MultiLineString)
com.mapbox.mapboxsdk.style.sources.RasterDemSource: RasterDemSource(long)
com.google.android.gms.internal.measurement.zzcd$zzg: long zzu
com.google.android.gms.internal.measurement.zzcd$zzg: int zzaa
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
com.google.firestore.v1.StructuredQuery$FieldReference: com.google.protobuf.Parser PARSER
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeTakeSnapshot()
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConditionalUserProperty(android.os.Bundle,long)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setBlockNetworkLoads(boolean)
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent$2: com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent this$0
org.chromium.support_lib_boundary.WebMessageCallbackBoundaryInterface
com.mapbox.mapboxsdk.style.light.Position
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: java.lang.String getOrientation()
com.google.android.gms.internal.firebase-auth-api.zzed: com.google.android.gms.internal.firebase-auth-api.zzed zzg
com.google.android.gms.internal.measurement.zzcd$zzg: long zzk
com.mapbox.mapboxsdk.style.sources.Source: java.lang.Integer nativeGetPrefetchZoomDelta()
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthRegistrar: java.util.List getComponents()
com.google.firestore.v1.TransactionOptions$ReadWrite: com.google.protobuf.Parser PARSER
com.google.gson.JsonPrimitive: java.math.BigDecimal getAsBigDecimal()
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface
com.mapbox.geojson.BoundingBox: com.mapbox.geojson.Point northeast()
com.mapbox.mapboxsdk.style.light.Position: float radialCoordinate
com.google.android.gms.internal.firebase-auth-api.zzfe: com.google.android.gms.internal.firebase-auth-api.zzfe zzf
com.mapbox.geojson.BoundingBox: int hashCode()
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void close()
com.mapbox.geojson.GeometryCollection$GsonTypeAdapter: com.google.gson.TypeAdapter stringTypeAdapter
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: void nativeSetFillExtrusionOpacityTransition(long,long)
com.mapbox.mapboxsdk.offline.OfflineRegion: void invalidateOfflineRegion(com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionInvalidateCallback)
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: void onStyleImageMissing(java.lang.String)
com.mapbox.mapboxsdk.style.layers.LineLayer: java.lang.Object nativeGetLineMiterLimit()
com.google.android.gms.internal.measurement.zzcd$zzd: com.google.android.gms.internal.measurement.zzjs zzg
io.flutter.embedding.engine.FlutterJNI: void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin)
com.google.firestore.v1.ListenResponse: int responseTypeCase_
com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionObserver: void onError(com.mapbox.mapboxsdk.offline.OfflineRegionError)
io.grpc.Status$Code: io.grpc.Status$Code valueOf(java.lang.String)
com.mapbox.mapboxsdk.http.NativeHttpRequest: void handleFailure(int,java.lang.String)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
com.google.android.gms.internal.measurement.zzca$zza: com.google.android.gms.internal.measurement.zzjs zzi
com.mapbox.mapboxsdk.maps.NativeMapView: void onDidFinishRenderingFrame(boolean)
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.FlutterJNI: void nativeNotifyLowMemoryWarning(long)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
com.mapbox.geojson.FeatureCollection$GsonTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
com.google.android.gms.internal.firebase-auth-api.zzfz: com.google.android.gms.internal.firebase-auth-api.zzfz zzb
com.mapbox.mapboxsdk.style.layers.RasterLayer: void nativeSetRasterBrightnessMinTransition(long,long)
io.flutter.view.FlutterCallbackInformation: io.flutter.view.FlutterCallbackInformation lookupCallbackInformation(long)
com.google.gson.JsonArray: long getAsLong()
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionObserver: void mapboxTileCountLimitExceeded(long)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$500(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.android.gms.internal.firebase-auth-api.zzhd: int zzb
com.google.firestore.v1.ListenRequest: com.google.protobuf.MapFieldLite labels_
io.grpc.Context$DirectExecutor: io.grpc.Context$DirectExecutor[] values()
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void backToSafety(boolean)
com.google.common.util.concurrent.DirectExecutor: com.google.common.util.concurrent.DirectExecutor[] values()
com.mapbox.mapboxsdk.offline.OfflineManager$ListOfflineRegionsCallback
androidx.appcompat.widget.SearchView
com.mapbox.mapboxsdk.style.layers.LineLayer: void nativeSetLineColorTransition(long,long)
com.google.android.gms.internal.measurement.zzbv$zzb: boolean zzg
com.google.android.gms.maps.model.MarkerOptions: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.module.telemetry.PhoneState: void setOrientation(com.mapbox.mapboxsdk.module.telemetry.PhoneState$Orientation)
com.google.android.gms.internal.measurement.zzbv$zze: boolean zzh
com.mapbox.android.telemetry.LocationEvent: java.lang.String operatingSystem
io.grpc.MethodDescriptor$MethodType: io.grpc.MethodDescriptor$MethodType[] values()
com.mapbox.geojson.Feature: java.lang.String toString()
com.mapbox.mapboxsdk.text.LocalGlyphRasterizer: LocalGlyphRasterizer()
com.google.firebase.firestore.DocumentChange$Type: com.google.firebase.firestore.DocumentChange$Type valueOf(java.lang.String)
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void onPause()
com.google.firestore.v1.ExistenceFilter
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction[] values()
io.flutter.plugins.GeneratedPluginRegistrant: GeneratedPluginRegistrant()
com.mapbox.geojson.Point: java.lang.Object coordinates()
com.mapbox.geojson.shifter.CoordinateShifterManager: com.mapbox.geojson.shifter.CoordinateShifter DEFAULT
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetPrefetchZoomDelta(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath
com.mapbox.mapboxsdk.module.telemetry.PhoneState: int getBatteryLevel()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
com.google.firebase.firestore.proto.MaybeDocument: int HAS_COMMITTED_MUTATIONS_FIELD_NUMBER
com.mapbox.geojson.utils.PolylineUtils: void encode(long,java.lang.StringBuilder)
com.google.android.gms.internal.measurement.zzck$zzd: long zzg
com.google.firestore.v1.CommitRequest: int WRITES_FIELD_NUMBER
com.google.gson.JsonElement: com.google.gson.JsonNull getAsJsonNull()
com.google.firebase.firestore.proto.Target: com.google.protobuf.Timestamp snapshotVersion_
com.google.android.gms.internal.firebase-auth-api.zzes: com.google.android.gms.internal.firebase-auth-api.zzym zzf
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: java.lang.Object nativeGetFillExtrusionBase()
com.mapbox.geojson.GeometryCollection$GsonTypeAdapter: com.mapbox.geojson.GeometryCollection read(com.google.gson.stream.JsonReader)
com.mapbox.geojson.BoundingBox
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.storage.FileSource: void setAccessToken(java.lang.String)
androidx.appcompat.widget.FitWindowsLinearLayout
com.mapbox.mapboxsdk.style.layers.LineLayer: void nativeSetLineDasharrayTransition(long,long)
com.mapbox.geojson.Point$GsonTypeAdapter: void write(com.google.gson.stream.JsonWriter,com.mapbox.geojson.Point)
com.mapbox.geojson.Feature: com.mapbox.geojson.BoundingBox bbox
com.mapbox.geojson.CoordinateContainer
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackClassName
com.google.firebase.auth.internal.GenericIdpActivity
com.mapbox.mapboxsdk.net.NativeConnectivityListener: void finalize()
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
io.flutter.embedding.engine.FlutterJNI: void requestDartDeferredLibrary(int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View view
com.mapbox.geojson.BoundingBox: com.mapbox.geojson.BoundingBox fromPoints(com.mapbox.geojson.Point,com.mapbox.geojson.Point)
com.mapbox.geojson.MultiPoint: com.mapbox.geojson.BoundingBox bbox()
com.mapbox.mapboxsdk.log.Logger
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: java.lang.String carrier
com.mapbox.mapboxsdk.module.telemetry.PhoneState: com.mapbox.mapboxsdk.module.telemetry.PhoneState$Orientation orientation
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthRegistrar: FlutterFirebaseAuthRegistrar()
com.mapbox.mapboxsdk.camera.CameraPosition: android.os.Parcelable$Creator CREATOR
io.flutter.view.FlutterView$ZeroSides: io.flutter.view.FlutterView$ZeroSides[] values()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getAllowContentAccess()
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values()
com.mapbox.geojson.Feature: com.mapbox.geojson.Feature fromGeometry(com.mapbox.geojson.Geometry,com.google.gson.JsonObject)
com.mapbox.android.telemetry.VisionObjectDetectionEvent: java.lang.String getCreated()
com.google.gson.TypeAdapter: com.google.gson.JsonElement toJsonTree(java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
com.google.firestore.v1.StructuredQuery$Filter: int filterTypeCase_
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: void setState(int)
com.google.firebase.auth.zze: android.os.Parcelable$Creator CREATOR
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconKeepUpright()
com.mapbox.mapboxsdk.style.layers.LineLayer: void nativeSetLineBlurTransition(long,long)
androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)
com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)
io.flutter.plugins.firebasemessaging.FlutterFirebaseAppRegistrar
com.google.gson.reflect.TypeToken: java.lang.reflect.Type getType()
com.google.firestore.v1.ArrayValue: com.google.protobuf.Internal$ProtobufList values_
com.mapbox.mapboxsdk.style.sources.GeoJsonSource: void nativeSetGeometry(com.mapbox.geojson.Geometry)
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.google.firestore.v1.Target: com.google.protobuf.Parser PARSER
com.google.firestore.v1.TransactionOptions$ReadOnly: int READ_TIME_FIELD_NUMBER
android.support.v4.media.RatingCompat
com.mapbox.mapboxsdk.style.layers.LineLayer: java.lang.Object nativeGetLineOffset()
android.support.v4.graphics.drawable.IconCompatParcelizer
com.google.android.gms.internal.firebase-auth-api.zzix: com.google.android.gms.internal.firebase-auth-api.zzzt zze
com.google.android.gms.internal.measurement.zzcd$zze: long zzf
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
io.flutter.embedding.engine.FlutterJNI: void nativeRunBundleAndSnapshotFromLibrary(long,java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager)
com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken getArray(java.lang.reflect.Type)
com.mapbox.mapboxsdk.geometry.LatLngQuad: LatLngQuad(com.mapbox.mapboxsdk.geometry.LatLng,com.mapbox.mapboxsdk.geometry.LatLng,com.mapbox.mapboxsdk.geometry.LatLng,com.mapbox.mapboxsdk.geometry.LatLng)
androidx.appcompat.widget.SearchView: void setImeOptions(int)
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
com.google.firestore.v1.StructuredQuery$Projection
com.google.firestore.v1.TransactionOptions$ReadOnly: com.google.protobuf.Parser PARSER
com.google.firestore.v1.StructuredQuery: int FROM_FIELD_NUMBER
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextRadialOffset()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
com.google.android.gms.common.api.Status: android.os.Parcelable$Creator CREATOR
com.google.firebase.auth.internal.zzx: android.os.Parcelable$Creator CREATOR
com.mapbox.geojson.ListOfPointCoordinatesTypeAdapter
com.mapbox.mapboxsdk.style.layers.FillLayer: java.lang.Object nativeGetFillAntialias()
com.mapbox.geojson.Point$GsonTypeAdapter
com.google.android.gms.internal.measurement.zzbv$zzb: com.google.android.gms.internal.measurement.zzbv$zzd zzh
com.google.firebase.auth.internal.zzag: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzbv$zzc: com.google.android.gms.internal.measurement.zzjs zzi
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionInvalidateCallback: void onInvalidate()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values()
com.google.android.gms.internal.firebase-auth-api.zzzx: com.google.android.gms.internal.firebase-auth-api.zzzx[] values()
io.flutter.embedding.engine.FlutterJNI: void nativeSetAccessibilityFeatures(long,int)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconRotationAlignment()
com.mapbox.mapboxsdk.style.layers.BackgroundLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetBackgroundPatternTransition()
com.google.android.gms.internal.firebase-auth-api.zzvu: com.google.android.gms.internal.firebase-auth-api.zzvu[] values()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextTransform()
com.google.android.gms.internal.firebase-auth-api.zzft: int zzb
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeRemoveAnnotationIcon(java.lang.String)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeCancelTransitions()
com.google.firebase.firestore.proto.NoDocument: int NAME_FIELD_NUMBER
com.mapbox.mapboxsdk.offline.OfflineManager$CreateOfflineRegionCallback
com.google.android.gms.internal.firebase-auth-api.zzfe: com.google.android.gms.internal.firebase-auth-api.zzfh zzb
com.google.android.gms.internal.firebase-auth-api.zznk: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getMutators()
com.mapbox.geojson.MultiPoint: java.util.List coordinates
com.google.android.gms.internal.measurement.zzcd$zzi: com.google.android.gms.internal.measurement.zzih zzd
io.flutter.embedding.engine.FlutterJNI: void onRenderingStopped()
com.google.firestore.v1.Target: int resumeTypeCase_
com.mapbox.geojson.utils.PolylineUtils: PolylineUtils()
com.mapbox.geojson.GeometryAdapterFactory: GeometryAdapterFactory()
com.google.android.gms.internal.firebase-auth-api.zzwt: android.os.Parcelable$Creator CREATOR
com.mapbox.android.telemetry.Attachment: void addAttachment(com.mapbox.android.telemetry.FileAttachment)
com.mapbox.mapboxsdk.snapshotter.MapSnapshot: android.graphics.PointF pixelForLatLng(com.mapbox.mapboxsdk.geometry.LatLng)
com.mapbox.mapboxsdk.style.layers.Layer: java.lang.String nativeGetSourceId()
com.mapbox.mapboxsdk.maps.renderer.egl.EGLConfigChooser$BufferFormat: com.mapbox.mapboxsdk.maps.renderer.egl.EGLConfigChooser$BufferFormat valueOf(java.lang.String)
com.mapbox.mapboxsdk.style.layers.BackgroundLayer: void nativeSetBackgroundColorTransition(long,long)
io.flutter.plugins.urllauncher.WebViewActivity
com.google.firestore.v1.StructuredQuery$UnaryFilter: int FIELD_FIELD_NUMBER
com.google.firestore.v1.StructuredQuery$CompositeFilter: com.google.protobuf.Parser PARSER
com.mapbox.geojson.gson.GeoJsonAdapterFactory: GeoJsonAdapterFactory()
com.google.firestore.v1.TargetChange: int TARGET_CHANGE_TYPE_FIELD_NUMBER
com.mapbox.mapboxsdk.Mapbox: android.content.res.AssetManager getAssetManager()
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap getBitmap()
android.support.v4.os.ResultReceiver: android.os.Parcelable$Creator CREATOR
com.google.gson.JsonPrimitive: int hashCode()
com.mapbox.geojson.Feature: void addStringProperty(java.lang.String,java.lang.String)
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzt
com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$FieldType[] values()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityCreated(com.google.android.gms.dynamic.IObjectWrapper,android.os.Bundle,long)
com.mapbox.mapboxsdk.style.sources.RasterSource: void finalize()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: void initialize(java.lang.String,java.lang.String)
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: java.lang.String getOperatingSystem()
com.mapbox.geojson.Polygon$GsonTypeAdapter: com.mapbox.geojson.CoordinateContainer createCoordinateContainer(java.lang.String,com.mapbox.geojson.BoundingBox,java.lang.Object)
com.mapbox.geojson.FeatureCollection$GsonTypeAdapter: void write(com.google.gson.stream.JsonWriter,com.mapbox.geojson.FeatureCollection)
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: void nativeAddLayerBelow(long,java.lang.String)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetTextHaloColorTransition()
com.google.android.gms.internal.measurement.zzcd$zzk: int zzc
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: java.lang.Object nativeGetFillExtrusionColor()
com.google.firestore.v1.BatchGetDocumentsRequest: java.lang.String database_
com.mapbox.mapboxsdk.style.layers.HillshadeLayer: java.lang.Object nativeGetHillshadeIlluminationAnchor()
com.mapbox.mapboxsdk.style.sources.ImageSource: void finalize()
com.google.firestore.v1.Target: int TARGET_ID_FIELD_NUMBER
com.mapbox.mapboxsdk.maps.NativeMapView: com.mapbox.mapboxsdk.geometry.LatLng nativeLatLngForPixel(float,float)
com.mapbox.mapboxsdk.module.telemetry.PhoneState$Orientation: com.mapbox.mapboxsdk.module.telemetry.PhoneState$Orientation getOrientation(int)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetZoom(double,double,double,long)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
com.mapbox.mapboxsdk.style.layers.Layer: java.lang.String nativeGetSourceLayer()
com.mapbox.mapboxsdk.log.Logger: int WARN
com.google.android.gms.internal.firebase-auth-api.zzng: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.log.Logger: void i(java.lang.String,java.lang.String)
com.google.android.exoplayer2.metadata.emsg.EventMessage: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: java.lang.String getObservatoryUri()
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
com.google.protobuf.Int32Value: int VALUE_FIELD_NUMBER
com.google.protobuf.NullValue: com.google.protobuf.NullValue[] values()
com.mapbox.mapboxsdk.maps.NativeMapView: long nativePtr
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: void finalize()
com.mapbox.geojson.Feature$GsonTypeAdapter: com.google.gson.TypeAdapter stringTypeAdapter
com.google.firestore.v1.StructuredQuery$UnaryFilter: int OP_FIELD_NUMBER
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: int decoderPrivate
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
com.mapbox.mapboxsdk.offline.OfflineTilePyramidRegionDefinition: android.os.Parcelable$Creator CREATOR
com.google.firebase.auth.internal.RecaptchaActivity: RecaptchaActivity()
com.google.gson.JsonPrimitive: com.google.gson.JsonPrimitive deepCopy()
com.google.firestore.v1.TargetChange: com.google.protobuf.Parser PARSER
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTriggerEventName
com.mapbox.mapboxsdk.style.light.Light: float nativeGetIntensity()
com.mapbox.android.telemetry.CrashEvent: java.lang.String getHash()
com.mapbox.geojson.Polygon$GsonTypeAdapter: com.mapbox.geojson.CoordinateContainer createCoordinateContainer(java.lang.String,com.mapbox.geojson.BoundingBox,java.util.List)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
com.mapbox.geojson.BoundingBox: double west()
com.mapbox.android.accounts.v1.AccountsConstants: java.lang.String MAPBOX_SHARED_PREFERENCES
com.google.firebase.installations.FirebaseInstallationsRegistrar: FirebaseInstallationsRegistrar()
com.mapbox.mapboxsdk.style.layers.RasterLayer: void initialize(java.lang.String,java.lang.String)
com.mapbox.mapboxsdk.style.layers.LineLayer: java.lang.Object nativeGetLineCap()
com.google.android.gms.internal.firebase-auth-api.zzfw: int zzb
com.google.firestore.v1.ListenResponse: int FILTER_FIELD_NUMBER
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextMaxWidth()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void registerPlugin(java.lang.String,io.flutter.plugins.firebase.core.FlutterFirebasePlugin)
com.google.firestore.v1.Value: int DOUBLE_VALUE_FIELD_NUMBER
io.flutter.embedding.engine.FlutterJNI: java.util.Set engineLifecycleListeners
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void nativeReset()
com.mapbox.mapboxsdk.style.sources.CustomGeometrySource: void fetchTile(int,int,int)
com.mapbox.mapboxsdk.maps.NativeMapView: android.graphics.Bitmap nativeGetImage(java.lang.String)
com.mapbox.mapboxsdk.offline.OfflineRegion: long nativePtr
io.grpc.okhttp.OkHttpFrameLogger$Direction: io.grpc.okhttp.OkHttpFrameLogger$Direction valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
com.mapbox.mapboxsdk.maps.NativeMapView: com.mapbox.mapboxsdk.style.sources.Source nativeGetSource(java.lang.String)
com.mapbox.mapboxsdk.style.layers.Layer: boolean invalidated
com.mapbox.geojson.FeatureCollection$GsonTypeAdapter: com.mapbox.geojson.FeatureCollection read(com.google.gson.stream.JsonReader)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logEventAndBundle(java.lang.String,java.lang.String,android.os.Bundle,com.google.android.gms.internal.measurement.zzw,long)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
com.mapbox.android.telemetry.AppUserTurnstile: AppUserTurnstile(android.os.Parcel)
com.mapbox.mapboxsdk.style.types.FormattedSection: java.lang.String getTextColor()
com.mapbox.geojson.GeometryCollection$GsonTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,java.lang.reflect.InvocationHandler)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertSafeBrowsingResponse(java.lang.reflect.InvocationHandler)
com.google.firestore.v1.TransactionOptions$ReadOnly: java.lang.Object consistencySelector_
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setUserProperty(java.lang.String,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,boolean,long)
com.google.android.gms.internal.measurement.zzcd$zze: java.lang.String zzd
com.mapbox.mapboxsdk.module.telemetry.PhoneState: void setPluggedIn(boolean)
com.google.firestore.v1.StructuredQuery$Order
io.flutter.embedding.engine.FlutterJNI: java.lang.String observatoryUri
com.mapbox.mapboxsdk.style.layers.LineLayer: java.lang.Object nativeGetLineJoin()
com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol[] values()
com.mapbox.mapboxsdk.style.layers.LineLayer: java.lang.Object nativeGetLineGapWidth()
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: int height
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconOptional()
com.mapbox.geojson.MultiLineString: java.util.List coordinates
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: void release()
io.flutter.plugins.webviewflutter.JavaScriptChannel: void postMessage(java.lang.String)
com.mapbox.geojson.Point: com.mapbox.geojson.Point fromLngLat(double,double,double)
com.google.firestore.v1.DocumentChange: com.google.protobuf.Internal$IntList targetIds_
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery: TransportBackendDiscovery()
com.mapbox.android.telemetry.VisionObjectDetectionEvent: VisionObjectDetectionEvent(java.lang.String)
com.mapbox.mapboxsdk.utils.StringUtils: java.lang.String unaccent(java.lang.String)
com.google.firebase.auth.FirebaseAuth: com.google.firebase.auth.FirebaseAuth getInstance(com.google.firebase.FirebaseApp)
com.mapbox.mapboxsdk.style.layers.FillLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetFillOpacityTransition()
com.google.android.gms.internal.measurement.zzbv$zzf: com.google.android.gms.internal.measurement.zzbv$zzf zzh
com.mapbox.android.telemetry.Event$Type: com.mapbox.android.telemetry.Event$Type[] values()
com.google.android.gms.internal.location.zzo: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values()
com.google.android.gms.internal.measurement.zzbv$zzc: int zzc
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: boolean isSafeToMultiply(int,int)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetTransitionOptions(com.mapbox.mapboxsdk.style.layers.TransitionOptions)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.gms.internal.firebase-auth-api.zzfn: com.google.android.gms.internal.firebase-auth-api.zzfn zzf
com.google.firebase.auth.GoogleAuthCredential: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzbv$zzd: java.lang.String zzf
com.google.firestore.v1.ListenRequest
com.mapbox.geojson.ListOfPointCoordinatesTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.mapbox.mapboxsdk.storage.FileSource
com.google.protobuf.GeneratedMessageLite: int memoizedSerializedSize
android.support.v4.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
com.google.android.gms.internal.firebase-auth-api.zzgv: com.google.android.gms.internal.firebase-auth-api.zzgv[] values()
com.google.firestore.v1.Document: com.google.firestore.v1.Document DEFAULT_INSTANCE
com.mapbox.geojson.MultiPolygon$GsonTypeAdapter: void write(com.google.gson.stream.JsonWriter,com.mapbox.geojson.MultiPolygon)
com.mapbox.geojson.shifter.CoordinateShifter: java.util.List unshiftPoint(java.util.List)
com.google.protobuf.Timestamp
com.mapbox.mapboxsdk.maps.NativeMapView: boolean nativeRemoveLayer(long)
com.mapbox.geojson.FeatureCollection: com.mapbox.geojson.FeatureCollection fromFeature(com.mapbox.geojson.Feature,com.mapbox.geojson.BoundingBox)
com.mapbox.mapboxsdk.style.layers.HillshadeLayer: java.lang.Object nativeGetHillshadeShadowColor()
com.mapbox.mapboxsdk.module.telemetry.PhoneState: java.lang.String getCellularNetworkType()
com.google.firebase.firestore.proto.WriteBatch: int BATCH_ID_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zzfb: int zzb
com.mapbox.mapboxsdk.text.LocalGlyphRasterizer: android.graphics.Paint paint
com.mapbox.mapboxsdk.style.layers.LineLayer: java.lang.Object nativeGetLinePattern()
com.mapbox.mapboxsdk.module.telemetry.PhoneState$Orientation: com.mapbox.mapboxsdk.module.telemetry.PhoneState$Orientation[] $VALUES
io.grpc.okhttp.internal.Platform$TlsExtensionType: io.grpc.okhttp.internal.Platform$TlsExtensionType valueOf(java.lang.String)
com.mapbox.mapboxsdk.style.layers.Layer: java.lang.String nativeGetId()
com.mapbox.mapboxsdk.offline.OfflineGeometryRegionDefinition: java.lang.String styleURL
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: java.lang.Double getMaxZoom()
com.google.firestore.v1.Target$QueryTarget: com.google.protobuf.Parser PARSER
com.mapbox.mapboxsdk.style.sources.Source: void setPrefetchZoomDelta(java.lang.Integer)
com.mapbox.geojson.FeatureCollection: com.mapbox.geojson.FeatureCollection fromFeatures(com.mapbox.geojson.Feature[],com.mapbox.geojson.BoundingBox)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
com.google.firebase.firestore.DocumentChange$Type: com.google.firebase.firestore.DocumentChange$Type[] values()
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeAddAnnotationIcon(java.lang.String,int,int,float,byte[])
io.flutter.embedding.engine.FlutterJNI: void asyncWaitForVsync(long)
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent: java.util.ArrayList initList(java.lang.String,com.google.gson.reflect.TypeToken)
com.google.firebase.firestore.Source: com.google.firebase.firestore.Source[] values()
com.google.android.gms.internal.measurement.zzck$zzd: boolean zzf
com.google.protobuf.Int32Value
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: VideoDecoderOutputBuffer(com.google.android.exoplayer2.decoder.OutputBuffer$Owner)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
com.google.android.gms.internal.firebase-auth-api.zzgq: int zzb
com.google.android.gms.internal.measurement.zzcd$zzk: float zzh
com.mapbox.android.telemetry.VisionEvent
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String)
com.mapbox.mapboxsdk.http.NativeHttpRequest: NativeHttpRequest(long,java.lang.String,java.lang.String,java.lang.String,boolean)
com.google.android.gms.internal.firebase-auth-api.zzmo: android.os.Parcelable$Creator CREATOR
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar
com.mapbox.geojson.GeoJson
io.flutter.embedding.engine.FlutterJNI: void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler)
com.google.firestore.v1.DocumentMask: int FIELD_PATHS_FIELD_NUMBER
com.mapbox.mapboxsdk.style.sources.ImageSource
com.google.gson.JsonArray: boolean equals(java.lang.Object)
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
com.mapbox.mapboxsdk.style.layers.CircleLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetCircleStrokeWidthTransition()
io.grpc.internal.SerializingExecutor: int runState
com.mapbox.android.telemetry.LocationEvent: java.lang.String applicationState
com.google.firestore.v1.Value: int BYTES_VALUE_FIELD_NUMBER
com.mapbox.android.telemetry.CrashEvent: java.lang.String osVersion
com.mapbox.mapboxsdk.offline.OfflineGeometryRegionDefinition: float pixelRatio
com.mapbox.mapboxsdk.style.layers.HeatmapLayer: java.lang.Object nativeGetHeatmapOpacity()
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet)
com.mapbox.mapboxsdk.http.NativeHttpRequest: long access$100(com.mapbox.mapboxsdk.http.NativeHttpRequest)
com.google.android.gms.internal.measurement.zzcd$zzi
com.mapbox.mapboxsdk.style.layers.SymbolLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetTextTranslateTransition()
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
com.mapbox.mapboxsdk.style.layers.HeatmapLayer: HeatmapLayer(long)
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadStartEvent: java.lang.Double maxZoom
com.google.common.util.concurrent.DirectExecutor: com.google.common.util.concurrent.DirectExecutor valueOf(java.lang.String)
com.mapbox.geojson.GeometryCollection: java.lang.String TYPE
com.mapbox.mapboxsdk.style.layers.CircleLayer: void nativeSetCircleRadiusTransition(long,long)
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: void nativeAddLayerAbove(long,java.lang.String)
com.mapbox.geojson.GeometryCollection$GsonTypeAdapter: com.google.gson.TypeAdapter boundingBoxTypeAdapter
com.mapbox.mapboxsdk.style.sources.VectorSource
com.mapbox.geojson.MultiPoint: com.google.gson.TypeAdapter typeAdapter(com.google.gson.Gson)
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetAccuracyRadiusColorTransition()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetSymbolAvoidEdges()
io.flutter.view.FlutterView: io.flutter.view.FlutterNativeView getFlutterNativeView()
com.google.firestore.v1.BatchGetDocumentsRequest: com.google.protobuf.Internal$ProtobufList documents_
com.mapbox.mapboxsdk.http.NativeHttpRequest: void nativeOnResponse(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,byte[])
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$302(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void getTransformMatrix(float[])
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: java.lang.Object nativeGetShadowImageSize()
androidx.core.widget.NestedScrollView: int getScrollRange()
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: com.google.android.exoplayer2.Format format
com.mapbox.geojson.gson.GeometryGeoJson: com.mapbox.geojson.Geometry fromJson(java.lang.String)
com.google.android.exoplayer2.decoder.Buffer: void clear()
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.android.gms.measurement.AppMeasurementReceiver
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken[] values()
com.google.android.gms.internal.firebase-auth-api.zzed: com.google.android.gms.internal.firebase-auth-api.zzej zzf
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeAddSource(com.mapbox.mapboxsdk.style.sources.Source,long)
com.mapbox.android.accounts.v1.AccountsConstants: java.lang.String KEY_PREFERENCE_MAPS_SKU_TOKEN
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onReceivedHttpError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceResponse)
com.google.android.gms.internal.measurement.zzcd$zzi: com.google.android.gms.internal.measurement.zzig zze
com.mapbox.android.telemetry.VisionObjectDetectionEvent: void writeDoubleIfNotNull(android.os.Parcel,java.lang.Double)
com.google.firestore.v1.Write: int TRANSFORM_FIELD_NUMBER
com.google.firestore.v1.DocumentDelete: int REMOVED_TARGET_IDS_FIELD_NUMBER
com.google.android.gms.measurement.AppMeasurement: void setConditionalUserProperty(com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty)
com.mapbox.geojson.FeatureCollection$GsonTypeAdapter: FeatureCollection$GsonTypeAdapter(com.google.gson.Gson)
com.mapbox.mapboxsdk.camera.CameraPosition: double tilt
com.mapbox.mapboxsdk.geometry.LatLngBounds: double latitudeSouth
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: java.lang.Object nativeGetTopImageSize()
com.google.firestore.v1.DocumentChange: int DOCUMENT_FIELD_NUMBER
com.google.android.datatransport.cct.CctBackendFactory: com.google.android.datatransport.runtime.backends.TransportBackend create(com.google.android.datatransport.runtime.backends.CreationContext)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind valueOf(java.lang.String)
com.mapbox.geojson.ListOfListOfPointCoordinatesTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.util.List)
com.google.firebase.firestore.proto.MaybeDocument: java.lang.Object documentType_
com.google.firebase.firestore.proto.MaybeDocument: int DOCUMENT_FIELD_NUMBER
android.support.v4.media.MediaBrowserCompat$MediaItem
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag[] values()
com.mapbox.mapboxsdk.maps.NativeMapView: boolean nativeGetPrefetchTiles()
com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: boolean setSessionIdRotationInterval(int)
com.google.android.gms.common.zzj: android.os.Parcelable$Creator CREATOR
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.mapbox.mapboxsdk.offline.OfflineRegion: void initialize(long,com.mapbox.mapboxsdk.storage.FileSource)
io.flutter.view.AccessibilityViewEmbedder: void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: java.lang.Object nativeGetPerspectiveCompensation()
com.google.android.gms.internal.firebase-auth-api.zzgt: com.google.android.gms.internal.firebase-auth-api.zzym zzf
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String)
androidx.appcompat.view.menu.ListMenuItemView
com.google.gson.JsonPrimitive: com.google.gson.JsonElement deepCopy()
com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken get(java.lang.Class)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
com.google.android.gms.internal.firebase-auth-api.zzfh: com.google.android.gms.internal.firebase-auth-api.zzfh zze
com.google.gson.JsonObject: com.google.gson.JsonObject getAsJsonObject(java.lang.String)
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent: java.lang.String toString()
com.google.firestore.v1.Document
com.google.firestore.v1.ListenResponse: int TARGET_CHANGE_FIELD_NUMBER
io.flutter.view.AccessibilityViewEmbedder: android.view.View rootAccessibilityView
com.google.android.gms.internal.measurement.zzca$zza: com.google.android.gms.internal.measurement.zzca$zza zzh
com.mapbox.geojson.GeometryCollection
com.mapbox.mapboxsdk.geometry.LatLngQuad
com.mapbox.mapboxsdk.style.sources.CustomGeometrySource: com.mapbox.geojson.Feature[] querySourceFeatures(java.lang.Object[])
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: com.mapbox.mapboxsdk.maps.MapboxMap$OnFpsChangedListener onFpsChangedListener
com.mapbox.mapboxsdk.style.layers.SymbolLayer
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void initialize(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzae,long)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetDebug(boolean)
android.support.v4.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
com.mapbox.mapboxsdk.Mapbox: void setConnected(java.lang.Boolean)
com.google.gson.JsonArray: com.google.gson.JsonArray deepCopy()
com.mapbox.mapboxsdk.annotations.BubbleLayout: int getStrokeColor()
com.google.android.exoplayer2.decoder.Buffer: boolean hasSupplementalData()
com.mapbox.mapboxsdk.Mapbox: com.mapbox.mapboxsdk.Mapbox getInstance(android.content.Context,java.lang.String)
com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionStatusCallback: void onError(java.lang.String)
com.google.android.gms.internal.measurement.zzbv$zzf
com.google.android.gms.internal.firebase-auth-api.zzim
com.google.common.collect.Maps$EntryFunction: com.google.common.collect.Maps$EntryFunction valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.mapbox.mapboxsdk.offline.OfflineGeometryRegionDefinition: com.mapbox.geojson.Geometry geometry
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener
androidx.loader.app.LoaderManagerImpl$LoaderViewModel
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent$PerformanceAttribute: boolean equals(java.lang.Object)
com.mapbox.geojson.GeometryCollection: java.util.List geometries
com.mapbox.geojson.Feature: void addCharacterProperty(java.lang.String,java.lang.Character)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeatures(int)
com.google.android.gms.internal.measurement.zzck$zzd: java.lang.String zzj
com.google.android.exoplayer2.decoder.Buffer: boolean isKeyFrame()
com.google.protobuf.GeneratedMessageLite$ExtendableMessage: com.google.protobuf.FieldSet extensions
com.mapbox.geojson.MultiPolygon$GsonTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.mapbox.android.telemetry.AppUserTurnstile: java.lang.String device
com.mapbox.mapboxsdk.style.layers.LineLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetLineDasharrayTransition()
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
com.google.android.gms.internal.measurement.zzcd$zzg: long zzat
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.style.layers.CircleLayer: void finalize()
com.google.android.gms.internal.firebase-auth-api.zzig: com.google.android.gms.internal.firebase-auth-api.zzzt zze
com.google.android.gms.maps.model.CameraPosition: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.style.layers.CircleLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetCircleBlurTransition()
com.google.firebase.auth.api.fallback.service.FirebaseAuthFallbackService
com.google.firebase.firestore.proto.MaybeDocument: com.google.protobuf.Parser PARSER
com.google.firebase.firestore.proto.MaybeDocument: boolean hasCommittedMutations_
com.google.android.gms.internal.firebase-auth-api.zzhd: com.google.android.gms.internal.firebase-auth-api.zzhd zzg
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.mapbox.geojson.Feature: java.lang.String id
com.mapbox.mapboxsdk.maps.Image: Image(byte[],float,java.lang.String,int,int,boolean,float[],float[],float[])
com.mapbox.mapboxsdk.style.sources.GeoJsonSource: void initialize(java.lang.String,java.lang.Object)
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzr
com.google.firestore.v1.StructuredQuery$Projection: com.google.protobuf.Parser PARSER
com.google.firestore.v1.CommitResponse: int COMMIT_TIME_FIELD_NUMBER
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
com.google.gson.typeadapters.RuntimeTypeAdapterFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
com.google.firestore.v1.BatchGetDocumentsRequest: int DATABASE_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zzhw: int zzf
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzck$zzc
com.google.firebase.firestore.proto.UnknownDocument: int NAME_FIELD_NUMBER
io.grpc.okhttp.NegotiationType: io.grpc.okhttp.NegotiationType[] values()
com.mapbox.geojson.shifter.CoordinateShifterManager$1: java.util.List unshiftPoint(java.util.List)
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery
com.mapbox.geojson.utils.GeoJsonUtils
com.mapbox.mapboxsdk.style.layers.RasterLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetRasterBrightnessMinTransition()
com.google.android.gms.internal.measurement.zzcd$zzh: com.google.android.gms.internal.measurement.zzcd$zzh zzf
com.google.firebase.firestore.proto.WriteBatch
com.google.gson.JsonPrimitive: char getAsCharacter()
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: java.lang.String sdkIdentifier
com.mapbox.android.telemetry.AppUserTurnstile: java.lang.String operatingSystem
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
com.mapbox.android.telemetry.AppUserTurnstile: AppUserTurnstile(java.lang.String,java.lang.String)
com.mapbox.mapboxsdk.style.light.Light: void nativeSetIntensityTransition(long,long)
com.google.android.gms.internal.firebase-auth-api.zzib
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority[] values()
com.mapbox.mapboxsdk.style.sources.ImageSource: void nativeSetUrl(java.lang.String)
com.mapbox.geojson.BoundingBox: com.mapbox.geojson.Point northeast
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeJumpTo(double,double,double,double,double,double[])
com.mapbox.mapboxsdk.offline.OfflineManager
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: java.lang.Object nativeGetFillExtrusionVerticalGradient()
com.google.protobuf.Timestamp: com.google.protobuf.Parser PARSER
com.mapbox.mapboxsdk.style.sources.CannotAddSourceException
org.chromium.support_lib_boundary.WebResourceRequestBoundaryInterface: boolean isRedirect()
io.flutter.view.AccessibilityViewEmbedder
com.mapbox.mapboxsdk.storage.FileSource$ResourcesCachePathChangeCallback
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void performAction(android.os.Bundle,com.google.android.gms.internal.measurement.zzw,long)
com.mapbox.mapboxsdk.style.layers.Layer
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
com.google.android.gms.location.LocationSettingsStates: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.style.layers.SymbolLayer: void nativeSetTextHaloWidthTransition(long,long)
io.flutter.embedding.engine.FlutterJNI: void onBeginFrame()
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeAddImages(com.mapbox.mapboxsdk.maps.Image[])
com.mapbox.mapboxsdk.style.types.FormattedSection: void setTextColor(java.lang.Object)
com.mapbox.geojson.Point$GsonTypeAdapter: Point$GsonTypeAdapter(com.google.gson.Gson)
com.mapbox.mapboxsdk.maps.NativeMapView: com.mapbox.mapboxsdk.style.sources.Source[] nativeGetSources()
com.mapbox.mapboxsdk.style.light.Position: float azimuthalAngle
com.google.android.gms.internal.measurement.zzcd$zzb: long zze
com.google.firebase.analytics.FirebaseAnalytics: java.lang.String getFirebaseInstanceId()
com.mapbox.geojson.MultiPoint$GsonTypeAdapter: com.mapbox.geojson.MultiPoint read(com.google.gson.stream.JsonReader)
com.mapbox.geojson.Feature: java.lang.String id()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextVariableAnchor()
com.google.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource: com.google.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource[] values()
com.google.android.gms.internal.measurement.zzck$zzb: java.lang.String zzd
com.google.firestore.v1.Document: com.google.protobuf.MapFieldLite fields_
com.google.android.gms.internal.firebase-auth-api.zzig
com.google.gson.JsonElement: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: void onEndFrame()
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
com.mapbox.mapboxsdk.maps.renderer.MapRenderer
com.google.gson.JsonPrimitive: int getAsInt()
com.mapbox.geojson.Polygon: boolean equals(java.lang.Object)
io.flutter.view.FlutterView: io.flutter.embedding.engine.dart.DartExecutor getDartExecutor()
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
com.mapbox.mapboxsdk.style.sources.ImageSource: void initialize(java.lang.String,com.mapbox.mapboxsdk.geometry.LatLngQuad)
com.google.firestore.v1.WriteRequest
com.google.i18n.phonenumbers.NumberParseException$ErrorType: com.google.i18n.phonenumbers.NumberParseException$ErrorType valueOf(java.lang.String)
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
com.google.firestore.v1.ExistenceFilter: int count_
com.mapbox.mapboxsdk.style.layers.Layer: void nativeSetMaxZoom(float)
com.google.android.gms.internal.measurement.zzbv$zza: com.google.android.gms.internal.measurement.zzig zzf
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
com.google.firestore.v1.StructuredQuery: com.google.firestore.v1.Cursor endAt_
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
androidx.fragment.app.FragmentActivity: FragmentActivity()
com.mapbox.android.telemetry.LocationEvent: java.lang.String LOCATION
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: void setSplashDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List finalClippingPaths
com.mapbox.mapboxsdk.style.layers.LineLayer
com.mapbox.mapboxsdk.module.telemetry.PhoneState: void setAccessibilityFontScale(float)
com.mapbox.android.telemetry.Event: java.util.EnumSet visionEventTypes
com.mapbox.geojson.FeatureCollection: com.mapbox.geojson.FeatureCollection fromFeature(com.mapbox.geojson.Feature)
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: int MODULE_VERSION
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
com.google.android.gms.internal.firebase-auth-api.zzht: com.google.android.gms.internal.firebase-auth-api.zzht zzg
android.support.v4.media.session.MediaSessionCompat$Token: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzgn: com.google.android.gms.internal.firebase-auth-api.zzgn zzg
com.google.android.gms.maps.model.MapStyleOptions: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzcd$zzj
com.google.android.gms.internal.firebase-auth-api.zzeg: int zzb
com.google.protobuf.Timestamp: int nanos_
com.mapbox.geojson.LineString: java.lang.String toPolyline(int)
androidx.lifecycle.ReflectiveGenericLifecycleObserver
com.google.android.gms.internal.firebase-auth-api.zzha: com.google.android.gms.internal.firebase-auth-api.zzha[] values()
io.grpc.ConnectivityState: io.grpc.ConnectivityState[] values()
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode valueOf(java.lang.String)
com.google.protobuf.ProtoSyntax: com.google.protobuf.ProtoSyntax valueOf(java.lang.String)
com.google.firestore.v1.DocumentRemove: com.google.protobuf.Timestamp readTime_
com.google.android.gms.internal.firebase-auth-api.zzgk: com.google.android.gms.internal.firebase-auth-api.zzge zze
com.google.android.exoplayer2.metadata.icy.IcyHeaders: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.maps.MapView: com.mapbox.mapboxsdk.maps.MapboxMap getMapboxMap()
com.mapbox.mapboxsdk.annotations.Polyline
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertWebMessagePort(java.lang.reflect.InvocationHandler)
io.flutter.embedding.engine.FlutterJNI: void loadLibrary()
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: java.lang.String getShapeForOfflineRegion()
com.mapbox.geojson.ListofListofListOfPointCoordinatesTypeAdapter: ListofListofListOfPointCoordinatesTypeAdapter()
com.google.firestore.v1.StructuredQuery$Order: com.google.firestore.v1.StructuredQuery$Order DEFAULT_INSTANCE
com.google.firestore.v1.BatchGetDocumentsRequest: com.google.protobuf.Parser PARSER
android.support.v4.media.session.MediaSessionCompat$Token
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetStyleUrl(java.lang.String)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeLatLngsForPixels(double[],double[],float)
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzm
io.flutter.plugins.GeneratedPluginRegistrant: void registerWith(io.flutter.embedding.engine.FlutterEngine)
com.mapbox.mapboxsdk.style.layers.RasterLayer: java.lang.Object nativeGetRasterBrightnessMax()
com.mapbox.mapboxsdk.style.layers.LineLayer: java.lang.Object nativeGetLineBlur()
com.mapbox.geojson.FeatureCollection$GsonTypeAdapter: com.google.gson.TypeAdapter boundingBoxAdapter
com.google.android.gms.internal.firebase-auth-api.zzia: int zzf
com.google.firebase.firestore.MetadataChanges: com.google.firebase.firestore.MetadataChanges[] values()
io.grpc.SecurityLevel: io.grpc.SecurityLevel[] values()
com.mapbox.geojson.BoundingBox: com.mapbox.geojson.BoundingBox fromJson(java.lang.String)
com.mapbox.mapboxsdk.offline.OfflineGeometryRegionDefinition: double maxZoom
com.mapbox.mapboxsdk.style.sources.VectorSource: com.mapbox.geojson.Feature[] querySourceFeatures(java.lang.String[],java.lang.Object[])
com.mapbox.geojson.BaseGeometryTypeAdapter: com.google.gson.TypeAdapter boundingBoxAdapter
com.google.firestore.v1.Target: boolean once_
com.google.firestore.v1.CommitRequest: com.google.protobuf.Parser PARSER
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetSymbolPlacement()
com.mapbox.android.telemetry.AppUserTurnstile: java.lang.String APP_USER_TURNSTILE
com.mapbox.geojson.Feature: com.google.gson.JsonElement removeProperty(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
com.google.firebase.firestore.proto.MaybeDocument: com.google.firebase.firestore.proto.MaybeDocument DEFAULT_INSTANCE
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
com.google.firestore.v1.Target$QueryTarget
androidx.media.AudioAttributesImplApi26Parcelizer: androidx.media.AudioAttributesImplApi26 read(androidx.versionedparcelable.VersionedParcel)
com.mapbox.mapboxsdk.annotations.BubbleLayout: com.mapbox.mapboxsdk.annotations.ArrowDirection getArrowDirection()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextFont()
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void setOnFpsChangedListener(com.mapbox.mapboxsdk.maps.MapboxMap$OnFpsChangedListener)
androidx.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
com.mapbox.geojson.MultiLineString$GsonTypeAdapter: com.mapbox.geojson.MultiLineString read(com.google.gson.stream.JsonReader)
com.mapbox.mapboxsdk.offline.OfflineManager$FileSourceCallback
com.google.android.gms.internal.firebase-auth-api.zzhw
com.google.android.gms.internal.measurement.zzcd$zzg
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
com.mapbox.geojson.CoordinateContainer: java.lang.Object coordinates()
com.mapbox.geojson.ListOfListOfPointCoordinatesTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
com.google.android.gms.maps.model.VisibleRegion: android.os.Parcelable$Creator CREATOR
com.mapbox.geojson.MultiPoint: com.mapbox.geojson.BoundingBox bbox
com.mapbox.geojson.Point: double latitude()
com.mapbox.android.telemetry.VisionObjectDetectionEvent: java.lang.String getClazz()
com.mapbox.mapboxsdk.style.layers.RasterLayer: java.lang.Object nativeGetRasterResampling()
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
com.google.firestore.v1.TargetChange
com.mapbox.android.telemetry.AppUserTurnstile: java.lang.String sdkIdentifier
com.mapbox.geojson.Feature: com.google.gson.JsonElement getProperty(java.lang.String)
com.mapbox.mapboxsdk.offline.OfflineRegion: void deleteOfflineRegion(com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionDeleteCallback)
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
com.google.android.exoplayer2.decoder.Buffer: void setFlags(int)
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent$PerformanceAttribute
com.mapbox.mapboxsdk.log.Logger: void v(java.lang.String,java.lang.String,java.lang.Throwable)
com.google.android.gms.internal.firebase-auth-api.zzft: com.google.android.gms.internal.firebase-auth-api.zzft zzf
com.mapbox.android.telemetry.VisionObjectDetectionEvent: java.lang.String VIS_OBJECT_DETECTION
com.google.android.gms.internal.firebase-auth-api.zzfe
com.google.gson.TypeAdapter: java.lang.Object fromJsonTree(com.google.gson.JsonElement)
com.mapbox.mapboxsdk.style.layers.RasterLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetRasterBrightnessMaxTransition()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String)
com.google.firestore.v1.DocumentTransform: com.google.protobuf.Internal$ProtobufList fieldTransforms_
com.google.gson.TypeAdapter: java.lang.Object fromJson(java.io.Reader)
com.mapbox.android.telemetry.CrashEvent: java.lang.String stackTraceHash
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetBearingImageSizeTransition()
com.mapbox.mapboxsdk.snapshotter.MapSnapshot: void initialize()
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent$1: com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent this$0
com.google.android.gms.internal.firebase-auth-api.zzlc: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.TransactionOptions$ReadWrite
com.google.android.gms.internal.measurement.zzca$zzb: boolean zzk
com.google.android.gms.internal.measurement.zzcd$zzf
com.google.gson.JsonObject: com.google.gson.JsonElement remove(java.lang.String)
com.mapbox.mapboxsdk.style.types.Formatted: int hashCode()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: AppMeasurementDynamiteService()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void generateEventId(com.google.android.gms.internal.measurement.zzw)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setDisabledActionModeMenuItems(int)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype valueOf(java.lang.String)
com.mapbox.geojson.MultiPoint: com.mapbox.geojson.MultiPoint fromLngLats(java.util.List,com.mapbox.geojson.BoundingBox)
com.mapbox.mapboxsdk.style.types.FormattedSection: FormattedSection(java.lang.String,java.lang.Number,java.lang.String[],java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String)
com.mapbox.mapboxsdk.style.light.Light: void nativeSetPositionTransition(long,long)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection valueOf(java.lang.String)
com.mapbox.mapboxsdk.maps.NativeMapView: com.mapbox.mapboxsdk.style.layers.Layer[] nativeGetLayers()
com.google.android.gms.internal.measurement.zzbv$zzc: com.google.android.gms.internal.measurement.zzbv$zzc zzh
com.google.firestore.v1.DocumentChange: com.google.firestore.v1.Document document_
com.mapbox.mapboxsdk.module.telemetry.PhoneState: java.lang.String NO_CARRIER
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzam
com.mapbox.mapboxsdk.snapshotter.MapSnapshot: MapSnapshot(long,android.graphics.Bitmap,java.lang.String[],boolean)
com.mapbox.geojson.MultiPolygon: com.mapbox.geojson.MultiPolygon fromJson(java.lang.String)
com.mapbox.geojson.shifter.CoordinateShifter: java.util.List unshiftPoint(com.mapbox.geojson.Point)
com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: void onCreateOfflineRegion(com.mapbox.mapboxsdk.offline.OfflineRegionDefinition)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode valueOf(java.lang.String)
android.support.v4.media.RatingCompat: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.util.DynamiteApi
com.mapbox.mapboxsdk.style.layers.SymbolLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetIconColorTransition()
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzo
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry$VariantInfo: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.source.hls.HlsMediaSource$Factory: HlsMediaSource$Factory(com.google.android.exoplayer2.upstream.DataSource$Factory)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void install()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.firestore.v1.ExistenceFilter: int targetId_
com.google.gson.reflect.TypeToken: java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
com.mapbox.geojson.LineString$GsonTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
com.mapbox.geojson.MultiLineString: MultiLineString(java.lang.String,com.mapbox.geojson.BoundingBox,java.util.List)
io.flutter.view.FlutterCallbackInformation
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] values()
com.mapbox.android.telemetry.VisionObjectDetectionEvent: void setVehicleLatitude(double)
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken valueOf(java.lang.String)
com.google.firestore.v1.DocumentRemove
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: java.lang.Double maxZoom
com.google.firestore.v1.TargetChange: int RESUME_TOKEN_FIELD_NUMBER
com.google.firebase.firestore.proto.NoDocument: com.google.protobuf.Timestamp readTime_
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeMoveBy(double,double,long)
com.mapbox.mapboxsdk.maps.Image: float[] stretchX
com.mapbox.mapboxsdk.offline.OfflineGeometryRegionDefinition: OfflineGeometryRegionDefinition(java.lang.String,com.mapbox.geojson.Geometry,double,double,float)
com.google.firestore.v1.DocumentTransform: int DOCUMENT_FIELD_NUMBER
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
io.flutter.embedding.engine.FlutterJNI: void nativeSetViewportMetrics(long,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int)
com.mapbox.mapboxsdk.maps.renderer.MapRendererRunnable: void run()
com.mapbox.mapboxsdk.style.layers.CircleLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetCircleStrokeOpacityTransition()
com.google.android.gms.internal.firebase-auth-api.zzho: java.lang.String zzb
com.google.gson.reflect.TypeToken: java.lang.String toString()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
com.mapbox.mapboxsdk.style.layers.LineLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetLineColorTransition()
com.google.firestore.v1.DocumentChange: int REMOVED_TARGET_IDS_FIELD_NUMBER
com.mapbox.geojson.Point: int hashCode()
com.mapbox.mapboxsdk.style.sources.CustomGeometrySource: void cancelTile(int,int,int)
com.google.firebase.database.collection.LLRBNode$Color: com.google.firebase.database.collection.LLRBNode$Color valueOf(java.lang.String)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType[] values()
com.google.android.gms.internal.firebase-auth-api.zzhw: java.lang.String zzh
com.mapbox.geojson.MultiPoint: int hashCode()
androidx.appcompat.widget.ActionBarContainer
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mOrigin
android.support.v4.media.AudioAttributesImplApi26Parcelizer: AudioAttributesImplApi26Parcelizer()
com.google.android.gms.internal.firebase-auth-api.zzib: com.google.android.gms.internal.firebase-auth-api.zzib zzf
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
com.google.android.gms.internal.measurement.zzcd$zzj: com.google.android.gms.internal.measurement.zzih zze
com.google.android.gms.internal.measurement.zzbv$zza
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
com.google.firebase.auth.FirebaseAuthRegistrar: java.util.List getComponents()
com.mapbox.mapboxsdk.annotations.Polygon: int fillColor
com.mapbox.geojson.GeometryCollection: com.mapbox.geojson.BoundingBox bbox()
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
com.mapbox.android.telemetry.VisionObjectDetectionEvent: java.lang.Double object_lat
com.google.android.gms.internal.measurement.zzcd$zzg: long zzl
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
com.mapbox.mapboxsdk.geometry.LatLng
com.google.firestore.v1.Cursor: int VALUES_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zzep
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadStartEvent
com.mapbox.mapboxsdk.maps.NativeMapView: double nativeGetMaxPitch()
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand: android.os.Parcelable$Creator CREATOR
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setOffscreenPreRaster(boolean)
com.google.firebase.firestore.core.LimboDocumentChange$Type: com.google.firebase.firestore.core.LimboDocumentChange$Type valueOf(java.lang.String)
com.mapbox.geojson.MultiLineString: com.mapbox.geojson.BoundingBox bbox()
com.mapbox.mapboxsdk.annotations.BubbleLayout: BubbleLayout(android.content.Context,android.util.AttributeSet)
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadStartEvent: java.lang.String getShapeForOfflineRegion()
com.mapbox.android.telemetry.LocationEvent: java.lang.Double getAltitude()
com.google.firebase.firestore.model.Document$DocumentState: com.google.firebase.firestore.model.Document$DocumentState[] values()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: void nativeSetIconColorTransition(long,long)
android.support.v4.media.MediaBrowserCompat$ItemReceiver
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer
com.mapbox.geojson.MultiPolygon: java.lang.String TYPE
com.mapbox.mapboxsdk.maps.renderer.MapRendererRunnable
com.mapbox.mapboxsdk.style.layers.LineLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetLineTranslateTransition()
com.mapbox.geojson.MultiPolygon: java.util.List coordinates()
com.mapbox.geojson.ListOfDoublesCoordinatesTypeAdapter: ListOfDoublesCoordinatesTypeAdapter()
com.mapbox.geojson.shifter.CoordinateShifterManager: com.mapbox.geojson.shifter.CoordinateShifter getCoordinateShifter()
com.google.firestore.v1.WriteResponse: int STREAM_ID_FIELD_NUMBER
com.mapbox.mapboxsdk.module.telemetry.PhoneState$Orientation: com.mapbox.mapboxsdk.module.telemetry.PhoneState$Orientation ORIENTATION_LANDSCAPE
com.mapbox.mapboxsdk.style.layers.FillLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetFillColorTransition()
com.mapbox.android.telemetry.VisionObjectDetectionEvent: void setObjectSizeWidth(double)
com.mapbox.mapboxsdk.offline.OfflineRegionDefinition: java.lang.String getType()
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetLocationTransition()
com.mapbox.geojson.MultiLineString$GsonTypeAdapter
com.mapbox.mapboxsdk.geometry.LatLng: double longitude
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal[] values()
com.mapbox.geojson.shifter.CoordinateShifterManager$1: java.util.List shiftLonLat(double,double)
com.google.gson.JsonObject: com.google.gson.JsonElement deepCopy()
com.mapbox.android.telemetry.CrashEvent
com.google.android.gms.internal.firebase-auth-api.zzms: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.style.layers.BackgroundLayer: java.lang.Object nativeGetBackgroundColor()
com.mapbox.mapboxsdk.module.telemetry.MapEventFactory: com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadStartEvent buildOfflineDownloadStartEvent(com.mapbox.mapboxsdk.module.telemetry.PhoneState,java.lang.String,java.lang.Double,java.lang.Double,java.lang.String)
com.mapbox.geojson.gson.BoundingBoxTypeAdapter: BoundingBoxTypeAdapter()
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: java.lang.String sdkVersion
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceChanged(long,int,int)
org.chromium.support_lib_boundary.WebResourceRequestBoundaryInterface
com.mapbox.android.telemetry.errors.ErrorReporterJobIntentService: ErrorReporterJobIntentService()
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
com.google.gson.JsonArray
com.mapbox.geojson.Polygon: java.util.List coordinates()
com.mapbox.android.telemetry.VisionEvent: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.SearchView: int getPreferredWidth()
com.google.firebase.auth.FacebookAuthCredential: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.StructuredQuery: com.google.firestore.v1.StructuredQuery$Projection select_
com.google.android.exoplayer2.source.hls.HlsMediaSource$Factory
com.mapbox.mapboxsdk.Mapbox: com.mapbox.mapboxsdk.maps.TelemetryDefinition getTelemetry()
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
com.mapbox.geojson.BoundingBox: com.mapbox.geojson.BoundingBox fromLngLats(double,double,double,double)
com.google.firestore.v1.BatchGetDocumentsRequest: int TRANSACTION_FIELD_NUMBER
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
com.google.firestore.v1.Value: int TIMESTAMP_VALUE_FIELD_NUMBER
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsVariationSelector(int)
com.mapbox.geojson.utils.PolylineUtils: java.util.List simplifyDouglasPeucker(java.util.List,double)
io.grpc.internal.DnsNameResolver$JdkAddressResolver: io.grpc.internal.DnsNameResolver$JdkAddressResolver valueOf(java.lang.String)
com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue: com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue[] values()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextMaxAngle()
com.mapbox.geojson.Feature$GsonTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.mapbox.mapboxsdk.style.layers.Layer: void nativeSetFilter(java.lang.Object[])
com.google.firebase.firestore.proto.NoDocument
com.google.gson.JsonArray: com.google.gson.JsonElement remove(int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: void nativeSetBearingImageSizeTransition(long,long)
com.mapbox.mapboxsdk.style.sources.GeoJsonSource: void nativeSetUrl(java.lang.String)
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: void setSize(int,int)
com.mapbox.geojson.Point$GsonTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
com.google.android.gms.internal.measurement.zzcd$zze: com.google.android.gms.internal.measurement.zzig zzi
com.mapbox.geojson.Point: com.mapbox.geojson.BoundingBox bbox
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle[] values()
com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase: com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase[] values()
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: java.lang.String model
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
com.mapbox.mapboxsdk.style.sources.CustomGeometrySource: void nativeSetTileData(int,int,int,com.mapbox.geojson.FeatureCollection)
com.google.firebase.auth.FirebaseAuth: com.google.firebase.auth.FirebaseAuth getInstance()
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
com.google.firestore.v1.CommitRequest
com.mapbox.mapboxsdk.style.sources.GeoJsonSource: void nativeSetGeoJsonString(java.lang.String)
com.google.gson.typeadapters.RuntimeTypeAdapterFactory: RuntimeTypeAdapterFactory(java.lang.Class,java.lang.String,boolean)
com.mapbox.mapboxsdk.offline.OfflineManager: void createOfflineRegion(com.mapbox.mapboxsdk.storage.FileSource,com.mapbox.mapboxsdk.offline.OfflineRegionDefinition,byte[],com.mapbox.mapboxsdk.offline.OfflineManager$CreateOfflineRegionCallback)
com.mapbox.android.telemetry.VisionObjectDetectionEvent
com.mapbox.mapboxsdk.maps.NativeMapView: boolean nativeRemoveLayerAt(int)
com.google.firestore.v1.Cursor
com.google.android.gms.internal.firebase-auth-api.zzhj: int zzb
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeAddLayer(long,java.lang.String)
com.mapbox.mapboxsdk.module.telemetry.PhoneState$Orientation: PhoneState$Orientation(java.lang.String,int,java.lang.String)
com.mapbox.geojson.Polygon: java.util.List coordinates
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.mapbox.mapboxsdk.style.sources.CustomGeometrySource: void releaseThreads()
com.mapbox.geojson.LineString: java.util.List coordinates
com.mapbox.mapboxsdk.offline.OfflineRegionDefinition
com.mapbox.geojson.gson.BoundingBoxTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
org.chromium.support_lib_boundary.FeatureFlagHolderBoundaryInterface
com.google.android.gms.internal.measurement.zzbv$zza: boolean zzg
com.google.android.gms.internal.measurement.zzck$zzd
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setCurrentScreen(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,java.lang.String,long)
com.mapbox.geojson.PointAsCoordinatesTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.google.i18n.phonenumbers.PhoneNumberUtil$ValidationResult: com.google.i18n.phonenumbers.PhoneNumberUtil$ValidationResult valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
com.google.android.gms.internal.firebase-auth-api.zzgq: com.google.android.gms.internal.firebase-auth-api.zzym zzf
com.google.android.exoplayer2.source.dash.DashMediaSource$Factory: DashMediaSource$Factory(com.google.android.exoplayer2.upstream.DataSource$Factory)
com.mapbox.geojson.FeatureCollection: java.util.List features
com.google.firebase.firestore.proto.Target: com.google.protobuf.Parser PARSER
com.mapbox.geojson.MultiPolygon: com.mapbox.geojson.MultiPolygon fromPolygons(java.util.List)
com.google.firestore.v1.Precondition: java.lang.Object conditionType_
com.google.firestore.v1.DocumentTransform$FieldTransform: int FIELD_PATH_FIELD_NUMBER
com.mapbox.mapboxsdk.module.telemetry.PhoneState: java.lang.String created
com.google.firestore.v1.Cursor: com.google.firestore.v1.Cursor DEFAULT_INSTANCE
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetReachability(boolean)
com.google.gson.JsonArray: void add(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.mapbox.geojson.Polygon: boolean isLinearRing(com.mapbox.geojson.LineString)
com.google.firestore.v1.WriteRequest: com.google.protobuf.Parser PARSER
com.google.firestore.v1.DocumentTransform$FieldTransform: int MINIMUM_FIELD_NUMBER
com.mapbox.mapboxsdk.log.Logger: com.mapbox.mapboxsdk.log.LoggerDefinition DEFAULT
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getTestFlag(com.google.android.gms.internal.measurement.zzw,int)
com.mapbox.mapboxsdk.style.light.Light
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
androidx.media.AudioAttributesImplBaseParcelizer
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
com.mapbox.mapboxsdk.offline.OfflineManager: void nativeSetMaximumAmbientCacheSize(long,com.mapbox.mapboxsdk.offline.OfflineManager$FileSourceCallback)
com.mapbox.mapboxsdk.style.layers.LineLayer: void nativeSetLineWidthTransition(long,long)
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy valueOf(java.lang.String)
com.google.firestore.v1.StructuredQuery: int offset_
com.google.common.util.concurrent.AbstractFuture: java.lang.Object value
com.google.android.exoplayer2.metadata.dvbsi.AppInfoTable: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.maps.NativeMapView: void onWillStartLoadingMap()
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag valueOf(java.lang.String)
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
com.google.firebase.auth.PhoneMultiFactorInfo: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetGestureInProgress(boolean)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture()
com.google.gson.JsonElement: java.lang.Number getAsNumber()
org.chromium.support_lib_boundary.WebMessageBoundaryInterface
com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: android.content.Context appContext
com.mapbox.mapboxsdk.style.layers.CircleLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetCircleStrokeColorTransition()
com.mapbox.mapboxsdk.maps.NativeMapView: long nativeGetTransitionDelay()
com.mapbox.mapboxsdk.log.Logger: int INFO
com.mapbox.geojson.MultiPolygon$GsonTypeAdapter: com.mapbox.geojson.CoordinateContainer createCoordinateContainer(java.lang.String,com.mapbox.geojson.BoundingBox,java.util.List)
com.google.android.gms.maps.model.LatLngBounds: android.os.Parcelable$Creator CREATOR
com.google.gson.JsonArray: com.google.gson.JsonElement deepCopy()
com.google.android.gms.safetynet.SafeBrowsingData: android.os.Parcelable$Creator CREATOR
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState state
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
com.mapbox.geojson.MultiPolygon$GsonTypeAdapter: com.mapbox.geojson.MultiPolygon read(com.google.gson.stream.JsonReader)
com.mapbox.mapboxsdk.offline.OfflineManager: void nativePackDatabase(com.mapbox.mapboxsdk.offline.OfflineManager$FileSourceCallback)
com.google.android.gms.internal.measurement.zzcd$zzh: com.google.android.gms.internal.measurement.zzjs zzg
com.google.android.gms.internal.firebase-auth-api.zzlu: android.os.Parcelable$Creator CREATOR
com.mapbox.geojson.shifter.CoordinateShifterManager: void setCoordinateShifter(com.mapbox.geojson.shifter.CoordinateShifter)
com.google.protobuf.NullValue: com.google.protobuf.NullValue valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
com.google.android.gms.measurement.AppMeasurement: void endAdUnitExposure(java.lang.String)
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: int COLORSPACE_BT2020
com.google.firestore.v1.ListenResponse: int DOCUMENT_CHANGE_FIELD_NUMBER
io.flutter.embedding.engine.FlutterJNI: void deferredComponentInstallFailure(int,java.lang.String,boolean)
com.mapbox.geojson.shifter.CoordinateShifter
com.mapbox.mapboxsdk.maps.renderer.MapRendererRunnable: void finalize()
com.mapbox.android.telemetry.VisionEvent: int describeContents()
com.mapbox.mapboxsdk.style.light.Light: void nativeSetAnchor(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzgk: int zzf
com.google.firestore.v1.WriteResponse: com.google.protobuf.Timestamp commitTime_
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getAllowFileAccess()
com.google.rpc.Status: int CODE_FIELD_NUMBER
